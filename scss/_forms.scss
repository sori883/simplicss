// stylelint-disable selector-no-qualifying-type

// text form

.form-control {
  display: block;
  width: 100%;
  height: $input-height;
  padding: $input-padding-y $input-padding-x;
  font-family: $input-font-family;
  @include font-size($input-font-size);
  font-weight: $input-font-weight;
  line-height: $input-line-height;
  color: $input-color;
  background-color: $input-bg;
  background-clip: padding-box;
  border: $input-border-width solid $input-border-color;

  // Note: <select>のスタイルが限定的なので一部ブラウザの<select>には反映されない
  @include border-radius($input-border-radius);

  @include box-shadow($input-box-shadow);
  @include transition($input-transition);

  // IEではキャロットのスタイルを解除する
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // FireFoxからアウトラインを削除
  &:-moz-focusring {
    color: transparent;
    text-shadow: 0 0 0 $input-color;
  }

  // :focusを生成
  @include form-control-focus($ignore-warning: true);

  // Placeholder
  &::placeholder {
    color: $input-placeholder-color;
    // Filefoxのデフォルトopacityをオーバライド see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  // Disabled and read-only input
  &:disabled,
  &[readonly] {
    background-color: $input-disabled-bg;
    //iOSのdisbleとreadonlyの<input>が半透明にならいないようオーバライド; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
  }
}

select.form-control {
  &:focus::-ms-value {
    // 閉じている<select>がIEとEdgeでフォーカスされたとき、選択された<option>が白いテキストをハイライト表示しないようにする
    // See https://github.com/twbs/bootstrap/issues/19398.
    color: $input-color;
    background-color: $input-bg;
  }
}

// display: blockにして強制的に改行することで、ファイルinputとテキストinputのスタイルを同じにする
.form-control-file,
.form-control-range {
  display: block;
  width: 100%;
}

// ラベル

// 水平またはインラインフレームで使用する場合、ラベルをform-controlと整列させる
.col-form-label {
  padding-top: add($input-padding-y, $input-border-width);
  padding-bottom: add($input-padding-y, $input-border-width);
  margin-bottom: 0; // デフォルトの<label><legend>をオーバライドする
  @include font-size(inherit); // デフォルトの<legend>をオーバライドする
  line-height: $input-line-height;
}

.col-form-label-lg {
  padding-top: add($input-padding-y-lg, $input-border-width);
  padding-bottom: add($input-padding-y-lg, $input-border-width);
  @include font-size($input-font-size-lg);
  line-height: $input-line-height-lg;
}

.col-form-label-sm {
  padding-top: add($input-padding-y-sm, $input-border-width);
  padding-bottom: add($input-padding-y-sm, $input-border-width);
  @include font-size($input-font-size-sm);
  line-height: $input-line-height-sm;
}

// formを通常テキストのように表示する

.form-control-plaintext {
  display: block;
  width: 100%;
  padding: $input-padding-y 0;
  margin-bottom: 0; // デフォルトでmargin-bottomがある<input>のmargin-bottomを削除する
  @include font-size($input-font-size);
  line-height: $input-line-height;
  color: $input-plaintext-color;
  background-color: transparent;
  border: solid transparent;
  border-width: $input-border-width 0;

  &.form-control-sm,
  &.form-control-lg {
    padding-right: 0;
    padding-left: 0;
  }
}

// Form controlサイズ

// sassの拡張機能の問題で、_input_group.scssで同様の記述をする
.form-control-sm {
  height: $input-height-sm;
  padding: $input-padding-y-sm $input-padding-x-sm;
  @include font-size($input-font-size-sm);
  line-height: $input-line-height-sm;
  @include border-radius($input-border-radius-sm);
}

.form-control-lg {
  height: $input-height-lg;
  padding: $input-padding-y-lg $input-padding-x-lg;
  @include font-size($input-font-size-lg);
  line-height: $input-line-height-lg;
  @include border-radius($input-border-radius-lg);
}

// stylelint-disable-next-line no-duplicate-selectors
select.form-control {
  &[size],
  &[multiple] {
    height: auto;
  }
}

textarea.form-control {
  height: auto;
}

// Form groups
.form-group {
  margin-bottom: $form-group-margin-bottom;
}

.form-text {
  display: block;
  margin-top: $form-text-margin-top;
}

// Form grid
//
// グリッドの.rowをform用の.form-rowにしてより厳密なフォームレイアウトにする

.form-row {
  display: flex;
  flex-wrap: wrap;
  margin-right: -$form-grid-gutter-width / 2;
  margin-left: -$form-grid-gutter-width / 2;

  > .col,
  > [class*="col-"] {
    padding-right: $form-grid-gutter-width / 2;
    padding-left: $form-grid-gutter-width / 2;
  }
}


// チェックボックスとラジオボタン
//
// ラベルをインデントする

.form-check {
  position: relative;
  display: block;
  padding-left: $form-check-input-gutter;
}

.form-check-input {
  position: absolute;
  margin-top: $form-check-input-margin-y;
  margin-left: -$form-check-input-gutter;

  &[disabled] ~ .form-check-label,
  &:disabled ~ .form-check-label {
    color: $text-muted;
  }
}

.form-check-label {
  margin-bottom: 0; // labelのmargin-bottomをオーバライドする
}

.form-check-inline {
  display: inline-flex;
  align-items: center;
  padding-left: 0; // .form-checkのデフォルトをオーバライドする
  margin-right: $form-check-inline-margin-x;

  // .form-check-inputのデフォルトをオーバライドして、margin-rightを追加する
  .form-check-input {
    position: static;
    margin-top: 0;
    margin-right: $form-check-inline-input-margin-x;
    margin-left: 0;
  }
}

// Form validation
//
// フォームの値が有効または無効の場合にinput周りの色を変更する

@each $state, $data in $form-validation-states {
  @include form-validation-state($state, map-get($data, color), map-get($data, icon));
}

// Inline forms

// .form-groupとかでラップする必要がある
.form-inline {
  display: flex;
  flex-flow: row wrap;
  align-items: center; // 小さい要素が他の要素と同じ高さになるのを防ぐ

  // flexを使用すると、チェックボックスの初期サイズが折りたたまれるので、
  // xsグリッド層を占領しないためにする
  .form-check {
    width: 100%;
  }

  @include media-breakpoint-up(sm) {
    label {
      display: flex;
      align-items: center;
      justify-content: center;
      margin-bottom: 0;
    }

    // inlineをinline-blockにする
    .form-group {
      display: flex;
      flex: 0 0 auto;
      flex-flow: row wrap;
      align-items: center;
      margin-bottom: 0;
    }

    .form-control {
      display: inline-block;
      width: auto; // .form-groupの入力にラベルが重ならないようにする
      vertical-align: middle;
    }

    // 静的controlを通常のcontrolの用に動作させる
    .form-control-plaintext {
      display: inline-block;
    }

    .input-group,
    .custom-select {
      width: auto;
    }

    // チェックボックスとラジオのデフォルトの余白を削除して、回り込みをもとに戻す
    .form-check {
      display: flex;
      align-items: center;
      justify-content: center;
      width: auto;
      padding-left: 0;
    }
    .form-check-input {
      position: relative;
      flex-shrink: 0;
      margin-top: 0;
      margin-right: $form-check-input-margin-x;
      margin-left: 0;
    }

    .custom-control {
      align-items: center;
      justify-content: center;
    }
    .custom-control-label {
      margin-bottom: 0;
    }
  }
}