// ユーティリティ作成
@mixin generate-utility($utility, $infix) {
    
    $values: map-get($utility, values);

    // valuesがstringかつvaluesの中身がlist
    @if type-of($values) == "string" or type-of(nth($values, 1)) != "list" {
      // 下のeachで使うために
      // keyとvalue用にvalues同士でまとめる(left left, right right的な)
      $values: zip($values, $values);
    }  
    @each $key, $value in $values {
      $properties: map-get($utility, property);

      // プロパティが1つしかない場合は、(text-align,)にする
      // 複数あった場合はmargin-right margin-leftみたいにする
      @if type-of($properties) == "string" {
        $properties: append((), $properties);
      }

      // クラスを取得
      $property-class: map-get($utility, class);
      // クラスがない場合はプロパティの1個目をクラス名にする
      $property-class: if($property-class, $property-class, nth($properties, 1));
  
      // ユーティリティのvaluesにnullがあった場合、空文字を入れる
      // nullじゃなかったら-$keyを入れる
      $property-class-modifier: if($key, "-" + $key, "");

      //クラス作成
      .#{$property-class + $infix + $property-class-modifier} {
        @each $property in $properties {
          // stylelint-disable-next-line declaration-no-important
          #{$property}: $value !important;
        }
      }
    }
  }
  