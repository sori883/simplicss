{"version":3,"sources":["../../js/src/util.js","../../js/src/alert.js"],"names":["TRANSITION_END","transitionEndEmulator","duration","_this","this","called","$","one","Util","setTimeout","triggerTransitionEnd","getUID","prefix","Math","random","document","getElementById","getSelectorFromElement","element","selector","getAttribute","hrefAttr","trim","querySelector","err","getTransitionDurationFromElement","transitionDuration","css","transitionDelay","floatTransitionDuration","parseFloat","floatTransitionDelay","split","reflow","offsetHeight","trigger","supportsTransitionEnd","Boolean","isElement","obj","nodeType","typeCheckConfig","componentName","config","configTypes","property","Object","prototype","hasOwnProperty","call","expectedTypes","value","valueType","toString","match","toLowerCase","RegExp","test","Error","toUpperCase","findShadowRoot","documentElement","attachShadow","getRootNode","ShadowRoot","parentNode","root","jQueryDetection","TypeError","version","fn","jquery","emulateTransitionEnd","event","special","bindType","delegateType","handle","target","is","handleObj","handler","apply","arguments","NAME","DATA_KEY","EVENT_KEY","JQUERY_NO_CONFLICT","Event","CLOSE","CLOSED","CLICK_DATA_API","ClassName","Alert","_element","close","rootElement","_getRootElement","_triggerCloseEvent","isDefaultPrevented","_removeElement","dispose","removeData","parent","closest","closeEvent","removeClass","hasClass","_destroyElement","detach","remove","_jQueryInterface","each","$element","data","_handleDismiss","alertInstance","preventDefault","on","Constructor","noConflict"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * simplicss (v4.3.1): util.js\n * Licensed under MIT (https://github.com/twbs/simplicss/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\n\n/**\n * ------------------------------------------------------------------------\n * Private TransitionEnd Helpers\n * ------------------------------------------------------------------------\n */\n\n // transitionendイベント用で変数になってるのはprefixをつけるから？\nconst TRANSITION_END = 'transitionend'\nconst MAX_UID = 1000000\nconst MILLISECONDS_MULTIPLIER = 1000\n\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\n// オブジェクトの型を判定する\nfunction toType(obj) {\n  return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\n//\nfunction getSpecialTransitionEndEvent() {\n  return {\n    bindType: TRANSITION_END,\n    delegateType: TRANSITION_END,\n    handle(event) {\n      if ($(event.target).is(this)) {\n        return event.handleObj.handler.apply(this, arguments) // eslint-disable-line prefer-rest-params\n      }\n      return undefined // eslint-disable-line no-undefined\n    }\n  }\n}\n\n// transitionの遷移時間を引数でもらう\nfunction transitionEndEmulator(duration) {\n  let called = false\n\n  // 呼び出しもとのエレメントでTRANSITION_ENDを実行\n  $(this).one(Util.TRANSITION_END, () => {\n    // コールバックをtrueにする\n    called = true\n  })\n\n  setTimeout(() => {\n    // falseだったらtriggerTransitionEndを実行する\n    if (!called) {\n      Util.triggerTransitionEnd(this)\n    }\n  }, duration) // settimeoutの時間は引数の遷移時間\n  // エレメントを返す\n  return this\n}\n\nfunction setTransitionEndSupport() {\n  // Jqueryのカスタムプラグインを作成\n  $.fn.emulateTransitionEnd = transitionEndEmulator\n  $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent()\n}\n\n/**\n * --------------------------------------------------------------------------\n * Public Util Api\n * --------------------------------------------------------------------------\n */\n\nconst Util = {\n\n  TRANSITION_END: 'scTransitionEnd',\n\n  getUID(prefix) {\n    do {\n      // eslint-disable-next-line no-bitwise\n      prefix += ~~(Math.random() * MAX_UID) // \"~~\" acts like a faster Math.floor() here\n    } while (document.getElementById(prefix))\n    return prefix\n  },\n\n  getSelectorFromElement(element) {\n    // 引数elementのdata-target属性の値を取得\n    let selector = element.getAttribute('data-target')\n\n    // data-targetが存在しないか#の場合\n    if (!selector || selector === '#') {\n      // 引数elementのhref属性の値を取得\n      const hrefAttr = element.getAttribute('href')\n      // hrefAttrがなかったら左のhrefAttrを返す=ifはfalseになり''が代入される\n      // hrefAttrがあったら#かどうかを判定して、#じゃなかったらtrimする。\n      // trim: https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/String/trim\n      selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : ''\n    }\n\n    try {\n      // html内のdata-targetもしくはhregで指定されているselectorを返す\n      // data-targetかtrimされたhrefのどっちか\n      // なかったらnullを返す\n      return document.querySelector(selector) ? selector : null\n    } catch (err) {\n      // エラーになったらnullを返す\n      return null\n    }\n  },\n\n  // 要素から遷移時間を取得\n  getTransitionDurationFromElement(element) {\n    // エレメントがなかったら0を返す\n    if (!element) {\n      return 0\n    }\n\n    // transition-durationとtransition-delayの値を取得\n    let transitionDuration = $(element).css('transition-duration')\n    let transitionDelay = $(element).css('transition-delay')\n\n    // 浮動小数点を取得\n    const floatTransitionDuration = parseFloat(transitionDuration)\n    const floatTransitionDelay = parseFloat(transitionDelay)\n\n    // cssプロパティ、値がなければ0を返す\n    if (!floatTransitionDuration && !floatTransitionDelay) {\n      return 0\n    }\n\n    // 複数値が指定されてたら最初の1つだけ取得する\n    transitionDuration = transitionDuration.split(',')[0]\n    transitionDelay = transitionDelay.split(',')[0]\n\n    // 変化にかかる時間(transitionDuration)と変化が始める時間(transitionDelay)を足して1000をかけて(秒にする)返す\n    return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER // ×1000する\n  },\n\n  reflow(element) {\n    return element.offsetHeight\n  },\n\n  // 引数エレメントでtrainsition_endイベントを実行する\n  triggerTransitionEnd(element) {\n    $(element).trigger(TRANSITION_END)\n  },\n\n  // TODO: Remove in v5\n  supportsTransitionEnd() {\n    return Boolean(TRANSITION_END)\n  },\n\n  isElement(obj) {\n    return (obj[0] || obj).nodeType\n  },\n\n  typeCheckConfig(componentName, config, configTypes) {\n    for (const property in configTypes) {\n      if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n        const expectedTypes = configTypes[property]\n        const value         = config[property]\n        const valueType     = value && Util.isElement(value)\n          ? 'element' : toType(value)\n\n        if (!new RegExp(expectedTypes).test(valueType)) {\n          throw new Error(\n            `${componentName.toUpperCase()}: ` +\n            `Option \"${property}\" provided type \"${valueType}\" ` +\n            `but expected type \"${expectedTypes}\".`)\n        }\n      }\n    }\n  },\n\n  findShadowRoot(element) {\n    if (!document.documentElement.attachShadow) {\n      return null\n    }\n\n    // Can find the shadow root otherwise it'll return the document\n    if (typeof element.getRootNode === 'function') {\n      const root = element.getRootNode()\n      return root instanceof ShadowRoot ? root : null\n    }\n\n    if (element instanceof ShadowRoot) {\n      return element\n    }\n\n    // when we don't find a shadow root\n    if (!element.parentNode) {\n      return null\n    }\n\n    return Util.findShadowRoot(element.parentNode)\n  },\n\n  jQueryDetection() {\n    if (typeof $ === 'undefined') {\n      throw new TypeError('simplicss\\'s JavaScript requires jQuery. jQuery must be included before simplicss\\'s JavaScript.')\n    }\n\n    const version = $.fn.jquery.split(' ')[0].split('.')\n    const minMajor = 1\n    const ltMajor = 2\n    const minMinor = 9\n    const minPatch = 1\n    const maxMajor = 4\n\n    if (version[0] < ltMajor && version[1] < minMinor || version[0] === minMajor && version[1] === minMinor && version[2] < minPatch || version[0] >= maxMajor) {\n      throw new Error('simplicss\\'s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0')\n    }\n  }\n}\n\nUtil.jQueryDetection()\nsetTransitionEndSupport()\n\nexport default Util\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.3.1): alert.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\nconst NAME                = 'alert'\nconst VERSION             = '0.5.2'\n\nconst DATA_KEY            = 'sc.alert'\n// アラート閉じた時のイベントとかに使うみたい\n// http://bootstrap3.cyberlab.info/javascript/alerts-events.html\nconst EVENT_KEY           = `.${DATA_KEY}`\n// イベントを無効にする用\n// https://getbootstrap.jp/docs/4.1/getting-started/javascript/\nconst DATA_API_KEY        = '.data-api'\n// 他のフレームワークと名前衝突を回避する用\nconst JQUERY_NO_CONFLICT  = $.fn[NAME]\n\n// アラート消す用\nconst Selector = {\n  DISMISS : '[data-dismiss=\"alert\"]'\n}\n\n// イベント用の名前\n// e.g. close.sc.alert\nconst Event = {\n  CLOSE          : `close${EVENT_KEY}`,\n  CLOSED         : `closed${EVENT_KEY}`,\n  CLICK_DATA_API : `click${EVENT_KEY}${DATA_API_KEY}`\n}\n\n// htmlのクラス名\nconst ClassName = {\n  ALERT : 'alert',\n  FADE  : 'fade',\n  SHOW  : 'show'\n}\n\nclass Alert {\n  constructor(element) {\n    this._element = element\n  }\n\n  // バージョンのゲッター\n  static get VERSION() {\n    return VERSION\n  }\n\n  // public method\n\n  close(element) {\n    // このクラス内のthisはalertクラス\n\n    // コンストラクタで取得したelement\n    let rootElement = this._element\n\n    // closeにelementが引数で渡されていたら\n    if (element) {\n      // div.alertを取得\n      rootElement = this._getRootElement(element)\n    }\n\n    // カスタムイベントを作成\n    const customEvent = this._triggerCloseEvent(rootElement)\n\n    // イベントがブラウザの処理を禁止していた場合は闇に葬り去る\n    // http://www.jquerystudy.info/reference/events/isDefaultPrevented.html\n    if (customEvent.isDefaultPrevented()) {\n      return\n    }\n\n    // showクラスを削除する\n    // fadeクラスがなかった場合、要素を削除する\n    this._removeElement(rootElement)\n  }\n\n  // this._elementを削除するみたい\n  dispose() {\n    $.removeData(this._element, DATA_KEY)\n    this._element = null\n  }\n\n  // private method\n\n  // closeで使ってるやつ\n  _getRootElement(element) {\n    // elementのdata-targetもしくはhrefで指定されているselectorを取得\n    const selector = Util.getSelectorFromElement(element)\n    let parent     = false\n\n    // selectorがあった場合\n    if (selector) {\n      // data-targetもしくはhrefで指定されている要素を取得\n      // 開始タグから終了タグまで持ってくるみたい\n      parent = document.querySelector(selector)\n    }\n\n    // 上のifを通らなかったか通ってもnullが帰ってきた場合\n    if (!parent) {\n      // data-targetもしくはhrefが指定されてないので、一番近い.alertを取得する\n      parent = $(element).closest(`.${ClassName.ALERT}`)[0]\n    }\n\n    return parent\n  }\n\n  // closeで使ってるやつ\n  _triggerCloseEvent(element) {\n    // close.sc.alertイベントを定義\n    const closeEvent = $.Event(Event.CLOSE)\n\n    $(element).trigger(closeEvent) // closeイベントを発生\n    // closeEvent返すんか\n    return closeEvent\n  }\n\n  // closeで使ってるやつ\n  _removeElement(element) {\n    // showクラスを削除\n    $(element).removeClass(ClassName.SHOW)\n\n    // fadeクラスを持ってなかった場合\n    if (!$(element).hasClass(ClassName.FADE)) {\n      // アラートを削除\n      this._destroyElement(element)\n      return // eslint-disable-line no-useless-return\n    }\n\n    // 要素の変化にかかる時間を取得\n    const transitionDuration = Util.getTransitionDurationFromElement(element)\n\n    $(element)\n      // .oneは一回だけ実行するイベント。TRANSITION_ENDはイベント名。\n      // エレメントを削除してclosedイベントを実行する\n      .one(Util.TRANSITION_END, (event) => this._destroyElement(element, event))\n      // util.jsのtransitionEndEmulatorを実行\n      .emulateTransitionEnd(transitionDuration)\n  }\n\n  // _removeElementで使ってるやつ\n  _destroyElement(element) {\n    $(element) // elementを。。。\n      .detach() // elementを隔離\n      .trigger(Event.CLOSED) // closedイベントを発生させる\n      .remove() // element削除\n      // https://qiita.com/BRSF/items/1aa9d154bde497b0baa0#remove%E3%81%AE%E5%A0%B4%E5%90%88\n  }\n\n  // static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      // elementを格納\n      const $element = $(this)\n      // elementのdata-sc.alert属性を取得\n      let data       = $element.data(DATA_KEY)\n\n      // dataがなかったら\n      if (!data) {\n        // アラートをインスタンス化\n        // thisはelement\n        data = new Alert(this)\n        // elementにdata-sc.alertを設定\n        // 中身はdata\n        $element.data(DATA_KEY, data)\n      }\n\n      // configがcloseだったら・・・・\n      if (config === 'close') {\n        // alert.close(element)になる\n        data[config](this)\n      }\n    })\n  }\n\n  static _handleDismiss(alertInstance) {\n    return function (event) {\n      // イベントがあったら\n      if (event) {\n        // イベントの動作を停止させる\n        event.preventDefault()\n      }\n\n      // 引数で受け取ったalertインスタンスのcloseを実行\n      // 引数はhtmlのbutton\n      alertInstance.close(this)\n    }\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Apiの定義\n * ------------------------------------------------------------------------\n */\n\n// ここがブラウザで使う部分みたい\n$(document).on(\n  Event.CLICK_DATA_API, // click.sc.alert.data-api\n  Selector.DISMISS, // [data-dismiss=\"alert\"]\n  Alert._handleDismiss(new Alert()) // staticのやつ実行するんだね\n)\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n// .alertは_jQueryInterface\n$.fn[NAME]             = Alert._jQueryInterface\n// .alert.ConstructorはAlert\n$.fn[NAME].Constructor = Alert\n\n// .alert.noConflict\n// 衝突回避用\n$.fn[NAME].noConflict  = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Alert._jQueryInterface\n}\n\n\nexport default Alert\n"]}