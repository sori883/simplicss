{"version":3,"sources":["../../js/src/util.js","../../js/src/alert.js","../../js/src/button.js","../../js/src/collapse.js","../../js/src/dropdown.js","../../js/src/modal.js","../../js/src/tools/sanitizer.js","../../js/src/tooltip.js","../../js/src/popover.js","../../js/src/toast.js"],"names":["TRANSITION_END","transitionEndEmulator","duration","_this","this","called","$","one","Util","setTimeout","triggerTransitionEnd","getUID","prefix","Math","random","document","getElementById","getSelectorFromElement","element","selector","getAttribute","hrefAttr","trim","querySelector","err","getTransitionDurationFromElement","transitionDuration","css","transitionDelay","floatTransitionDuration","parseFloat","floatTransitionDelay","split","reflow","offsetHeight","trigger","supportsTransitionEnd","Boolean","isElement","obj","nodeType","typeCheckConfig","componentName","config","configTypes","property","Object","prototype","hasOwnProperty","call","expectedTypes","value","valueType","toString","match","toLowerCase","RegExp","test","Error","toUpperCase","findShadowRoot","documentElement","attachShadow","getRootNode","ShadowRoot","parentNode","root","jQueryDetection","TypeError","version","fn","jquery","emulateTransitionEnd","event","special","bindType","delegateType","handle","target","is","handleObj","handler","apply","arguments","NAME","DATA_KEY","EVENT_KEY","JQUERY_NO_CONFLICT","Event","CLOSE","CLOSED","CLICK_DATA_API","ClassName","Alert","_element","close","rootElement","_getRootElement","_triggerCloseEvent","isDefaultPrevented","_removeElement","dispose","removeData","parent","closest","closeEvent","removeClass","hasClass","_destroyElement","detach","remove","_jQueryInterface","each","$element","data","_handleDismiss","alertInstance","preventDefault","on","Constructor","noConflict","DATA_API_KEY","Selector","FOCUS_BLUR_DATA_API","LOAD_DATA_API","Button","toggle","triggerChangeEvent","addAriaPressed","input","type","checked","classList","contains","activeElement","tagName","focus","hasAttribute","setAttribute","toggleClass","button","inputBtn","window","buttons","slice","querySelectorAll","i","len","length","add","Default","DefaultType","SHOW","SHOWN","HIDE","HIDDEN","Dimension","Collapse","_isTransitioning","_config","_getConfig","_triggerArray","id","toggleList","elem","filterElement","filter","foundElem","_selector","push","_parent","_getParent","_addAriaAndCollapsedClass","hide","show","actives","activesData","not","startEvent","dimension","_getDimension","addClass","style","attr","setTransitioning","scrollSize","_this2","getBoundingClientRect","triggerArrayLength","isTransitioning","_objectSpread2","_this3","children","_getTargetFromElement","triggerArray","isOpen","$this","currentTarget","$trigger","selectors","$target","REGEXP_KEYDOWN","ARROW_UP_KEYCODE","CLICK","KEYDOWN_DATA_API","KEYUP_DATA_API","AttachmentMap","offset","flip","boundary","reference","display","popperConfig","Dropdown","_popper","_menu","_getMenuElement","_inNavbar","_detectNavbar","_addEventListeners","disabled","isActive","_clearMenus","usePopper","relatedTarget","showEvent","_getParentFromElement","Popper","referenceElement","_getPopperConfig","body","noop","hideEvent","destroy","off","update","scheduleUpdate","stopPropagation","constructor","_getPlacement","$parentDropdown","placement","_getOffset","offsets","modifiers","enabled","preventOverflow","boundariesElement","applyStyle","which","toggles","context","clickEvent","dropdownMenu","_dataApiKeydownHandler","items","item","index","indexOf","e","backdrop","keyboard","HIDE_PREVENTED","FOCUSIN","RESIZE","CLICK_DISMISS","KEYDOWN_DISMISS","MOUSEUP_DISMISS","MOUSEDOWN_DISMISS","Modal","_dialog","_backdrop","_isShown","_isBodyOverflowing","_ignoreBackdropClick","_scrollbarWidth","_checkScrollbar","_setScrollbar","_adjustDialog","_setEscapeEvent","_setResizeEvent","_showBackdrop","_showElement","transition","_hideModal","forEach","htmlElement","handleUpdate","_triggerBackdropTransition","hideEventPrevented","defaultPrevented","modalTransitionDuration","_this4","modalBody","Node","ELEMENT_NODE","appendChild","removeAttribute","scrollTop","_enforceFocus","transitionComplete","shownEvent","_this5","has","_this6","_this7","_this8","_resetAdjustments","_resetScrollbar","_removeBackdrop","callback","_this9","animate","createElement","className","appendTo","backdropTransitionDuration","callbackRemove","isModalOverflowing","scrollHeight","clientHeight","paddingLeft","paddingRight","rect","left","right","innerWidth","_getScrollbarWidth","_this10","fixedContent","stickyContent","actualPadding","calculatedPadding","actualMargin","marginRight","calculatedMargin","padding","elements","margin","scrollDiv","scrollbarWidth","width","clientWidth","removeChild","_this11","uriAttrs","DefaultWhitelist","*","a","area","b","br","col","code","div","em","hr","h1","h2","h3","h4","h5","h6","img","li","ol","p","pre","s","small","span","sub","sup","strong","u","ul","SAFE_URL_PATTERN","DATA_URL_PATTERN","sanitizeHtml","unsafeHtml","whiteList","sanitizeFn","createdDocument","DOMParser","parseFromString","whitelistKeys","keys","_loop","el","elName","nodeName","attributeList","attributes","whitelistedAttributes","concat","allowedAttributeList","attrName","nodeValue","regExp","attrRegex","l","allowedAttribute","innerHTML","CLASS_PREFIX","SCCLS_PREFIX_REGEX","DISALLOWED_ATTRIBUTES","animation","template","title","delay","html","container","fallbackPlacement","sanitize","AUTO","TOP","RIGHT","BOTTOM","LEFT","HoverState","INSERTED","FOCUSOUT","MOUSEENTER","MOUSELEAVE","Trigger","Tooltip","_isEnabled","_timeout","_hoverState","_activeTrigger","tip","_setListeners","enable","disable","toggleEnabled","dataKey","_getDelegateConfig","click","_isWithActiveTrigger","_enter","_leave","getTipElement","clearTimeout","_hideModalHandler","isWithContent","shadowRoot","isInTheDom","ownerDocument","tipId","setContent","attachment","_getAttachment","addAttachmentClass","_getContainer","complete","_fixTransition","prevHoverState","_cleanTipClass","getTitle","setElementContent","content","text","empty","append","behavior","arrow","onCreate","originalPlacement","_handlePopperPlacementChange","onUpdate","find","eventIn","eventOut","_fixTitle","titleType","dataAttributes","dataAttr","key","$tip","tabClass","join","popperData","popperInstance","instance","popper","initConfigAnimation","Popover","_getContent","autohide","Toast","_close"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * simplicss (v4.3.1): util.js\n * Licensed under MIT (https://github.com/twbs/simplicss/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\n\n/**\n * ------------------------------------------------------------------------\n * Private TransitionEnd Helpers\n * ------------------------------------------------------------------------\n */\n\n // transitionendイベント用で変数になってるのはprefixをつけるから？\nconst TRANSITION_END = 'transitionend'\nconst MAX_UID = 1000000\nconst MILLISECONDS_MULTIPLIER = 1000\n\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\n// オブジェクトの型を判定する\nfunction toType(obj) {\n  return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\n//\nfunction getSpecialTransitionEndEvent() {\n  return {\n    bindType: TRANSITION_END,\n    delegateType: TRANSITION_END,\n    handle(event) {\n      if ($(event.target).is(this)) {\n        return event.handleObj.handler.apply(this, arguments) // eslint-disable-line prefer-rest-params\n      }\n      return undefined // eslint-disable-line no-undefined\n    }\n  }\n}\n\n// transitionの遷移時間を引数でもらう\nfunction transitionEndEmulator(duration) {\n  let called = false\n\n  // 呼び出しもとのエレメントでTRANSITION_ENDで一度だけ実行\n  $(this).one(Util.TRANSITION_END, () => {\n    // コールバックをtrueにする\n    called = true\n  })\n\n  setTimeout(() => {\n    // falseだったらtriggerTransitionEndを実行する\n    if (!called) {\n      Util.triggerTransitionEnd(this)\n    }\n  }, duration) // settimeoutの時間は引数の遷移時間\n  // エレメントを返す\n  return this\n}\n\nfunction setTransitionEndSupport() {\n  // jQueryのカスタムプラグインを作成\n  $.fn.emulateTransitionEnd = transitionEndEmulator\n  $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent()\n}\n\n/**\n * --------------------------------------------------------------------------\n * Public Util Api\n * --------------------------------------------------------------------------\n */\n\nconst Util = {\n\n  TRANSITION_END: 'scTransitionEnd',\n\n  // prefixはNAME(tooltipだとtooltipとか)\n  getUID(prefix) {\n    do {\n      // eslint-disable-next-line no-bitwise\n      prefix += ~~(Math.random() * MAX_UID) // ランダムな値を生成\n    } while (document.getElementById(prefix)) // 一致するIDの分だけ続行\n    return prefix\n  },\n\n  getSelectorFromElement(element) {\n    // 引数elementのdata-target属性の値を取得\n    let selector = element.getAttribute('data-target')\n\n    // data-targetが存在しないか#の場合\n    if (!selector || selector === '#') {\n      // elementのhref属性の値を取得\n      const hrefAttr = element.getAttribute('href')\n      // hrefAttrが存在していてかつ、#かどうかを判定して、trueならhrefAttrをtrimして返す。falseなら、空文字を入れる\n      // trim: https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/String/trim\n      selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : ''\n    }\n\n    try {\n      // html要素内にselectorで指定されている要素が存在するか判定\n      // 存在していた場合、selectorを返す\n      // なかったらnullを返す\n      return document.querySelector(selector) ? selector : null\n    } catch (err) {\n      // エラーになったらnullを返す\n      return null\n    }\n  },\n\n  // 要素から遷移時間を取得\n  getTransitionDurationFromElement(element) {\n    // エレメントがなかったら0を返す\n    if (!element) {\n      return 0\n    }\n\n    // transition-durationとtransition-delayの値を取得\n    let transitionDuration = $(element).css('transition-duration')\n    let transitionDelay = $(element).css('transition-delay')\n\n    // 浮動小数点を取得\n    const floatTransitionDuration = parseFloat(transitionDuration)\n    const floatTransitionDelay = parseFloat(transitionDelay)\n\n    // cssプロパティ、値がなければ0を返す\n    if (!floatTransitionDuration && !floatTransitionDelay) {\n      return 0\n    }\n\n    // 複数値が指定されてたら最初の1つだけ取得する\n    transitionDuration = transitionDuration.split(',')[0]\n    transitionDelay = transitionDelay.split(',')[0]\n\n    // 変化にかかる時間(transitionDuration)と変化が始める時間(transitionDelay)を足して1000をかけて(秒にする)返す\n    return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER // ×1000する\n  },\n\n  reflow(element) {\n    // 要素の高さを取得する\n    // heightとpaddingとborderの合計値\n    return element.offsetHeight\n  },\n\n  // 引数エレメントでtrainsition_endイベントを実行する\n  triggerTransitionEnd(element) {\n    $(element).trigger(TRANSITION_END)\n  },\n\n  // TODO: Remove in v5\n  supportsTransitionEnd() {\n    return Boolean(TRANSITION_END)\n  },\n\n  // 引数がdom要素か判定する\n  // 違う場合はundefinedを返す\n  isElement(obj) {\n    return (obj[0] || obj).nodeType\n  },\n\n  // configの値がDefaultType\n  typeCheckConfig(componentName, config, configTypes) {\n    // default typeの分だけループ\n    // dropdownだとoffset、flipなどなど\n    for (const property in configTypes) {\n      // Object.prototype.hasOwnPropertyはオブジェクトにpropertyがあるか判定する\n      // offsetプロパティが、configTypesにあるか\n      if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n        // configTypesからプロパティの値を取得(正規表現で使う文字列)\n        const expectedTypes = configTypes[property]\n        // configの中からpropertyの値を取得\n        const value = config[property]\n        // valueが存在してdom要素だった場合は文字列(element)を格納\n        // falseの場合は型を判定して格納\n        const valueType = value && Util.isElement(value)\n          ? 'element' : toType(value)\n\n        //  expectedTypesの正規表現に、valueTypeが一致しているか確認\n        if (!new RegExp(expectedTypes).test(valueType)) {\n          // 一致してなかったらthrowする\n          throw new Error(\n            `${componentName.toUpperCase()}: ` +\n            `Option \"${property}\" provided type \"${valueType}\" ` +\n            `but expected type \"${expectedTypes}\".`)\n        }\n      }\n    }\n  },\n\n  findShadowRoot(element) {\n    // shadow domが関連付けされてないときはnullを返す\n    if (!document.documentElement.attachShadow) {\n      return null\n    }\n\n    // elementのgetRootNodeがfunctionなら\n    if (typeof element.getRootNode === 'function') {\n      // elementのroot要素を取得\n      const root = element.getRootNode()\n      // rootがshadowrootのインスタンスならrootを返す。\n      // そうじゃない場合はnullを返す\n      return root instanceof ShadowRoot ? root : null\n    }\n\n    // elementがshadow domのインスタンス\n    // つまりshadow domの要素だったら、elementを返す\n    if (element instanceof ShadowRoot) {\n      return element\n    }\n\n    // shadow domのルートが探せない場合はnullを返す\n    if (!element.parentNode) {\n      return null\n    }\n    // elementのparentNodeに対して同じ操作を繰り返す\n    return Util.findShadowRoot(element.parentNode)\n  },\n\n  jQueryDetection() {\n    if (typeof $ === 'undefined') {\n      throw new TypeError('simplicss\\'s JavaScript requires jQuery. jQuery must be included before simplicss\\'s JavaScript.')\n    }\n\n    const version = $.fn.jquery.split(' ')[0].split('.')\n    const minMajor = 1\n    const ltMajor = 2\n    const minMinor = 9\n    const minPatch = 1\n    const maxMajor = 4\n\n    if (version[0] < ltMajor && version[1] < minMinor || version[0] === minMajor && version[1] === minMinor && version[2] < minPatch || version[0] >= maxMajor) {\n      throw new Error('simplicss\\'s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0')\n    }\n  }\n}\n\nUtil.jQueryDetection()\nsetTransitionEndSupport()\n\nexport default Util\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.3.1): alert.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\nconst NAME = 'alert'\nconst VERSION = '0.5.2'\n\nconst DATA_KEY = 'sc.alert'\n// アラート閉じた時のイベントとかに使うみたい\n// http://bootstrap3.cyberlab.info/javascript/alerts-events.html\nconst EVENT_KEY = `.${DATA_KEY}`\n// イベントを無効にする用\n// https://getbootstrap.jp/docs/4.1/getting-started/javascript/\nconst DATA_API_KEY = '.data-api'\n// 他のフレームワークと名前衝突を回避する用\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\n\n// アラート消す用\nconst Selector = {\n  DISMISS : '[data-dismiss=\"alert\"]'\n}\n\n// イベント用の名前\n// e.g. close.sc.alert\nconst Event = {\n  CLOSE : `close${EVENT_KEY}`,\n  CLOSED : `closed${EVENT_KEY}`,\n  CLICK_DATA_API : `click${EVENT_KEY}${DATA_API_KEY}`\n}\n\n// htmlのクラス名\nconst ClassName = {\n  ALERT : 'alert',\n  FADE  : 'fade',\n  SHOW  : 'show'\n}\n\nclass Alert {\n  constructor(element) {\n    this._element = element\n  }\n\n  // バージョンのゲッター\n  static get VERSION() {\n    return VERSION\n  }\n\n  // public method\n\n  close(element) {\n    // このクラス内のthisはalertクラス\n\n    // コンストラクタで取得したelement\n    let rootElement = this._element\n\n    // closeにelementが引数で渡されていたら\n    if (element) {\n      // div.alertを取得\n      rootElement = this._getRootElement(element)\n    }\n\n    // カスタムイベントを作成\n    const customEvent = this._triggerCloseEvent(rootElement)\n\n    // イベントがブラウザの処理を禁止していた場合は闇に葬り去る\n    // http://www.jquerystudy.info/reference/events/isDefaultPrevented.html\n    if (customEvent.isDefaultPrevented()) {\n      return\n    }\n\n    // showクラスを削除する\n    // fadeクラスがなかった場合、要素を削除する\n    this._removeElement(rootElement)\n  }\n\n  // this._elementを削除するみたい\n  dispose() {\n    $.removeData(this._element, DATA_KEY)\n    this._element = null\n  }\n\n  // private method\n\n  // closeで使ってるやつ\n  _getRootElement(element) {\n    // elementのdata-targetもしくはhrefで指定されているselectorを取得\n    const selector = Util.getSelectorFromElement(element)\n    let parent     = false\n\n    // selectorがあった場合\n    if (selector) {\n      // data-targetもしくはhrefで指定されている要素を取得\n      // 開始タグから終了タグまで持ってくるみたい\n      parent = document.querySelector(selector)\n    }\n\n    // 上のifを通らなかったか通ってもnullが帰ってきた場合\n    if (!parent) {\n      // data-targetもしくはhrefが指定されてないので、一番近い.alertを取得する\n      parent = $(element).closest(`.${ClassName.ALERT}`)[0]\n    }\n\n    return parent\n  }\n\n  // closeで使ってるやつ\n  _triggerCloseEvent(element) {\n    // close.sc.alertイベントを定義\n    const closeEvent = $.Event(Event.CLOSE)\n\n    $(element).trigger(closeEvent) // closeイベントを発生\n    // closeEvent返すんか\n    return closeEvent\n  }\n\n  // closeで使ってるやつ\n  _removeElement(element) {\n    // showクラスを削除\n    $(element).removeClass(ClassName.SHOW)\n\n    // fadeクラスを持ってなかった場合\n    if (!$(element).hasClass(ClassName.FADE)) {\n      // アラートを削除\n      this._destroyElement(element)\n      return // eslint-disable-line no-useless-return\n    }\n\n    // 要素の変化にかかる時間を取得\n    const transitionDuration = Util.getTransitionDurationFromElement(element)\n\n    $(element)\n      // .oneは一回だけ実行するイベント。TRANSITION_ENDはイベント名。\n      // エレメントを削除してclosedイベントを実行する\n      .one(Util.TRANSITION_END, (event) => this._destroyElement(element, event))\n      // util.jsのtransitionEndEmulatorを実行\n      .emulateTransitionEnd(transitionDuration)\n  }\n\n  // _removeElementで使ってるやつ\n  _destroyElement(element) {\n    $(element) // elementを。。。\n      .detach() // elementを隔離\n      .trigger(Event.CLOSED) // closedイベントを発生させる\n      .remove() // element削除\n      // https://qiita.com/BRSF/items/1aa9d154bde497b0baa0#remove%E3%81%AE%E5%A0%B4%E5%90%88\n  }\n\n  // static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      // elementを格納\n      const $element = $(this)\n      // elementのdata-sc.alert属性を取得\n      let data = $element.data(DATA_KEY)\n\n      // dataがなかったら\n      if (!data) {\n        // アラートをインスタンス化\n        // thisはelement\n        data = new Alert(this)\n        // elementにdata-sc.alertを設定\n        // 中身はdata\n        $element.data(DATA_KEY, data)\n      }\n\n      // configがcloseだったら・・・・\n      if (config === 'close') {\n        // alert.close(element)になる\n        data[config](this)\n      }\n    })\n  }\n\n  static _handleDismiss(alertInstance) {\n    return function (event) {\n      // イベントがあったら\n      if (event) {\n        // イベントの動作を停止させる\n        event.preventDefault()\n      }\n\n      // 引数で受け取ったalertインスタンスのcloseを実行\n      // 引数はhtmlのbutton\n      alertInstance.close(this)\n    }\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Apiの定義\n * ------------------------------------------------------------------------\n */\n\n// ここがブラウザで使う部分みたい\n$(document).on(\n  Event.CLICK_DATA_API, // click.sc.alert.data-api\n  Selector.DISMISS, // [data-dismiss=\"alert\"]\n  Alert._handleDismiss(new Alert()) // staticのやつ実行するんだね\n)\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n// .alertは_jQueryInterface\n$.fn[NAME] = Alert._jQueryInterface\n// .alert.ConstructorはAlert\n$.fn[NAME].Constructor = Alert\n\n// .alert.noConflict\n// 衝突回避用\n$.fn[NAME].noConflict  = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Alert._jQueryInterface\n}\n\n\nexport default Alert\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.3.1): button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n// aria-pressedは要素が押されている状態\n// .activeはactive状態\n\nimport $ from 'jquery'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME  = 'button'\nconst VERSION = '0.5.2'\nconst DATA_KEY = 'sc.button'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\n\nconst ClassName = {\n  ACTIVE : 'active',\n  BUTTON : 'btn',\n  FOCUS  : 'focus'\n}\n\nconst Selector = {\n  DATA_TOGGLE_CARROT : '[data-toggle^=\"button\"]',\n  DATA_TOGGLES : '[data-toggle=\"buttons\"]',\n  DATA_TOGGLE : '[data-toggle=\"button\"]',\n  DATA_TOGGLES_BUTTONS : '[data-toggle=\"buttons\"] .btn',\n  INPUT : 'input:not([type=\"hidden\"])',\n  ACTIVE : '.active',\n  BUTTON : '.btn'\n}\n\nconst Event = {\n  CLICK_DATA_API : `click${EVENT_KEY}${DATA_API_KEY}`,\n  FOCUS_BLUR_DATA_API : `focus${EVENT_KEY}${DATA_API_KEY} ` +\n                                          `blur${EVENT_KEY}${DATA_API_KEY}`,\n  LOAD_DATA_API : `load${EVENT_KEY}${DATA_API_KEY}`\n}\n\n/**\n * ------------------------------------------------------------------------\n * クラス\n * ------------------------------------------------------------------------\n */\n\nclass Button {\n  constructor(element) {\n    this._element = element\n  }\n\n   // バージョンのゲッター\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  // toggleメソッド\n  toggle() {\n    let triggerChangeEvent = true\n    let addAriaPressed = true\n    // '[data-toggle=\"buttons\"]'をもつ要素の親要素を取得する\n    const rootElement = $(this._element).closest(\n      Selector.DATA_TOGGLES\n    )[0]\n\n    // rootElementがあったら\n    if (rootElement) {\n      // hiddenじゃないinputを取得する\n      const input = this._element.querySelector(Selector.INPUT)\n\n      // inputがあった場合\n      if (input) {\n        // inputがradioだった場合\n        if (input.type === 'radio') {\n          // .classList.contains(クラス名)が存在するか確認する\n          // radioがチェックされててかつ、.activeクラスが存在する場合。\n          if (input.checked &&\n            this._element.classList.contains(ClassName.ACTIVE)) {\n            // .activeなボタンを押したらfalseにする\n            triggerChangeEvent = false\n          } else {\n            // .activeを持つ要素を取得する。\n            const activeElement = rootElement.querySelector(Selector.ACTIVE)\n\n            // activeElementが存在してたら\n            if (activeElement) {\n              // .activeクラスを削除する\n              $(activeElement).removeClass(ClassName.ACTIVE)\n            }\n          }\n        // inputがcheckboxだったら\n        } else if (input.type === 'checkbox') {\n          // this._elementのタグ名が<label>でかつ、.activeクラスを持っていたら\n          if (this._element.tagName === 'LABEL' && input.checked === this._element.classList.contains(ClassName.ACTIVE)) {\n            triggerChangeEvent = false\n          }\n        } else {\n          // radioもしくはcheckboxじゃない場合、pointless/invalid checkedをinputに追加しちゃあかん\n          triggerChangeEvent = false\n        }\n\n        // .activeクラスを持っていない場合の処理\n        if (triggerChangeEvent) {\n          // アクティブを持っていないか確認\n          input.checked = !this._element.classList.contains(ClassName.ACTIVE)\n          // input要素に対してchangeを発動\n          $(input).trigger('change')\n        }\n\n        // inputにfocusを当てる\n        input.focus()\n        addAriaPressed = false\n      }\n    }\n\n    // buttonがdisabled属性を持ってるまたは、disabledクラスを持っていた場合\n    if (!(this._element.hasAttribute('disabled') || this._element.classList.contains('disabled'))) {\n      // ボタンがinputじゃなかったら\n      if (addAriaPressed) {\n        // .activeがあったらaria-pressed属性にfalseなかったらtrue\n        this._element.setAttribute('aria-pressed',\n          !this._element.classList.contains(ClassName.ACTIVE))\n      }\n\n      // .activeクラスを持ってたら.activeを消す\n      if (triggerChangeEvent) {\n        $(this._element).toggleClass(ClassName.ACTIVE)\n      }\n    }\n  }\n\n    // this._elementを削除するみたい\n  dispose() {\n    $.removeData(this._element, DATA_KEY)\n    this._element = null\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      // elementのdata-sc.buttonを取得\n      let data = $(this).data(DATA_KEY)\n\n\n      // dataがなかったら\n      if (!data) {\n        // buttonをインスタンス化\n        // thisはエレメント\n        data = new Button(this)\n        // thisにdata-sc.alertを設定\n        // 中身はボタンクラス\n        $(this).data(DATA_KEY, data)\n      }\n\n      // configがtoggleだったら\n      if (config === 'toggle') {\n        // button.toggleになる\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document) // click.sc.alert.data-api'と[data-toggle^=\"button\"]'\n  .on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE_CARROT, (event) => {\n    // イベント対象のelement\n    let button = event.target\n    // イベント対象のelementが.btnを持ってたら\n    if (!$(button).hasClass(ClassName.BUTTON)) {\n      // .btnを持つ要素を取得する\n      button = $(button).closest(Selector.BUTTON)[0]\n    }\n\n    // ボタンがない、ボタンがdisable属性またはクラスを持つ場合\n    if (!button || button.hasAttribute('disabled') || button.classList.contains('disabled')) {\n      // イベントを禁止にする\n      event.preventDefault() // firefoxのバグで指定しないとだめみたい\n    } else {\n      // hidden以外のinputボタンを取得\n      const inputBtn = button.querySelector(Selector.INPUT)\n      // inputボタンが存在してdisabled属性またはクラスを持ってたら\n      if (inputBtn && (inputBtn.hasAttribute('disabled') || inputBtn.classList.contains('disabled'))) {\n        // イベントを禁止にする\n        event.preventDefault() // firefoxのバグで指定しないとだめみたい\n        return\n      }\n      // ここわかりやすい\n      // https://qiita.com/Chrowa3/items/b3e2961c4930abc1369b\n      Button._jQueryInterface.call($(button), 'toggle')\n    }\n  }) // focus.sc.alert.data-api +  blur.sc.alert.data-api'と[data-toggle^=\"button\"]'\n  .on(Event.FOCUS_BLUR_DATA_API, Selector.DATA_TOGGLE_CARROT, (event) => {\n    // button要素を取得する\n    const button = $(event.target).closest(Selector.BUTTON)[0]\n    // button要素に対して、fucusクラスをつける\n    // event,typeがfocusinならtrue、違うならfalse\n    // trueなら絶対クラスを付与、falseなら削除\n    $(button).toggleClass(ClassName.FOCUS, /^focus(in)?$/.test(event.type))\n  })\n\n  // load.sc.alert.data-api'\n$(window).on(Event.LOAD_DATA_API, () => {\n  // windowsロード時にボタンの状態を見て.activeを追加する\n  // checkとかになってないのに.activeがついてたら削除する\n\n  // data-toggle内のcheckboxとradioを見つける\n  //  '[data-toggle=\"buttons\"]をもつ .btn要素を全て取得する\n  let buttons = [].slice.call(document.querySelectorAll(Selector.DATA_TOGGLES_BUTTONS))\n  // buttonsの数だけループ回すよ\n  for (let i = 0, len = buttons.length; i < len; i++) {\n    // ボタンのi番目\n    const button = buttons[i]\n    // hidden以外のinputを取得\n    const input = button.querySelector(Selector.INPUT)\n    // inputがcheckされているか、checked属性を持っている場合\n    if (input.checked || input.hasAttribute('checked')) {\n      // .activeを追加する\n      button.classList.add(ClassName.ACTIVE)\n    } else {\n      // check状態じゃなかったら削除\n      button.classList.remove(ClassName.ACTIVE)\n    }\n  }\n\n  //  全ての[data-toggle=\"button\"]を取得する\n  buttons = [].slice.call(document.querySelectorAll(Selector.DATA_TOGGLE))\n  for (let i = 0, len = buttons.length; i < len; i++) {\n    const button = buttons[i]\n    // aria-pressedにtrueが指定されていたら\n    if (button.getAttribute('aria-pressed') === 'true') {\n      button.classList.add(ClassName.ACTIVE)\n    } else {\n      button.classList.remove(ClassName.ACTIVE)\n    }\n  }\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Button._jQueryInterface\n$.fn[NAME].Constructor = Button\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Button._jQueryInterface\n}\n\nexport default Button\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): collapse.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'collapse'\nconst VERSION = '4.4.1'\nconst DATA_KEY = 'sc.collapse'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\n\nconst Default = {\n  toggle : true,\n  parent : ''\n}\n\nconst DefaultType = {\n  toggle : 'boolean',\n  parent : '(string|element)'\n}\n\nconst Event = {\n  SHOW : `show${EVENT_KEY}`,\n  SHOWN : `shown${EVENT_KEY}`,\n  HIDE : `hide${EVENT_KEY}`,\n  HIDDEN : `hidden${EVENT_KEY}`,\n  CLICK_DATA_API : `click${EVENT_KEY}${DATA_API_KEY}`\n}\n\nconst ClassName = {\n  SHOW : 'show',\n  COLLAPSE : 'collapse',\n  COLLAPSING : 'collapsing',\n  COLLAPSED  : 'collapsed'\n}\n\nconst Dimension = {\n  WIDTH : 'width',\n  HEIGHT : 'height'\n}\n\nconst Selector = {\n  ACTIVES : '.show, .collapsing',\n  DATA_TOGGLE : '[data-toggle=\"collapse\"]'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Collapse {\n  constructor(element, config) {\n    this._isTransitioning = false\n    this._element = element\n    // cofigを取得\n    this._config = this._getConfig(config)\n    // data-toggle=\"collapse\"を持っていて、hrefもしくはdata-targetを持ってる要素を取得する\n    this._triggerArray = [].slice.call(document.querySelectorAll(\n      `[data-toggle=\"collapse\"][href=\"#${element.id}\"],` +\n      `[data-toggle=\"collapse\"][data-target=\"#${element.id}\"]`\n    ))\n\n    // [data-toggle=\"collapse\"]を持つ要素を全て取得する\n    const toggleList = [].slice.call(document.querySelectorAll(Selector.DATA_TOGGLE))\n    // 取得した[data-toggle=\"collapse\"]を持つ要素の数だけループする\n    for (let i = 0, len = toggleList.length; i < len; i++) {\n      // [data-toggle=\"collapse\"]要素を取り出す\n      const elem = toggleList[i]\n      // elemのhrefで指定した値を取得\n      const selector = Util.getSelectorFromElement(elem)\n      // セレクターで指定された(クリックされた)要素で指定されているhrefのelementを取得\n      const filterElement = [].slice.call(document.querySelectorAll(selector))\n        .filter((foundElem) => foundElem === element)\n\n      // selectorが存在していて、filterElementも存在していた場合\n      if (selector !== null && filterElement.length > 0) {\n        // this._selectorにselector(hrefの値)を入れる\n        this._selector = selector\n        // this._triggerArrayにelem([data-toggle=\"collapse\"]を持つ要素)を入れる\n        this._triggerArray.push(elem)\n      }\n    }\n\n    // this._config.parentが存在していたらgetParentを実行する\n    // 存在していなかったnullを入れる\n    this._parent = this._config.parent ? this._getParent() : null\n\n    // config.parentが存在していなかったら\n    if (!this._config.parent) {\n      // 開閉する要素が.showを持っているかによって\n      // trigger要素に.collapsedとaria-expanded属性を付与したり削除したりする\n      this._addAriaAndCollapsedClass(this._element, this._triggerArray)\n    }\n\n    // cofig.toggleがtrueだった場合\n    if (this._config.toggle) {\n      // Collapse.toggleを実行\n      this.toggle()\n    }\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  // Public\n\n  toggle() {\n    // this._elementは開閉する要素\n    // その要素がshowを持っている場合\n    if ($(this._element).hasClass(ClassName.SHOW)) {\n      // hideを実行\n      this.hide()\n    } else {\n      // showを持っていない場合はshowを実行\n      this.show()\n    }\n  }\n\n  show() {\n    // this._isTransitioningがtrueもしくは、開閉対象の要素がshowを持っていたら\n    // 処理を終了する\n    if (this._isTransitioning ||\n      $(this._element).hasClass(ClassName.SHOW)) {\n      return\n    }\n\n    let actives\n    let activesData\n\n    // this._parentが存在していたら\n    if (this._parent) {\n      // parentから.showか.collapsingを持つ要素を取得する\n      actives = [].slice.call(this._parent.querySelectorAll(Selector.ACTIVES))\n        .filter((elem) => {\n          // this._config.parent要素がstringの場合\n          if (typeof this._config.parent === 'string') {\n            // .activesの要素でdata-parent属性がthis._config.parentもののみを取得\n            return elem.getAttribute('data-parent') === this._config.parent\n          }\n          // this._config.parent要素がstring以外の場合\n          // elemのクラスリストにcollapseが存在するもののみを取得\n          return elem.classList.contains(ClassName.COLLAPSE)\n        })\n\n      // activesに要素が存在していない場合は、nullを代入する\n      if (actives.length === 0) {\n        actives = null\n      }\n    }\n\n    // activesがnullじゃない場合\n    if (actives) {\n      // activesからクリックされたtrigger要素のhrefで指定された要素を削除\n      // 削除後に残ったactivesからDATA_KEYの値を取得する\n      activesData = $(actives).not(this._selector).data(DATA_KEY)\n      // activesDataが存在していて、activesData._isTransitioningがtrueなら\n      // 処理終了\n      if (activesData && activesData._isTransitioning) {\n        return\n      }\n    }\n\n    // showイベントを定義\n    const startEvent = $.Event(Event.SHOW)\n    // showイベントを発動\n    $(this._element).trigger(startEvent)\n    // showイベントがブラウザのデフォルト動作を禁止していたら処理終了\n    if (startEvent.isDefaultPrevented()) {\n      return\n    }\n\n    // activesが存在する場合\n    if (actives) {\n      // activesからthis._selectorで指定された要素を削除して、jQueryInterfaceでhideを実行\n      // つまり、showするのと同時に既に開いている要素を閉じる\n      Collapse._jQueryInterface.call($(actives).not(this._selector), 'hide')\n      // activeDataが存在しない場合\n      if (!activesData) {\n        // activesにDATA_KEYでnullを設定\n        $(actives).data(DATA_KEY, null)\n      }\n    }\n\n    // this._elementが.widthを持っていたらwidthを取得\n    // もっていなかったらheightを取得\n    const dimension = this._getDimension()\n\n    // this._element(開閉される要素)から.collapseを削除\n    // そして、.collapsingを付与\n    $(this._element)\n      .removeClass(ClassName.COLLAPSE)\n      .addClass(ClassName.COLLAPSING)\n\n    // 開閉対象の高さを0pxにする\n    this._element.style[dimension] = 0\n\n    // [data-toggle=\"collapse\"]を持つ要素が0じゃない場合\n    if (this._triggerArray.length) {\n      // _triggerArrayの.collapsedを削除\n      // aria-expandedをtrueで設定\n      $(this._triggerArray)\n        .removeClass(ClassName.COLLAPSED)\n        .attr('aria-expanded', true)\n    }\n\n    // this._isTransitioningにtrueを設定\n    this.setTransitioning(true)\n\n    const complete = () => {\n      // ここでshowをしている。詳細は_transitions.scssを確認だけど\n      // 単純に.showを持っていない.collapse要素はdisplay:none;している\n      // .collapsingを削除し、.collapseと.showを付与\n      $(this._element)\n        .removeClass(ClassName.COLLAPSING)\n        .addClass(ClassName.COLLAPSE)\n        .addClass(ClassName.SHOW)\n\n      // 0に設定したstyleを空にする\n      this._element.style[dimension] = ''\n\n      // this._isTransitioningにfalseを設定\n      this.setTransitioning(false)\n\n      // shownイベントを発動\n      $(this._element).trigger(Event.SHOWN)\n    }\n\n    // dimensionの1文字目を大文字にする\n    const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1)\n    const scrollSize = `scroll${capitalizedDimension}`\n    // 開閉する要素の遷移時間を取得\n    const transitionDuration = Util.getTransitionDurationFromElement(this._element)\n\n    // 開閉する要素\n    $(this._element)\n      .one(Util.TRANSITION_END, complete) // 一度だけ発動するcomplete\n      .emulateTransitionEnd(transitionDuration) // ここでTRANTION_ENDをtriggerしてる\n\n    // this._elementのdimensionスタイルに、scrollSize分の値を適用する\n    this._element.style[dimension] = `${this._element[scrollSize]}px`\n  }\n\n  hide() {\n        // this._isTransitioningがtrueもしくは、開閉対象の要素がshowを持っていなかったら\n    // 処理を終了する\n    if (this._isTransitioning ||\n      !$(this._element).hasClass(ClassName.SHOW)) {\n      return\n    }\n\n    // hideイベントを定義する\n    const startEvent = $.Event(Event.HIDE)\n    // hideイベントを発動する\n    $(this._element).trigger(startEvent)\n    // hideイベントがブラウザの動作を停止していたら処理終了\n    if (startEvent.isDefaultPrevented()) {\n      return\n    }\n\n    // this._elementが.widthを持っていたらwidthを取得\n    // もっていなかったらheightを取得\n    const dimension = this._getDimension()\n\n    // getBoundingClientRectは要素の位置を取得する\n    // つまり、開閉要素の位置(dimensionでheightかwidthを指定)を取得して\n    // 開閉要素のスタイルに指定する\b\n    this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`\n\n    // 開閉要素の高さを取得する\n    // heightとpaddingとborderの合計値\n    Util.reflow(this._element)\n\n    // 開閉要素に.collapsingを追加する\n    // .collapseと.showは削除する\n    $(this._element)\n      .addClass(ClassName.COLLAPSING)\n      .removeClass(ClassName.COLLAPSE)\n      .removeClass(ClassName.SHOW)\n\n    // trigger要素の長さを取得\n    const triggerArrayLength = this._triggerArray.length\n    // triggerArrayLengthが1以上だったら\n    if (triggerArrayLength > 0) {\n      // triggerArrayLengthの長さの分だけループする\n      for (let i = 0; i < triggerArrayLength; i++) {\n        // triggerArrayのひとつを取得\n        const trigger = this._triggerArray[i]\n        // triggerに指定されている開閉要素を取得する\n        const selector = Util.getSelectorFromElement(trigger)\n\n        // selectorが存在していたら\n        if (selector !== null) {\n          // 開閉要素を全て取得して、配列で入れる\n          const $elem = $([].slice.call(document.querySelectorAll(selector)))\n          // 開閉要素がshowを持っていない場合\n          if (!$elem.hasClass(ClassName.SHOW)) {\n            // trrigerに.collapsedを追加する\n            $(trigger).addClass(ClassName.COLLAPSED)\n              // aria-expanded属性をfalseにする\n              .attr('aria-expanded', false)\n          }\n        }\n      }\n    }\n\n    // this._isTransitioningをtrueにする\n    this.setTransitioning(true)\n\n    const complete = () => {\n      // this._isTransitioningをfalseにする\n      this.setTransitioning(false)\n      // 開閉要素に対して.collapsingを削除\n      // .collapseを追加\n      // Hiddenイベントを実行\n      $(this._element)\n        .removeClass(ClassName.COLLAPSING)\n        .addClass(ClassName.COLLAPSE)\n        .trigger(Event.HIDDEN)\n    }\n\n    // 開閉要素に設定したスタイルを空にする\n    this._element.style[dimension] = ''\n    // this._elementから遷移時間を取得\n    const transitionDuration = Util.getTransitionDurationFromElement(this._element)\n\n    // .collapsingの遷移が終わったタイミングでcompleteを実行\n    // emulateTransitionEndでTRANSITION_ENDを実行\n    $(this._element)\n      .one(Util.TRANSITION_END, complete)\n      .emulateTransitionEnd(transitionDuration)\n  }\n\n  setTransitioning(isTransitioning) {\n    // this._isTransitioningに引数を設定\n    // trueかfalse\n    this._isTransitioning = isTransitioning\n  }\n\n  // 全てを破壊する\n  dispose() {\n    // DATA_KEYを削除\n    $.removeData(this._element, DATA_KEY)\n\n    // 各要素にnullを代入して削除\n    this._config = null\n    this._parent = null\n    this._element = null\n    this._triggerArray = null\n    this._isTransitioning = null\n  }\n\n  // Private\n\n  // configを取得する\n  _getConfig(config) {\n    // configにDefaultの値と、configの値を展開して入れる\n    config = {\n      ...Default,\n      ...config\n    }\n    config.toggle = Boolean(config.toggle) // Stringをbooleanに変換する\n    // confignの値がDefaultTypeの型と一致しているか確認\n    Util.typeCheckConfig(NAME, config, DefaultType)\n    // configを返す\n    return config\n  }\n\n  _getDimension() {\n    // this._elementは開閉要素\n    // this._elementが.widthを持っているか判定\n    const hasWidth = $(this._element).hasClass(Dimension.WIDTH)\n    // .widthが存在していたらwidthを返す\n    // .widthが存在していなかったらheightを返す\n    return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT\n  }\n\n  _getParent() {\n    let parent\n\n    // this._config.parentがElementか判定する\n    if (Util.isElement(this._config.parent)) {\n      // Elementだった場合そのまま格納\n      parent = this._config.parent\n\n      // jQuery object\n      // this._config.parent.jqueryがundefinedじゃない場合\n      if (typeof this._config.parent.jquery !== 'undefined') {\n        // elementを格納\n        parent = this._config.parent[0]\n      }\n    } else {\n      // this._config.parentがElementじゃない場合\n      // this._config.parentに指定されている要素を探して格納\n      parent = document.querySelector(this._config.parent)\n    }\n\n    // [data-toggle=\"collapse\"][data-parent=\"#accordion\"]みたいになる\n    const selector =\n      `[data-toggle=\"collapse\"][data-parent=\"${this._config.parent}\"]`\n\n    // parent要素の中からselectorとマッチする要素を取得する\n    // data-toggleとdata-parent両方持っている要素のみ\n    const children = [].slice.call(parent.querySelectorAll(selector))\n\n    // elementはselectorと一致した要素\n    $(children).each((i, element) => {\n      // 開閉する要素が.showを持っているかによって\n      // trigger要素に.collapsedとaria-expanded属性を付与したり削除したりする\n      this._addAriaAndCollapsedClass(\n        Collapse._getTargetFromElement(element), // hrefとかに指定されている要素\n        [element] // data-toggleとdata-parent両方持っている要素\n      )\n    })\n\n    // data-parent属性に指定された親要素を返す\n    return parent\n  }\n\n  // elementはhrefとかに指定されている開閉する要素\n  // triggerArrayはelementを開閉させるためにクリックする要素\n  _addAriaAndCollapsedClass(element, triggerArray) {\n    // elementがshowを持っているか判定\n    const isOpen = $(element).hasClass(ClassName.SHOW)\n\n    // triggerArrayに要素が入っているか判定\n    if (triggerArray.length) {\n      // elementがshowを持っていた場合は.collapsedを削除\n      // elementがshowを持っていない場合は.collapsedを付与\n      // aria-expanded属性にisOpenの値を設定\n      $(triggerArray)\n        .toggleClass(ClassName.COLLAPSED, !isOpen)\n        .attr('aria-expanded', isOpen)\n    }\n  }\n\n  // Static\n\n  // elementはdata-toggleとdata-parent両方持っている要素\n  static _getTargetFromElement(element) {\n    // elementが持ってるhrefやdata-targetに指定されているselectorを取得\n    const selector = Util.getSelectorFromElement(element)\n    // selectorが存在していたら、selectorに指定されている要素を取得して返す\n    // なかったらnullを返す\n    return selector ? document.querySelector(selector) : null\n  }\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      // selectorの要素(開閉する要素)\n      const $this = $(this)\n      // $thisのDATA_KEYと結びつくdata取得\n      let data = $this.data(DATA_KEY)\n      // configを格納\n      const _config = {\n        ...Default,\n        ...$this.data(), // data-parent=\"#accordion\"を取得することで_config.parentが生成される\n        // configがobjectかつ存在していたらconfigを返す。\n        // それ以外なら空配列を返す\n        ...typeof config === 'object' && config ? config : {}\n      }\n\n      // dataが存在していないかつ、_config.toggleがtrue\n      // configがshowまたはhideだった場合\n      if (!data && _config.toggle && /show|hide/.test(config)) {\n        // toggleをfalseにする\n        _config.toggle = false\n      }\n\n      // dataが存在してなかったらdataをインスタンス化する\n      // インスタンス化したdataはDATA_KEYでElementに設定する\n      if (!data) {\n        // thisはdata-toggle=\"collapse\"を持つ要素\n        // _configは上で設定した_config\n        data = new Collapse(this, _config)\n        $this.data(DATA_KEY, data)\n      }\n\n      // configがstringだった場合\n      if (typeof config === 'string') {\n        // configメソッドがdata(collapseクラス)にあるか確認する\n        if (typeof data[config] === 'undefined') {\n          // なかったらエラーを返す\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n        // 存在していたら実行\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n// DATA_TOGGLEに対して、クリックイベントを定義する\n$(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n  // 折りたたみ可能な要素な要素ないではなく、<a>要素（URLを変更する）に対してのみ動作を停止する\n  if (event.currentTarget.tagName === 'A') {\n    event.preventDefault()\n  }\n\n  // thisはクリックしたelement(イベント要素)\n  const $trigger = $(this)\n  // セレクタを取得(#collapseOneとか)\n  const selector = Util.getSelectorFromElement(this)\n  // セレクタで指定された要素を取得\n  const selectors = [].slice.call(document.querySelectorAll(selector))\n\n  $(selectors).each(function () {\n    // selectorで指定されているtoggleする要素\n    const $target = $(this)\n    // targetのDATA_KEYを取得する\n    const data = $target.data(DATA_KEY)\n    // configとdataが一致していたら$trigger.data()を入れる\n    // それ以外の場合はtoggleを入れる\n    // $trigger.data()は<a>のdata-toggleの値を取得する\n    const config  = data ? 'toggle' : $trigger.data()\n\n    // jqueryInterfaceを呼ぶ\n    Collapse._jQueryInterface.call($target, config)\n  })\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Collapse._jQueryInterface\n$.fn[NAME].Constructor = Collapse\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Collapse._jQueryInterface\n}\n\nexport default Collapse\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): dropdown.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Popper from 'popper.js'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'dropdown'\nconst VERSION = '0.5.2'\nconst DATA_KEY = 'sc.dropdown'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\nconst ESCAPE_KEYCODE = 27 // Escキー\nconst SPACE_KEYCODE = 32 // スペースキー\nconst TAB_KEYCODE = 9 // タブキー\nconst ARROW_UP_KEYCODE = 38 // ↑キー\nconst ARROW_DOWN_KEYCODE = 40 // ↓キー\nconst RIGHT_MOUSE_BUTTON_WHICH = 3 // マウスの右クリック\n// 正規表現オブジェクト作成\nconst REGEXP_KEYDOWN = new RegExp(`${ARROW_UP_KEYCODE}|${ARROW_DOWN_KEYCODE}|${ESCAPE_KEYCODE}`)\n\nconst Event = {\n  HIDE : `hide${EVENT_KEY}`,\n  HIDDEN : `hidden${EVENT_KEY}`,\n  SHOW : `show${EVENT_KEY}`,\n  SHOWN: `shown${EVENT_KEY}`,\n  CLICK : `click${EVENT_KEY}`,\n  CLICK_DATA_API : `click${EVENT_KEY}${DATA_API_KEY}`,\n  KEYDOWN_DATA_API : `keydown${EVENT_KEY}${DATA_API_KEY}`,\n  KEYUP_DATA_API : `keyup${EVENT_KEY}${DATA_API_KEY}`\n}\n\nconst ClassName = {\n  DISABLED : 'disabled',\n  SHOW : 'show',\n  DROPUP : 'dropup',\n  DROPRIGHT : 'dropright',\n  DROPLEFT : 'dropleft',\n  MENURIGHT : 'dropdown-menu-right',\n  MENULEFT : 'dropdown-menu-left',\n  POSITION_STATIC : 'position-static'\n}\n\nconst Selector = {\n  DATA_TOGGLE : '[data-toggle=\"dropdown\"]',\n  FORM_CHILD : '.dropdown form',\n  MENU : '.dropdown-menu',\n  NAVBAR_NAV : '.navbar-nav',\n  VISIBLE_ITEMS : '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)'\n}\n\nconst AttachmentMap = {\n  TOP : 'top-start',\n  TOPEND : 'top-end',\n  BOTTOM : 'bottom-start',\n  BOTTOMEND : 'bottom-end',\n  RIGHT : 'right-start',\n  RIGHTEND : 'right-end',\n  LEFT : 'left-start',\n  LEFTEND : 'left-end'\n}\n\nconst Default = {\n  offset : 0,\n  flip : true,\n  boundary : 'scrollParent',\n  reference : 'toggle',\n  display : 'dynamic',\n  popperConfig : null\n}\n\nconst DefaultType = {\n  offset : '(number|string|function)',\n  flip : 'boolean',\n  boundary : '(string|element)',\n  reference : '(string|element)',\n  display : 'string',\n  popperConfig : '(null|object)'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class\n * ------------------------------------------------------------------------\n */\n\nclass Dropdown {\n  // button.dropdown-toggleと、configがobjectならobject、違うならnull\n  constructor(element, config) {\n    this._element = element\n    this._popper = null\n    // configを取得\n    this._config = this._getConfig(config)\n    // .dropdown-menuを取得\n    this._menu = this._getMenuElement()\n    // dropdownがnavbarに内包されているか確認\n    this._inNavbar = this._detectNavbar()\n    // クリックイベントの設定（ここでtoggleも登録）\n    this._addEventListeners()\n  }\n\n    // Getters\n\n    static get VERSION() {\n      return VERSION\n    }\n\n    static get Default() {\n      return Default\n    }\n\n    static get DefaultType() {\n      return DefaultType\n    }\n\n    toggle() {\n      // エレメントがdisable属性もしくはclassを持ってたら処理終了\n      if (this._element.disabled || $(this._element).hasClass(ClassName.DISABLED)) {\n        return\n      }\n\n      // メニューが.showを持ってるか判定\n      const isActive = $(this._menu).hasClass(ClassName.SHOW)\n\n      // メニューを閉じる\n      Dropdown._clearMenus()\n\n      // .showを持ってたらshowする必要ないので処理終了\n      if (isActive) {\n        return\n      }\n\n      // 下のshowを発動。popperは使う\n      this.show(true)\n    }\n\n    show(usePopper = false) {\n      // dropdownもしくはメニューがdisableになってたら処理終了\n      if (this._element.disabled || $(this._element).hasClass(ClassName.DISABLED) || $(this._menu).hasClass(ClassName.SHOW)) {\n        return\n      }\n\n      // .dropdown-toggleをrelatedTargetに入れる\n      const relatedTarget = {\n        relatedTarget: this._element\n      }\n\n      // show.sc.dropdownイベントを定義して、relatedTargetを渡す\n      const showEvent = $.Event(Event.SHOW, relatedTarget)\n\n      // エレメントの親要素を取得\n      // .dropdown\n      const parent = Dropdown._getParentFromElement(this._element)\n\n      // parentに対してshoweventを発動する\n      $(parent).trigger(showEvent)\n\n      // ブラウザの処理を禁止してたら処理終了\n      if (showEvent.isDefaultPrevented()) {\n        return\n      }\n\n    // navに入ってない状態でusepopperが使われる時\n    if (!this._inNavbar && usePopper) {\n      /**\n       * Check for Popper dependency\n       * Popper - https://popper.js.org\n       */\n      // popperが読み込まれているか確認\n      if (typeof Popper === 'undefined') {\n        throw new TypeError('Simplicss\\'s dropdowns require Popper.js (https://popper.js.org/)')\n      }\n\n      // .data-toggle要素を格納\n      let referenceElement = this._element\n\n      // this._configはDefault\n      // parentだったら\n      if (this._config.reference === 'parent') {\n        // this._elementの親要素を格納する\n        referenceElement = parent\n      } else if (Util.isElement(this._config.reference)) {\n        // this._config.referenceがdom要素だったら\n        // this._config.referenceを突っ込む\n        referenceElement = this._config.reference\n\n        // jquery要素か確認する\n        if (typeof this._config.reference.jquery !== 'undefined') {\n          referenceElement = this._config.reference[0]\n        }\n      }\n      // boundaryがscrollParentじゃない場合は、位置をstaticに設定してメニューが親をエスケープ出来るようにする\n      if (this._config.boundary !== 'scrollParent') {\n        // parentに.position-staticを追加\n        $(parent).addClass(ClassName.POSITION_STATIC)\n      }\n      // popperをインスタンス化\n      // referenceElementはdata-toggle、this._menuはメニュー、this._getPopperConfig()はpopperのコンフィグ\n      // ちなみにここでdropdownメニューを表示している\n      this._popper = new Popper(referenceElement, this._menu, this._getPopperConfig())\n    }\n\n    // タッチデバイスの場合、空のマウスオーバリスナーを追加\n    if ('ontouchstart' in document.documentElement &&\n        $(parent).closest(Selector.NAVBAR_NAV).length === 0) {\n      $(document.body).children().on('mouseover', null, $.noop)\n    }\n\n    // フォーカスさせる。キーイベントのため？\n    this._element.focus()\n    // showのときはaria-expanded属性を付与してtrueを設定する\n    this._element.setAttribute('aria-expanded', true)\n\n    // menuの.showを切り替える\n    $(this._menu).toggleClass(ClassName.SHOW)\n    // parentの.showを切り替えて、表示後のイベントをrelatedTargerに対して発動する\n    $(parent)\n      .toggleClass(ClassName.SHOW)\n      .trigger($.Event(Event.SHOWN, relatedTarget))\n  }\n\n  hide() {\n    // disableクラス、属性も持っていた場合と、メニューがshowを持っていた場合は処理を終了させる\n    if (this._element.disabled || $(this._element).hasClass(ClassName.DISABLED) || !$(this._menu).hasClass(ClassName.SHOW)) {\n      return\n    }\n    // this._elementをターゲットにする\n    const relatedTarget = {\n      relatedTarget: this._element\n    }\n    // ターゲットに対してhideイベントを定義する\n    const hideEvent = $.Event(Event.HIDE, relatedTarget)\n    // .dropdownを取得する\n    const parent = Dropdown._getParentFromElement(this._element)\n\n    // 親要素に対してhideイベントを実行する\n    $(parent).trigger(hideEvent)\n\n    // hideイベントがブラウザの動作を止めていたら処理を終了する\n    if (hideEvent.isDefaultPrevented()) {\n      return\n    }\n\n    // popperがあった場合は、削除する\n    if (this._popper) {\n      this._popper.destroy()\n    }\n\n    // this._menuのshowクラスを切り替える\n    $(this._menu).toggleClass(ClassName.SHOW)\n    // 親要素に対して、showクラスを切り替えて、hiddenイベントを発動する\n    $(parent)\n      .toggleClass(ClassName.SHOW)\n      .trigger($.Event(Event.HIDDEN, relatedTarget))\n  }\n\n  dispose() {\n    // this_elementのdata-apiを削除する\n    $.removeData(this._element, DATA_KEY)\n    // this_elementのイベントを削除\n    $(this._element).off(EVENT_KEY)\n    this._element = null\n    this._menu = null\n    // popperがnullじゃなかったら、削除してnullにする\n    if (this._popper !== null) {\n      this._popper.destroy()\n      this._popper = null\n    }\n  }\n\n  update() {\n    // dropdownがnavbarにあるか確認\n    this._inNavbar = this._detectNavbar()\n    // popperがnullじゃなかったら\n    if (this._popper !== null) {\n      // popper要素の位置を変更\n      this._popper.scheduleUpdate()\n    }\n  }\n\n   // Private\n\n   _addEventListeners() {\n     // this_elementをクリックした時のイベントを定義する\n    $(this._element).on(Event.CLICK, (event) => {\n      // this._elementイベント禁止\n      event.preventDefault()\n      // 親要素のイベントが実行されないようにeventの伝播を禁止する\n      event.stopPropagation()\n      // toggleを発動する\n      this.toggle()\n    })\n  }\n\n  // configを取得\n  // 引数はtoggleだとnullでそうじゃなかったらobject\n  _getConfig(config) {\n    // configにdefaultの設定を$(this._element).data()、configの順に上書きしていく感じ\n    config = {\n      // default\n      ...this.constructor.Default,\n      //  data-toggle=\"dropdown\" data-display=\"static\" を取得してるみたい\n      // dataって単純にdata属性全部取得する\n      ...$(this._element).data(),\n      // 引数のconfig（object用？）\n      ...config\n    }\n\n    Util.typeCheckConfig(\n      // dropdown\n      NAME,\n      // 上で作ったconfigが入ってる\n      config,\n      // default typeがそのまま入ってる\n      this.constructor.DefaultType\n    )\n\n    return config\n  }\n\n  _getMenuElement() {\n    // this._menuが存在しなかった場合\n    if (!this._menu) {\n      // this._elementの親要素を返す。div.dropdownとかbtn-groupとか\n      const parent = Dropdown._getParentFromElement(this._element)\n\n      // parentが存在していた場合\n      if (parent) {\n        // parentの中から.dropdown-menuを取得してthis._menuに格納する\n        this._menu = parent.querySelector(Selector.MENU)\n      }\n    }\n\n    // this._menuが存在してたらそのまま返す。\n    // 存在してなかったら、取得して返す\n    return this._menu\n  }\n\n  _getPlacement() {\n    // this.elementの親要素を取得（.dropdown）\n    const $parentDropdown = $(this._element.parentNode)\n    // bottom-startを格納。初期値\n    let placement = AttachmentMap.BOTTOM\n\n    // dropupを持ってたら\n    if ($parentDropdown.hasClass(ClassName.DROPUP)) {\n      // top-startを格納\n      placement = AttachmentMap.TOP\n      // メニューがdropdown-menu-rightを持っていた場合\n      if ($(this._menu).hasClass(ClassName.MENURIGHT)) {\n        // top-endを格納\n        placement = AttachmentMap.TOPEND\n      }\n    // droprightを持っていた場合\n    } else if ($parentDropdown.hasClass(ClassName.DROPRIGHT)) {\n      // right-startを格納\n      placement = AttachmentMap.RIGHT\n    // dropleftを持っていた場合\n    } else if ($parentDropdown.hasClass(ClassName.DROPLEFT)) {\n      // left-startを格納\n      placement = AttachmentMap.LEFT\n    // dropdown-menu-rightを持っていた場合\n    } else if ($(this._menu).hasClass(ClassName.MENURIGHT)) {\n      // bottom-endを格納\n      placement = AttachmentMap.BOTTOMEND\n    }\n    return placement\n  }\n\n  _detectNavbar() {\n    // .navbar要素にdropdownが存在していないか確認\n    return $(this._element).closest('.navbar').length > 0\n  }\n\n  _getOffset() {\n    const offset = {}\n    // this._config.offsetが関数だったら\n    if (typeof this._config.offset === 'function') {\n      // dataはpopperみたい\n      offset.fn = (data) => {\n        // data.offsetに展開して格納\n        data.offsets = {\n          ...data.offsets,\n          ...this._config.offset(data.offsets, this._element) || {}\n        }\n\n        return data\n      }\n    } else {\n      // offsetにthis._config.offsetを入れる\n      offset.offset = this._config.offset\n    }\n\n    return offset\n  }\n\n  _getPopperConfig() {\n    // popperの設定を定義\n    const popperConfig = {\n      // 表示位置\n      placement: this._getPlacement(),\n      // offsetを更新するためのリスト\n      modifiers: {\n        // offset\n        offset: this._getOffset(),\n        // popperの表示を反転する\n        flip: {\n          enabled: this._config.flip\n        },\n        // flipを動作させるためにpreventOverflowが必要\n        preventOverflow: {\n          boundariesElement: this._config.boundary\n        }\n      }\n    }\n\n    // this._config.displayがstaticの場合は、popperを無効化する\n    if (this._config.display === 'static') {\n      popperConfig.modifiers.applyStyle = {\n        enabled: false\n      }\n    }\n\n    return {\n      // popperの設定を展開して返す\n      ...popperConfig,\n      ...this._config.popperConfig\n    }\n  }\n\n  // Static\n\n  // callの通り、configはtoggle\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      // こんな感じで使わないとdataには入らない\n      // $('.dropdown-toggle').data('sc.dropdown', '')\n      let data = $(this).data(DATA_KEY)\n      // configはtoggleの場合はnullになる。\n      const _config = typeof config === 'object' ? config : null\n      if (!data) {\n        // thisはdropdown-toggle(button)\n        // つまりelement\n        data = new Dropdown(this, _config)\n        // elementにsc.dropdownでdataをセットする\n        $(this).data(DATA_KEY, data)\n      }\n\n      // toggleの場合はstring\n      if (typeof config === 'string') {\n        // dataのtoggleを指してるみたい\n        if (typeof data[config] === 'undefined') {\n          // toggleメソッドがなかったらスロー\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n        // toggle関数を発動する\n        data[config]()\n      }\n    })\n  }\n\n  static _clearMenus(event) {\n    // イベントが存在していてかつ、イベントがマウスの右クリックまたはキーを離した、またはタブキーじゃないものを押下した場合\n    if (event && (event.which === RIGHT_MOUSE_BUTTON_WHICH ||\n      event.type === 'keyup' && event.which !== TAB_KEYCODE)) {\n      // 処理を終了する\n      return\n    }\n\n    //  '[data-toggle=\"dropdown\"]'をもつ .要素を全て取得する\n    const toggles = [].slice.call(document.querySelectorAll(Selector.DATA_TOGGLE))\n\n    // 取得したtogglesの数だけループ回す\n    for (let i = 0, len = toggles.length; i < len; i++) {\n      // togglesの親ノードを取得する\n      const parent = Dropdown._getParentFromElement(toggles[i])\n      // toggle要素のsc.dropdownを取得する\n      // jqueryInterfaceをで設定してdataを取得する（dataはdropdownのコンストラクタで定義した変数）\n      const context = $(toggles[i]).data(DATA_KEY)\n      // 連想配列にtoggleを追加\n      const relatedTarget = {\n        relatedTarget: toggles[i]\n      }\n\n      // イベントが存在してイベントがclickだったら\n      // bottonクリックのロキにイベントが発動してる\n      if (event && event.type === 'click') {\n        // relatedTargetのclickイベントにイベントを追加\n        relatedTarget.clickEvent = event\n      }\n\n      // sc.dropdownが存在していたら\n      if (!context) {\n        // 更新式に行く\n        // つまり、クリックされてないものはcontextがないので、更新式に飛ばされて次のボタンの判定に入る\n        continue\n      }\n\n      // contextのmenuをdropdownmenuに代入\n      const dropdownMenu = context._menu\n\n      // parentがshowクラスを持っていなかったら\n      if (!$(parent).hasClass(ClassName.SHOW)) {\n        // メニューが開いていないので、更新式に行く\n        continue\n      }\n\n      // イベントが存在してるのが前提\n      // イベントがclickで、イベントのターゲットタグがinputもしくはtextareaまたは、イベントがキーを離してイベントキーがタブ以外でparentの中にイベントのターゲット要素が含まれている場合\n      // /input|textarea/i.test(event.target.tagName) はmenu-itemがinputかtextareaの場合はtrue\n      if (event && (event.type === 'click' &&\n          /input|textarea/i.test(event.target.tagName) || event.type === 'keyup' && event.which === TAB_KEYCODE) &&\n          $.contains(parent, event.target)) { // parentにevent.targetが含まれているか。つまりparentのdropdownにクリックしたメニューが含まれているか\n        // つまりmenuを閉じなくてもいいイベントの場合はメニューを閉じる処理しませんよってことみたい\n        // 更新式に行く\n        continue\n      }\n\n      // hideイベントオブジェクトを定義する。\n      // relatedTargetはイベント発生時に実行する関数に渡す値(data-toggle=\"dropdown\"を持つ要素)\n      // http://www.jquerystudy.info/reference/events/event.html\n      const hideEvent = $.Event(Event.HIDE, relatedTarget)\n      // parent要素に対して、hideEventを発生去せる\n      // parentは.dropdown\n      $(parent).trigger(hideEvent)\n      // hideがブラウザの動作を停止していたら\n      if (hideEvent.isDefaultPrevented()) {\n        // 利用ユーザが特定の要素に対してe.preventDefault()みたいなのを書いたら処理をしない\n        // 更新式に行く\n        continue\n      }\n\n      // タッチデバイスだった場合、iOS用のマウスオーバリスナーを削除\n      if ('ontouchstart' in document.documentElement) {\n        $(document.body).children().off('mouseover', null, $.noop)\n      }\n\n      // toggleに'aria-expanded=falseを設定\n      toggles[i].setAttribute('aria-expanded', 'false')\n      // contextにpopperがあったら\n      if (context._popper) {\n        // popperインスタンスを削除\n        context._popper.destroy()\n      }\n\n      // .dropdown-menuの.showを削除\n      $(dropdownMenu).removeClass(ClassName.SHOW)\n      // parentの.showを削除してhiddenイベントを定義しつつ発動\n      // parentは.dropdown\n      $(parent)\n        .removeClass(ClassName.SHOW)\n        .trigger($.Event(Event.HIDDEN, relatedTarget))\n    }\n  }\n\n  static _getParentFromElement(element) {\n    // elementがボタンの要素全部になってる\n    let parent\n    // data-targetがないのでnullです。\n    const selector = Util.getSelectorFromElement(element)\n\n    // selectorが存在した場合\n    if (selector) {\n      // documentからselectorの要素を取得する\n      parent = document.querySelector(selector)\n    }\n\n    // parentが存在していたらparentを返す\n    // そうでなければ、elementのparentNodeで返す\n    // parentNodeは親ノード\n    return parent || element.parentNode\n  }\n\n  // eslint-disable-next-line complexity\n  static _dataApiKeydownHandler(event) {\n    // inputとtextareaの場合は、dropdownのコマンドを無効化する\n    if (/input|textarea/i.test(event.target.tagName)\n      ? event.which === SPACE_KEYCODE || event.which !== ESCAPE_KEYCODE &&\n      (event.which !== ARROW_DOWN_KEYCODE && event.which !== ARROW_UP_KEYCODE ||\n        $(event.target).closest(Selector.MENU).length) : !REGEXP_KEYDOWN.test(event.which)) {\n      return\n    }\n\n    // イベントを無効化して、伝藩しないようにする\n    event.preventDefault()\n    event.stopPropagation()\n\n    // disable属性または、disableクラスを持っていた場合、処理を終了する\n    if (this.disabled || $(this).hasClass(ClassName.DISABLED)) {\n      return\n    }\n\n    // dropdownの親要素を取得する\n    const parent   = Dropdown._getParentFromElement(this)\n    // parentが.showクラスを持っているか判定\n    const isActive = $(parent).hasClass(ClassName.SHOW)\n\n    // isActiveがfalseか、event.whichがエスケープキーだった場合、処理を終了させる\n    if (!isActive && event.which === ESCAPE_KEYCODE) {\n      return\n    }\n\n    // isActiveがfalseまたは、isActiveがtrueかつエスケープキーが押下された場合もしくは、スペースキーが押下された場合\n    if (!isActive || isActive && (event.which === ESCAPE_KEYCODE || event.which === SPACE_KEYCODE)) {\n      // エスキープキーだった場合\n      if (event.which === ESCAPE_KEYCODE) {\n        // parentのdata_toggleを持つ要素を取得\n        const toggle = parent.querySelector(Selector.DATA_TOGGLE)\n        // toggleをフォーカスする\n        $(toggle).trigger('focus')\n      }\n\n      // クリップイベントを発動する\n      $(this).trigger('click')\n      return\n    }\n\n    // disableしてないdropdown-menuとdropdown-itemを取得して、visibleのみを残す\n    const items = [].slice.call(parent.querySelectorAll(Selector.VISIBLE_ITEMS))\n      .filter((item) => $(item).is(':visible'))\n\n    // itemsで取得したものがなかったら処理終了\n    if (items.length === 0) {\n      return\n    }\n\n    // event.targetが何番目か取得する\n    let index = items.indexOf(event.target)\n\n    // 上キーが押されていて、indexが0よりおおきかったら\n    if (event.which === ARROW_UP_KEYCODE && index > 0) {\n      // indexを-1する\n      index--\n    }\n\n    // 下キーが押されていて、indexがindexの長さ-1より小さかったら\n    if (event.which === ARROW_DOWN_KEYCODE && index < items.length - 1) {\n      // indexを＋1する\n      index++\n    }\n\n      // indexが0より小さかったら\n    if (index < 0) {\n      // indexを0にする\n      index = 0\n    }\n\n    // drop-down-itemのindex番目をfucusする\n    items[index].focus()\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document)\n  // data-toggle=\"dropdown\"のキーイベントを登録\n  .on(Event.KEYDOWN_DATA_API, Selector.DATA_TOGGLE, Dropdown._dataApiKeydownHandler)\n  // .dropdown-menuのキーイベントを登録\n  .on(Event.KEYDOWN_DATA_API, Selector.MENU, Dropdown._dataApiKeydownHandler)\n  // メニュークリーンを登録\n  .on(`${Event.CLICK_DATA_API} ${Event.KEYUP_DATA_API}`, Dropdown._clearMenus)\n  // [data-toggle=\"dropdown\"]のイベント伝藩を止めて、jQueryInterfaceをcallする\n  .on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n    event.preventDefault()\n    event.stopPropagation()\n    Dropdown._jQueryInterface.call($(this), 'toggle')\n  })\n  // イベントが伝藩しないようにする\n  .on(Event.CLICK_DATA_API, Selector.FORM_CHILD, (e) => {\n    e.stopPropagation()\n  })\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Dropdown._jQueryInterface\n$.fn[NAME].Constructor = Dropdown\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Dropdown._jQueryInterface\n}\n\n\nexport default Dropdown\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): modal.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'modal'\nconst VERSION = '4.4.1'\nconst DATA_KEY = 'sc.modal'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\nconst ESCAPE_KEYCODE = 27 // KeyboardEvent.which value for Escape (Esc) key\n\nconst Default = {\n  backdrop : true,\n  keyboard : true,\n  focus : true,\n  show : true\n}\n\nconst DefaultType = {\n  backdrop : '(boolean|string)',\n  keyboard : 'boolean',\n  focus : 'boolean',\n  show : 'boolean'\n}\n\nconst Event = {\n  HIDE : `hide${EVENT_KEY}`,\n  HIDE_PREVENTED : `hidePrevented${EVENT_KEY}`,\n  HIDDEN : `hidden${EVENT_KEY}`,\n  SHOW : `show${EVENT_KEY}`,\n  SHOWN : `shown${EVENT_KEY}`,\n  FOCUSIN : `focusin${EVENT_KEY}`,\n  RESIZE : `resize${EVENT_KEY}`,\n  CLICK_DISMISS : `click.dismiss${EVENT_KEY}`,\n  KEYDOWN_DISMISS : `keydown.dismiss${EVENT_KEY}`,\n  MOUSEUP_DISMISS : `mouseup.dismiss${EVENT_KEY}`,\n  MOUSEDOWN_DISMISS : `mousedown.dismiss${EVENT_KEY}`,\n  CLICK_DATA_API : `click${EVENT_KEY}${DATA_API_KEY}`\n}\n\nconst ClassName = {\n  SCROLLABLE : 'modal-dialog-scrollable',\n  SCROLLBAR_MEASURER : 'modal-scrollbar-measure',\n  BACKDROP : 'modal-backdrop',\n  OPEN : 'modal-open',\n  FADE : 'fade',\n  SHOW : 'show',\n  STATIC : 'modal-static'\n}\n\nconst Selector = {\n  DIALOG : '.modal-dialog',\n  MODAL_BODY : '.modal-body',\n  DATA_TOGGLE : '[data-toggle=\"modal\"]',\n  DATA_DISMISS : '[data-dismiss=\"modal\"]',\n  FIXED_CONTENT : '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT : '.sticky-top'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Modal {\n  constructor(element, config) {\n    // configを取得\n    this._config = this._getConfig(config)\n    // modal要素\n    this._element = element\n    // .modal-dialog要素を取得する\n    this._dialog = element.querySelector(Selector.DIALOG)\n    this._backdrop = null\n    this._isShown = false\n    this._isBodyOverflowing = false\n    this._ignoreBackdropClick = false\n    this._isTransitioning = false\n    this._scrollbarWidth = 0\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  // Public\n\n  toggle(relatedTarget) {\n    // isShownがtrueだった場合は、hideを実行\n    // falseの場合は、クリックされるbtn要素を引数に、showを実行\n    return this._isShown ? this.hide() : this.show(relatedTarget)\n  }\n\n  show(relatedTarget) {\n    // isShownか_isTransitioningがtrueの場合は処理終了\n    if (this._isShown || this._isTransitioning) {\n      return\n    }\n\n    // modal要素が、fadeクラスを持っていたら\n    if ($(this._element).hasClass(ClassName.FADE)) {\n      // _isTransitioningにtrueを代入\n      this._isTransitioning = true\n    }\n\n    // showイベントをrelatedTargetに対して、定義する。\n    const showEvent = $.Event(Event.SHOW, {\n      relatedTarget\n    })\n\n    // modalイベントに対してshowイベントを発動する\n    $(this._element).trigger(showEvent)\n\n    // isShownがtrueもしくは、showEvenetがブラウザの動作を停止していた場合\n    // 処理終了\n    if (this._isShown || showEvent.isDefaultPrevented()) {\n      return\n    }\n\n    // isShownをtrueにする\n    this._isShown = true\n\n    // スクロールバーが存在するか確認し\n    // スクロールバーの横幅を取得\n    this._checkScrollbar()\n    // .modal-openでoverflow: hiddenにしたとき、\n    // 表示がくずれない用に、paddingかmarginを調整する\n    this._setScrollbar()\n\n    // modal要素の幅をスクロールバーに合わせて調整\n    this._adjustDialog()\n\n    // ESCキー押下時のイベントをmodal要素に対して設定\n    // .modal-staticが付与されていたらアニメーションしながらフォーカスする。付与されていなかったらhide\n    this._setEscapeEvent()\n    // windowリサイズ時に、modal要素の横幅を調整する\n    // イベントを定義\n    this._setResizeEvent()\n\n    // modal要素に、click-dismissイベントを設定\n    // 対象セクレタのdata-dismiss='modal'クリック時に\n    // modalをhideする\n    $(this._element).on(\n      Event.CLICK_DISMISS,\n      Selector.DATA_DISMISS,\n      (event) => this.hide(event)\n    )\n\n    // .modal-dialog要素に、マウスボタン押下時のイベントを定義する\n    $(this._dialog).on(Event.MOUSEDOWN_DISMISS, () => {\n      // modal要素に対して、マウスボタンが離れた時のイベントをバインドする\n      $(this._element).one(Event.MOUSEUP_DISMISS, (event) => {\n        // event.target(マウスが離れた場所)とmodal要素が一致していた場合\n        if ($(event.target).is(this._element)) {\n          this._ignoreBackdropClick = true\n        }\n      })\n    })\n\n    // _showBackdropはmodalが表示されていたらbackdropを表示して_showElementを実行\n    // modalが非表示ならbackdropを削除して_showElementを実行\n    // _config.backdropがfalseならcallbackを実行するだけ\n    // showElementはmodalを表示する\n    this._showBackdrop(() => this._showElement(relatedTarget))\n  }\n\n  hide(event) {\n    // イベントがあったら停止\n    if (event) {\n      event.preventDefault()\n    }\n\n    // modalが表示されているか、遷移中なら処理終了\n    if (!this._isShown || this._isTransitioning) {\n      return\n    }\n\n    // hideイベントを定義する\n    const hideEvent = $.Event(Event.HIDE)\n\n    // modal要素に対して、hideイベントを実行する\n    $(this._element).trigger(hideEvent)\n    // modalが表示いないまたは、hideEventがブラウザの動作を停止させている場合は処理終了\n    if (!this._isShown || hideEvent.isDefaultPrevented()) {\n      return\n    }\n\n    // isShownをfalseにする\n    this._isShown = false\n    // modal要素が.fadeを持っているか判定\n    const transition = $(this._element).hasClass(ClassName.FADE)\n\n    // modal要素が.fadeを持っている場合\n    if (transition) {\n      // _isTransitioningをtrueにする\n      this._isTransitioning = true\n    }\n\n    // modal要素からエスケープキーでmodalをhideするイベントを削除する\n    this._setEscapeEvent()\n    // modal要素からブラウザのリサイズイベントを削除する\n    this._setResizeEvent()\n\n    // focusinイベントを削除\n    $(document).off(Event.FOCUSIN)\n\n    // modal要素から.showを削除する\n    $(this._element).removeClass(ClassName.SHOW)\n\n    // modal要素からクリックを離した時のイベントを削除する\n    $(this._element).off(Event.CLICK_DISMISS)\n    // dialogからマウスダウンを離したときのイベントを削除する\n    $(this._dialog).off(Event.MOUSEDOWN_DISMISS)\n\n\n    // modal要素が.fadeを持っていたら\n    if (transition) {\n      // modal要素の遷移時間を取得する\n      const transitionDuration  = Util.getTransitionDurationFromElement(this._element)\n\n      // 遷移終了時にmodalを非表示にする\n      $(this._element)\n        .one(Util.TRANSITION_END, (event) => this._hideModal(event))\n        .emulateTransitionEnd(transitionDuration)\n    } else {\n      // modalを非表示にする\n      this._hideModal()\n    }\n  }\n\n  dispose() {\n    // window、this_element、this._dialogのイベントを削除する\n   [window, this._element, this._dialog]\n      .forEach((htmlElement) => $(htmlElement).off(EVENT_KEY))\n\n    // documentには、Event.FOCUSIN`と `Event.CLICK_DATA_APIの2つのイベントがある\n    // documentのfocusinイベントを削除\n    $(document).off(Event.FOCUSIN)\n\n    // modal要素からdata_keyを削除する\n    $.removeData(this._element, DATA_KEY)\n\n    // 各種設定初期化\n    this._config = null\n    this._element = null\n    this._dialog = null\n    this._backdrop = null\n    this._isShown = null\n    this._isBodyOverflowing = null\n    this._ignoreBackdropClick = null\n    this._isTransitioning = null\n    this._scrollbarWidth = null\n  }\n\n  handleUpdate() {\n    // modal要素の幅をスクロールバーに合わせて調整\n    this._adjustDialog()\n  }\n\n  // Private\n\n  _getConfig(config) {\n    // configにDefaultとconfigを格納する\n    config = {\n      ...Default,\n      ...config\n    }\n    // configの型がDefaultTypeと一致しているか確認\n    // 一致していなかった場合は、エラー\n    Util.typeCheckConfig(NAME, config, DefaultType)\n    // configを返す\n    return config\n  }\n\n  _triggerBackdropTransition() {\n    // .modal-staticはアニメーションで要素をフォーカスする\n    // _config.backdropがstaticの場合（Defaultではstatic）\n    if (this._config.backdrop === 'static') {\n      // hidePreventedイベントを定義する\n      const hideEventPrevented = $.Event(Event.HIDE_PREVENTED)\n\n      // modal要素に対してhideEventPreventedを実行する\n      $(this._element).trigger(hideEventPrevented)\n      // イベントでブラウザのデフォルトの動作が停止されていた場合は処理終了\n      if (hideEventPrevented.defaultPrevented) {\n        return\n      }\n\n      // modal要素に.staticを追加\n      this._element.classList.add(ClassName.STATIC)\n\n      // modal要素の遷移時間を取得\n      const modalTransitionDuration = Util.getTransitionDurationFromElement(this._element)\n\n      // 遷移終了時のイベントをバインド\n      $(this._element).one(Util.TRANSITION_END, () => {\n        // modal要素から.staticを削除\n        this._element.classList.remove(ClassName.STATIC)\n      })\n      .emulateTransitionEnd(modalTransitionDuration) // 遷移終了時のイベントを実行\n      this._element.focus() // modal要素にフォーカスする\n    } else {\n      // this._config.backdropがstaticじゃない場合は\n      // hideを実行\n      this.hide()\n    }\n  }\n\n  _showElement(relatedTarget) {\n    // relatedTargetはbtnとかのトリガー要素\n    // this._elementはmodal要素\n\n    // modal要素が.fadeを持っているか判定\n    const transition = $(this._element).hasClass(ClassName.FADE)\n    // this._dialogが存在する場合は、modal-body要素を取得する。\n    // 存在しない場合は、null\n    const modalBody = this._dialog ? this._dialog.querySelector(Selector.MODAL_BODY) : null\n\n    // modal要素の親要素が存在していないまたは、\n    // parentNodeのがエレメントじゃない場合\n    if (!this._element.parentNode ||\n        this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {\n      // bodyにmodal要素を追加する\n      document.body.appendChild(this._element)\n    }\n\n    // modal要素にdisplay:block;を設定する\n    this._element.style.display = 'block'\n    // modal要素のaria-hidden属性を削除する\n    this._element.removeAttribute('aria-hidden')\n    // modal要素に、aria-modal=\"true\"を設定する\n    this._element.setAttribute('aria-modal', true)\n\n    // .modal-dialogが.modal-dialog-scrollableを持っているかつ、\n    // .modal-body要素が存在する場合\n    if ($(this._dialog).hasClass(ClassName.SCROLLABLE) && modalBody) {\n      // .modal-bodyのスクロール位置を0にする\n      modalBody.scrollTop = 0\n    } else {\n      // modal要素のスクロール位置を0にする\n      this._element.scrollTop = 0\n    }\n\n    // modal要素が.fadeを持っている場合\n    if (transition) {\n      // modal要素のpaddingとborderを含む\n      // 高さを取得する\n      Util.reflow(this._element)\n    }\n\n    // modal要素に.showを追加する\n    $(this._element).addClass(ClassName.SHOW)\n\n    // _config.focusがtrueの場合\n    if (this._config.focus) {\n      // modal要素をフォーカスする\n      this._enforceFocus()\n    }\n\n    // shownイベントを定義する\n    const shownEvent = $.Event(Event.SHOWN, {\n      relatedTarget\n    })\n\n    // 遷移完了後のイベントを定義\n    const transitionComplete = () => {\n      // _config.focusがtrueならフォーカスする\n      if (this._config.focus) {\n        this._element.focus()\n      }\n      // _isTransitioningをfalseにする\n      this._isTransitioning = false\n      // modal要素に対して、shownEventを発動する\n      $(this._element).trigger(shownEvent)\n    }\n\n    // modal要素が.fadeを持っている場合\n    if (transition) {\n      // .modal-dialog要素から遷移時間を取得\n      const transitionDuration  = Util.getTransitionDurationFromElement(this._dialog)\n\n      // modal-dialogにtransisionendイベントをバインドして\n      // 遷移時間分ずらして実行\n      $(this._dialog)\n        .one(Util.TRANSITION_END, transitionComplete)\n        .emulateTransitionEnd(transitionDuration)\n    } else {\n      // modal要素が.fadeをもっていない場合は、\n      // transitionCompleteを実行する\n      transitionComplete()\n    }\n  }\n\n  // modal要素をフォーカスする\n  _enforceFocus() {\n    $(document)\n      .off(Event.FOCUSIN) // 無限フォーカスループにならないように、フォーカスイベントを削除する\n      .on(Event.FOCUSIN, (event) => { // フォーカスイベントをバインドする\n        if (document !== event.target && // event.targetとdocumentが一致しない\n            this._element !== event.target && // event.targetとmodal要素が一致しない\n            $(this._element).has(event.target).length === 0) { // modal要素にevent.targetが存在しない場合\n              // modal要素をフォーカスする\n              this._element.focus()\n        }\n      })\n  }\n\n  _setEscapeEvent() {\n    if (this._isShown) { // isShownがtrueだった場合（show関数の冒頭でtrueにしてる）\n      // modal要素に、keydown.dismissイベントをバインドする\n      $(this._element).on(Event.KEYDOWN_DISMISS, (event) => {\n        //  _config.keyboardがtrueで、エスケープキーを謳歌された場合\n        if (this._config.keyboard && event.which === ESCAPE_KEYCODE) {\n          // エスケープキーのデフォルト動作を停止する\n          event.preventDefault()\n          // hideを実行\n          this.hide()\n        } else if (!this._config.keyboard && event.which === ESCAPE_KEYCODE) {\n          // _config.keyboardがfalseで、エスケープキーが押下されたとき\n          // backdropが'static'の場合は、要素をアニメーションしながらフォーカスする\n          // staticじゃない場合はhideする\n          this._triggerBackdropTransition()\n        }\n      })\n    } else if (!this._isShown) { // modalが表示されていないとき\n      // modalから、キーイベントを削除する\n      $(this._element).off(Event.KEYDOWN_DISMISS)\n    }\n  }\n\n  _setResizeEvent() {\n    // modalが表示されていたら\n    if (this._isShown) {\n      // windowのリサイズ時イベントを設定する\n      // modal要素の幅をスクロールバーに合わせて調整\n      $(window).on(Event.RESIZE, (event) => this.handleUpdate(event))\n    } else {\n      // modalが表示されていない場合は、リサイズイベント削除\n      $(window).off(Event.RESIZE)\n    }\n  }\n\n  _hideModal() {\n    // modal要素にdisplay:none;を設定する\n    this._element.style.display = 'none'\n    // modal要素にaria-hidden='true'を付与する\n    this._element.setAttribute('aria-hidden', true)\n    // modal要素からaria-modal属性を削除する\n    this._element.removeAttribute('aria-modal')\n    // _isTransitioningをfasleにする\n    this._isTransitioning = false\n    // backdropを削除する\n    this._showBackdrop(() => {\n      $(document.body).removeClass(ClassName.OPEN) // modyの.modal-openを削除する\n      this._resetAdjustments() // modal要素から左右のpaddingを削除する\n      this._resetScrollbar() // setScrollbarで設定したpaddingとかを削除する\n      // hiddenイベントを発動する\n      $(this._element).trigger(Event.HIDDEN)\n    })\n  }\n\n  _removeBackdrop() {\n    if (this._backdrop) { // backdrop要素が存在していた場合\n      $(this._backdrop).remove() // backdrop要素を削除\n      this._backdrop = null // backdrop要素をnullにする\n    }\n  }\n\n  // callbackは関数\n  _showBackdrop(callback) {\n    // backdropはmodal表示時の背景\n    // http://bootstrap3.cyberlab.info/javascript/modals-options-backdrop.html#usage2\n\n    // modal要素が.fadeを持っている場合はfadeを格納\n    // 持っていない場合は空文字\n    const animate = $(this._element).hasClass(ClassName.FADE)\n      ? ClassName.FADE : ''\n\n    // _isShownと_config.backdropがtrueの場合\n    // modalをshowするとき\n    if (this._isShown && this._config.backdrop) {\n      // _backdropに<div>を作成する\n      this._backdrop = document.createElement('div')\n      // divに.modal-backdropを付与する\n      this._backdrop.className = ClassName.BACKDROP\n\n      // modal要素が.fadeを持っていた場合\n      if (animate) {\n        // backdropに.fadeを追加\n        this._backdrop.classList.add(animate)\n      }\n\n      // body要素にdiv.modal-backdrop要素を追加\n      $(this._backdrop).appendTo(document.body)\n\n      // クリックを離したときにのイベントを定義\n      $(this._element).on(Event.CLICK_DISMISS, (event) => {\n        // this._ignoreBackdropClickがtrueの場合\n        if (this._ignoreBackdropClick) {\n          // falseにして、処理を終了する\n          this._ignoreBackdropClick = false\n          return\n        }\n        // クリックを離したところと、イベントハンドラがアタッチされた要素が一致しない場合\n        if (event.target !== event.currentTarget) {\n          // 処理を終了する\n          return\n        }\n\n        // backdropが'static'の場合は、要素をアニメーションしながらフォーカスする\n        // staticじゃない場合はhideする\n        this._triggerBackdropTransition()\n      })\n\n      // modal要素が.fadeを持っていた場合\n      if (animate) {\n        // backdropの高さを取得する\n        Util.reflow(this._backdrop)\n      }\n\n      // backdropに.showを追加する\n      $(this._backdrop).addClass(ClassName.SHOW)\n\n      // callbackが存在しない場合は処理終了\n      if (!callback) {\n        return\n      }\n\n      // .fadeが付与されていなかったらcallbackを実行して処理終了\n      if (!animate) {\n        callback()\n        return\n      }\n\n      // 以下は、.fadeがmodal要素に付与されていて、callabckが存在する場合\n\n      // backdropの遷移時間を取得する\n      const backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop)\n\n      // backdropの遷移終了時のイベントを定義し、\n      // 遷移時間の分だけ送らせて実行\n      $(this._backdrop)\n        .one(Util.TRANSITION_END, callback)\n        .emulateTransitionEnd(backdropTransitionDuration)\n    } else if (!this._isShown && this._backdrop) {\n      // isShownがfalseで、backdropがtrueの場合\n      // modalをhideするとき\n\n      // backdrop要素から.showを削除\n      $(this._backdrop).removeClass(ClassName.SHOW)\n\n      // backdropを削除する関数を定義\n      const callbackRemove = () => {\n        this._removeBackdrop() // backdropを削除\n        if (callback) { // callback関数が存在していたら実行\n          callback()\n        }\n      }\n\n      // modal要素が.fadeを持っていたら\n      if ($(this._element).hasClass(ClassName.FADE)) {\n        // backdropの遷移時間を取得する\n        const backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop)\n\n        // backdropの遷移終了時にcallbackRemoveを実行\n        $(this._backdrop)\n          .one(Util.TRANSITION_END, callbackRemove)\n          .emulateTransitionEnd(backdropTransitionDuration)\n      } else {\n        // .fadeがなかったらそのままbackdropを削除\n        callbackRemove()\n      }\n    } else if (callback) {\n      // _config.backdropがfalseの場合は、\n      // callbackを実行\n      callback()\n    }\n  }\n\n  // ----------------------------------------------------------------------\n  // the following methods are used to handle overflowing modals\n  // todo (fat): these should probably be refactored out of modal.js\n  // ----------------------------------------------------------------------\n\n  _adjustDialog() {\n    // this._elementはmodal要素\n\n    // modal要素の高さが、ブラウザの表示高さを超えていた場合は、true\n    // this.elementは表示されてないから、基本は0\n    const isModalOverflowing =\n      this._element.scrollHeight > document.documentElement.clientHeight\n\n    // _isBodyOverflowingがfalseで、isModalOverflowingがtrueの場合\n    if (!this._isBodyOverflowing && isModalOverflowing) {\n      // modal要素の実際のpadding-leftをスクロールバーの幅にする\n      this._element.style.paddingLeft = `${this._scrollbarWidth}px`\n    }\n\n    // _isBodyOverflowingがtrueで、isModalOverflowingがfalseの場合\n    if (this._isBodyOverflowing && !isModalOverflowing) {\n      // modal要素の実際のpadding-rightをスクロールバーの幅にする\n      this._element.style.paddingRight = `${this._scrollbarWidth}px`\n    }\n  }\n\n  _resetAdjustments() {\n    // modal要素から左右のpaddingを削除する\n    this._element.style.paddingLeft = ''\n    this._element.style.paddingRight = ''\n  }\n\n  _checkScrollbar() {\n    // body要素の幅を取得\n    const rect = document.body.getBoundingClientRect()\n    // body要素の幅(right+left)がwindowのコンテンツ幅より小さいか判定\n    // つまりX方向にスクロールバーがあるか確認\n    this._isBodyOverflowing = rect.left + rect.right < window.innerWidth\n    // スクロールバーの横幅を取得\n    this._scrollbarWidth = this._getScrollbarWidth()\n  }\n\n  _setScrollbar() {\n    // body要素がはみ出ていた場合\n    if (this._isBodyOverflowing) {\n      // DOMNode.style.paddingRightは実際の値を返す。設定されていない場合は''を返す\n      // $(DOMNode).css('padding-right')はcssの値を返す。設定されていない場合は''を返す\n\n      // .fixed-top、.fixed-bottom、.is-fixed、.sticky-topを持つ要素を取得する\n      const fixedContent = [].slice.call(document.querySelectorAll(Selector.FIXED_CONTENT))\n      // .sticky-topを持つ要素を取得する\n      const stickyContent = [].slice.call(document.querySelectorAll(Selector.STICKY_CONTENT))\n\n      // 固定コンテンツのpaddingを調整する\n      $(fixedContent).each((index, element) => {\n        // fixedContentの実際のpadding-rightを取得する\n        const actualPadding = element.style.paddingRight\n        // fixedContentにcssで設定されているpadding-rightを取得\n        const calculatedPadding = $(element).css('padding-right')\n        $(element)\n          .data('padding-right', actualPadding) // elementに実際のpadding-rightを設定する\n          .css('padding-right', `${parseFloat(calculatedPadding) + this._scrollbarWidth}px`) // elementのpadding-rightにスクロールバーの横幅を足した値を設定する\n      })\n\n      // stickyコンテンツのmarginを調整する\n      $(stickyContent).each((index, element) => {\n        // stickyコンテンツの実際のmargin-rightを取得する\n        const actualMargin = element.style.marginRight\n        // stickyコンテンツにcssで指定されているmargin-rightを取得する\n        const calculatedMargin = $(element).css('margin-right')\n        $(element)\n          .data('margin-right', actualMargin) // elementに実際のmargin-rightを設定する\n          .css('margin-right', `${parseFloat(calculatedMargin) - this._scrollbarWidth}px`) // elementのmargin-rightにスクロールバーの横幅を足した値を設定する\n      })\n\n      // body要素のpaddingを調整する\n      // body要素の実際のpadding-rightを取得する\n      const actualPadding = document.body.style.paddingRight\n      // body要素にcssで指定されているpadding-rightを取得する\n      const calculatedPadding = $(document.body).css('padding-right')\n\n      $(document.body)\n        .data('padding-right', actualPadding) // body要素に実際のpadding-rightを設定する\n        .css('padding-right', `${parseFloat(calculatedPadding) + this._scrollbarWidth}px`) // body要素のpadding-rightにスクロールバーの横幅を足した値を設定する\n    }\n\n    // body要素に.modal-openを追加する\n    // overflow: hidden;でスクロールバーがなくなった時に、表示がずれないようにするため\n    $(document.body).addClass(ClassName.OPEN)\n  }\n\n  _resetScrollbar() {\n    // fixedコンテンツのpaddindを戻す\n    // fixedクラスを持つ要素を取得\n    const fixedContent = [].slice.call(document.querySelectorAll(Selector.FIXED_CONTENT))\n    $(fixedContent).each((index, element) => {\n      // _setScrollbarで設定したpadding-rightを取得する\n      const padding = $(element).data('padding-right')\n      // padding-right属性を削除\n      $(element).removeData('padding-right')\n      // paddingが存在したらそれを代入。なかったら空文字\n      element.style.paddingRight = padding ? padding : ''\n    })\n\n    // stickyコンテンツのpaddingを戻す\n    // .sticky-topが付与された要素を収録\n    const elements = [].slice.call(document.querySelectorAll(`${Selector.STICKY_CONTENT}`))\n    $(elements).each((index, element) => {\n      // 要素からmargin-rightを取得\n      const margin = $(element).data('margin-right')\n      // marginがundefinedじゃなかったら\n      if (typeof margin !== 'undefined') {\n        // .sticky-topのmargin-rightを削除する\n        $(element).css('margin-right', margin).removeData('margin-right')\n      }\n    })\n\n    // bodyのpadding-rightを戻す\n    const padding = $(document.body).data('padding-right')\n    // modyのpadding-rightを咲くjおする\n    $(document.body).removeData('padding-right')\n    // paddingが存在したらその値、なかったら空文字\n    document.body.style.paddingRight = padding ? padding : ''\n  }\n\n  _getScrollbarWidth() { // thx d.walsh\n    // div要素を作成\n    const scrollDiv = document.createElement('div')\n    // divに.modal-scrollbar-measurerを付与\n    scrollDiv.className = ClassName.SCROLLBAR_MEASURER\n    // scrolldivをbody要素に追加\n    document.body.appendChild(scrollDiv)\n    // scrollDiv.getBoundingClientRectはscssで指定したwidthを取得(50px)\n    // clientWidthはスクロールバーの横幅を含まないscrollDivの横幅を取得\n    // これを引くと、スクロールバーの横幅になる\n    const scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth\n    // scrollDivを削除\n    document.body.removeChild(scrollDiv)\n    // スクロールバーの横幅を返す\n    return scrollbarWidth\n  }\n\n  // Static\n\n  // relatedTargetはクリックされるbtn要素\n  static _jQueryInterface(config, relatedTarget) {\n    return this.each(function () {\n      // thisはmodal要素\n      // thisのDATA_KEYを取得\n      let data = $(this).data(DATA_KEY)\n      // _configに値を格納する\n      const _config = {\n        ...Default, // Defaultを格納\n        ...$(this).data(), // modal要素からdataを取得し格納\n        ...typeof config === 'object' && config ? config : {} // ongjectかつ存在してたら、configを格納。そうじゃないなら{}を格納\n      }\n\n      // dataが存在していなかったら\n      if (!data) {\n        // modalをインスタンス化してdataに格納する\n        data = new Modal(this, _config)\n        // dataをmodal要素に入れる\n        $(this).data(DATA_KEY, data)\n      }\n\n      // configがStringの場合\n      if (typeof config === 'string') {\n        // modalクラスにメソッドが存在するか確認\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n        // メソッドが存在した場合は、relatedTargetを引数に実行する\n        data[config](relatedTarget)\n      } else if (_config.show) { // _config.showがtrueの場合\n        // relatedTargetを引数にshowを実行する\n        data.show(relatedTarget)\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n // sc.modal.data-apiのイベントを定義する\n // 対象は、 [data-toggle=\"modal\"]\n$(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n  let target\n  // thisは[data-toggle=\"modal\"]が付与されているelement\n  // [data-toggle=\"modal\"]要素で指定されている['data-target\"]かhrefを取得する\n  // つまり、modal要素\n  const selector = Util.getSelectorFromElement(this)\n\n  // selectorが存在したら\n  if (selector) {\n    // targetにselectorを元に取得した要素を格納する\n    target = document.querySelector(selector)\n  }\n\n  // $(target).data(DATA_KEY)が存在したら'toggle'を格納する\n  // 存在していない場合は、\n  const config = $(target).data(DATA_KEY)\n    ? 'toggle' : {\n      ...$(target).data(), // target(modal要素)のdata属性を全て取得\n      ...$(this).data() // [data-toggle=\"modal\"]が付与された要素のdata属性を全て取得\n    }\n\n    // thisのhtmlが<a>か<area>だったらブラウザのデフォルト動作を禁止する\n    // <a>クリックでページが変わるとか\n  if (this.tagName === 'A' || this.tagName === 'AREA') {\n    event.preventDefault()\n  }\n\n  // modalのshowイベントをバインドしてshow時に無名関数を実行する\n  const $target = $(target).one(Event.SHOW, (showEvent) => {\n    // showEventがブラウザの動作を停止していたら\n    if (showEvent.isDefaultPrevented()) {\n      // modalが実際に表示される場合のみforcusする\n      return\n    }\n\n    // modalのhiddenイベントをバインドして、hidden時に無名関数を実行する\n    $target.one(Event.HIDDEN, () => {\n      // thisは[data-toggle=\"modal\"]が付与された要素\n      // それが表示状態なら\n      if ($(this).is(':visible')) {\n        // focusする\n        this.focus()\n      }\n    })\n  })\n\n  // configとthisはjQueryInterfaceに渡す引数\n  Modal._jQueryInterface.call($(target), config, this)\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Modal._jQueryInterface\n$.fn[NAME].Constructor = Modal\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Modal._jQueryInterface\n}\n\nexport default Modal\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): tools/sanitizer.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst uriAttrs = [\n  'background',\n  'cite',\n  'href',\n  'itemtype',\n  'longdesc',\n  'poster',\n  'src',\n  'xlink:href'\n]\n\n\nconst ARIA_ATTRIBUTE_PATTERN = /^aria-[\\w-]*$/i\n\nexport const DefaultWhitelist = {\n  // htmlタグにつけることを許可された属性達\n  '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],\n  a: ['target', 'href', 'title', 'rel'],\n  area: [],\n  b: [],\n  br: [],\n  col: [],\n  code: [],\n  div: [],\n  em: [],\n  hr: [],\n  h1: [],\n  h2: [],\n  h3: [],\n  h4: [],\n  h5: [],\n  h6: [],\n  i: [],\n  img: ['src', 'alt', 'title', 'width', 'height'],\n  li: [],\n  ol: [],\n  p: [],\n  pre: [],\n  s: [],\n  small: [],\n  span: [],\n  sub: [],\n  sup: [],\n  strong: [],\n  u: [],\n  ul: []\n}\n\n/**\n * 安全なURLのパターン\n *\n * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts\n */\nconst SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi\n\n/**\n * 安全なdataのURLパターン。画像、ビデオ、音声のみが一致する\n *\n * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts\n */\nconst DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i\n\n// attrはhtmlの属性、allowedAttributeListは許可されている属性一覧\nfunction allowedAttribute(attr, allowedAttributeList) {\n  // attrの属性とかを小文字で取得する\n  const attrName = attr.nodeName.toLowerCase()\n\n  // allowedAttributeListにattrNameがあるか探す。なかったら-1が帰ってくる\n  if (allowedAttributeList.indexOf(attrName) !== -1) {\n    // uriAttrsにattrNameがあるか探す\n    if (uriAttrs.indexOf(attrName) !== -1) {\n      // 値が真偽か判定して真偽を返す\n      // attrの中で安全なURLと安全なdataURLと一致するものがあったらtrue\n      // なかったらfalse\n      return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN))\n    }\n\n    // 属性がなかったらtrueを返す。処理はここで終わり\n    return true\n  }\n\n  // allowedAttributeListから正規表現として使える文字を選別\n  const regExp = allowedAttributeList.filter((attrRegex) => attrRegex instanceof RegExp)\n\n  // attrNameの中にregExpとマッチするものがあるか確認\n  for (let i = 0, l = regExp.length; i < l; i++) {\n    if (attrName.match(regExp[i])) {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport function sanitizeHtml(unsafeHtml, whiteList, sanitizeFn) {\n  // unsafeHtmlがなかったらそのまま返す\n  if (unsafeHtml.length === 0) {\n    return unsafeHtml\n  }\n\n  // sanitizeFnがtrueで、functionならsanitizeFnを実行して返す\n  if (sanitizeFn && typeof sanitizeFn === 'function') {\n    return sanitizeFn(unsafeHtml)\n  }\n\n  const domParser = new window.DOMParser()\n  // DOMツリー作成\n  const createdDocument = domParser.parseFromString(unsafeHtml, 'text/html')\n  // whitelistのキーをwhitelistKeysに入れる\n  const whitelistKeys = Object.keys(whiteList)\n  // createdDocumentの要素を1個ずつ取得する\n  const elements = [].slice.call(createdDocument.body.querySelectorAll('*'))\n\n  // エレメントの数だけ回すよ\n  for (let i = 0, len = elements.length; i < len; i++) {\n    // elにelementsのi番目を入れる\n    const el = elements[i]\n    // nodeNameを小文字で取得する\n    // 取得するnodeNameには、Classも含まれる\n    const elName = el.nodeName.toLowerCase()\n\n    // el.nodeNameがwhitelistKeysにあるか判定。\n    // '*'には一致しないんだね\n    if (whitelistKeys.indexOf(el.nodeName.toLowerCase()) === -1) {\n      // elを削除\n      el.parentNode.removeChild(el)\n\n      // forの条件式に戻る\n      continue\n    }\n\n    // elの属性を取得\n    // roleとかclass\n    const attributeList = [].slice.call(el.attributes)\n    // whiteList[*]は全部に適用されるので、基本入れる\n    // whiteList[elName]は該当するelementがあれば入れる\n    // []は多分区切り\n    const whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || [])\n\n    // attributeList(htmlについてたclassとかの属性)\n    attributeList.forEach((attr) => {\n      // attrが許可された属性か判定\n      if (!allowedAttribute(attr, whitelistedAttributes)) {\n        // 許可されてなかったらElementsから属性を削除\n        el.removeAttribute(attr.nodeName)\n      }\n    })\n  }\n\n   // サニタイズしたHTMLを返却\n  return createdDocument.body.innerHTML\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): tooltip.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n  DefaultWhitelist,\n  sanitizeHtml\n} from './tools/sanitizer'\nimport $ from 'jquery'\nimport Popper from 'popper.js'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'tooltip'\nconst VERSION = '4.4.1'\nconst DATA_KEY = 'sc.tooltip'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\nconst CLASS_PREFIX = 'sc-tooltip'\nconst SCCLS_PREFIX_REGEX = new RegExp(`(^|\\\\s)${CLASS_PREFIX}\\\\S+`, 'g')\nconst DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn']\n\nconst DefaultType = {\n  animation : 'boolean',\n  template : 'string',\n  title : '(string|element|function)',\n  trigger : 'string',\n  delay : '(number|object)',\n  html : 'boolean',\n  selector : '(string|boolean)',\n  placement : '(string|function)',\n  offset : '(number|string|function)',\n  container : '(string|element|boolean)',\n  fallbackPlacement : '(string|array)',\n  boundary : '(string|element)',\n  sanitize : 'boolean',\n  sanitizeFn : '(null|function)',\n  whiteList : 'object',\n  popperConfig : '(null|object)'\n}\n\nconst AttachmentMap = {\n  AUTO : 'auto',\n  TOP : 'top',\n  RIGHT : 'right',\n  BOTTOM : 'bottom',\n  LEFT : 'left'\n}\n\nconst Default = {\n  animation : true,\n  template : '<div class=\"tooltip\" role=\"tooltip\">' +\n                  '<div class=\"arrow\"></div>' +\n                  '<div class=\"tooltip-inner\"></div></div>',\n  trigger : 'hover focus',\n  title : '',\n  delay : 0,\n  html : false,\n  selector : false,\n  placement : 'top',\n  offset : 0,\n  container : false,\n  fallbackPlacement : 'flip',\n  boundary : 'scrollParent',\n  sanitize : true,\n  sanitizeFn : null,\n  whiteList : DefaultWhitelist,\n  popperConfig : null\n}\n\nconst HoverState = {\n  SHOW : 'show',\n  OUT  : 'out'\n}\n\nconst Event = {\n  HIDE : `hide${EVENT_KEY}`,\n  HIDDEN : `hidden${EVENT_KEY}`,\n  SHOW : `show${EVENT_KEY}`,\n  SHOWN : `shown${EVENT_KEY}`,\n  INSERTED : `inserted${EVENT_KEY}`,\n  CLICK : `click${EVENT_KEY}`,\n  FOCUSIN : `focusin${EVENT_KEY}`,\n  FOCUSOUT : `focusout${EVENT_KEY}`,\n  MOUSEENTER : `mouseenter${EVENT_KEY}`,\n  MOUSELEAVE : `mouseleave${EVENT_KEY}`\n}\n\nconst ClassName = {\n  FADE : 'fade',\n  SHOW : 'show'\n}\n\nconst Selector = {\n  TOOLTIP : '.tooltip',\n  TOOLTIP_INNER : '.tooltip-inner',\n  ARROW : '.arrow'\n}\n\nconst Trigger = {\n  HOVER  : 'hover',\n  FOCUS  : 'focus',\n  CLICK  : 'click',\n  MANUAL : 'manual'\n}\n\nclass Tooltip {\n  // elementは data-toggle=\"tooltip\"が付与されたelement\n  // configはobject(config)かfalse\n  constructor(element, config) {\n    // popperがなかったら、throw\n    if (typeof Popper === 'undefined') {\n      throw new TypeError('Simplicss\\'s tooltips require Popper.js (https://popper.js.org/)')\n    }\n\n    // private\n    this._isEnabled = true\n    this._timeout = 0\n    this._hoverState = ''\n    this._activeTrigger = {}\n    this._popper = null\n\n    // Protected\n    this.element = element\n    this.config = this._getConfig(config)\n    this.tip = null\n\n    this._setListeners()\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  static get DATA_KEY() {\n    return DATA_KEY\n  }\n\n  static get Event() {\n    return Event\n  }\n\n  static get EVENT_KEY() {\n    return EVENT_KEY\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  // Public\n\n  enable() {\n    this._isEnabled = true\n  }\n\n  disable() {\n    this._isEnabled = false\n  }\n\n  toggleEnabled() {\n    this._isEnabled = !this._isEnabled\n  }\n\n  toggle(event) {\n    // this._isEnabledがfalseなら処理終了\n    if (!this._isEnabled) {\n      return\n    }\n\n    // イベントが存在した場合\n    if (event) {\n      // dataKeyを格納\n      const dataKey = this.constructor.DATA_KEY\n      // event.currentTargetからdataKeyの値を取得（Tooltipのclass）\n      let context = $(event.currentTarget).data(dataKey)\n\n      // contextがなかったら再設定する\n      if (!context) {\n        context = new this.constructor(\n          event.currentTarget,\n          this._getDelegateConfig()\n        )\n        $(event.currentTarget).data(dataKey, context)\n      }\n\n      // event.currentTargetの逆の値を格納\n      context._activeTrigger.click = !context._activeTrigger.click\n\n      // _activeTriggerがtrueだったら\n      if (context._isWithActiveTrigger()) {\n        // showの処理\n        context._enter(null, context)\n      } else {\n        // falseならhideの処理\n        context._leave(null, context)\n      }\n    } else {\n      // _activeTriggerがfalseの場合\n      // tipelementがshowクラスを持っていたら\n      if ($(this.getTipElement()).hasClass(ClassName.SHOW)) {\n        // hide処理を実行\n        this._leave(null, this)\n        // 処理終了\n        return\n      }\n      // showを持っていなかったらshowをする\n      this._enter(null, this)\n    }\n  }\n\n  dispose() {\n    // タイムアウトを削除\n    clearTimeout(this._timeout)\n\n    // this.elementに紐付いているdataを削除（Tooltipクラス）\n    $.removeData(this.element, this.constructor.DATA_KEY)\n\n    // this.elementに紐付いているイベントを削除\n    $(this.element).off(this.constructor.EVENT_KEY)\n    // .modalに紐付いているイベントも削除\n    $(this.element).closest('.modal').off('hide.sc.modal', this._hideModalHandler)\n\n    // this.tipがあったら削除\n    if (this.tip) {\n      $(this.tip).remove()\n    }\n\n    // 各設定を削除\n    this._isEnabled = null\n    this._timeout = null\n    this._hoverState = null\n    this._activeTrigger = null\n    if (this._popper) {\n      this._popper.destroy()\n    }\n\n    this._popper = null\n    this.element = null\n    this.config = null\n    this.tip = null\n  }\n\n  show() {\n    // 対象のElementsがdisplay:noneだったらエラーにする\n    if ($(this.element).css('display') === 'none') {\n      throw new Error('Please use show on visible elements')\n    }\n\n    // showEventにshow.sc.tooltipを入れる\n    const showEvent = $.Event(this.constructor.Event.SHOW)\n\n    // titleが存在していて、isEnableがtrue\n    if (this.isWithContent() && this._isEnabled) {\n      // showイベントを発動する\n      $(this.element).trigger(showEvent)\n\n      // this,.elementに関連するshadow dowのrootを取得する\n      const shadowRoot = Util.findShadowRoot(this.element)\n      // jQuery.contains( 対象の要素 ,含まれているか調べたい要素 )\n      const isInTheDom = $.contains(\n        // shadowRootがnullじゃなかったらshadowRootが対象の要素\n        // nullだった場合は、this.elementを内包するトップレベルのdocument(bodyとか)\n        shadowRoot !== null ? shadowRoot : this.element.ownerDocument.documentElement,\n        this.element // this.elementを探す\n      )\n\n      // showイベントがブラウザの動作を停止している\n      // もしくは、this.elementがdomにない場合は処理終了\n      if (showEvent.isDefaultPrevented() || !isInTheDom) {\n        return\n      }\n\n      // tip elementの取得\n      const tip = this.getTipElement()\n      // 固有IDを取得\n      const tipId = Util.getUID(this.constructor.NAME)\n\n      // tipに対して、固有のIDを設定\n      tip.setAttribute('id', tipId)\n      // this.elementに対して、tipIDを設定\n      this.element.setAttribute('aria-describedby', tipId)\n      // tipにコンテンツの内容を設定する。あとshowとfadeクラスがあったら削除する\n      this.setContent()\n\n      // animationがtrueの場合\n      if (this.config.animation) {\n        // fadeクラスを付与する\n        $(tip).addClass(ClassName.FADE)\n      }\n\n      // placementがfunctionなら、実行する\n      // functionじゃない場合は、this.config.placementを入れる\n      const placement  = typeof this.config.placement === 'function'\n        ? this.config.placement.call(this, tip, this.element)\n        : this.config.placement\n\n      // AttachmentMapから該当するplacementを取得する\n      const attachment = this._getAttachment(placement)\n      // sc-tooltip-topなどのクラスを付与する\n      this.addAttachmentClass(attachment)\n\n      // body要素を取得する\n      const container = this._getContainer()\n      // tipにthis(tooltip)データを設定する\n      $(tip).data(this.constructor.DATA_KEY, this)\n\n      // this.element.ownerDocument.documentElementはhtml要素\n      // this.tipはtooltip\n      // htmlにtolltipの要素があるか確認する\n      if (!$.contains(this.element.ownerDocument.documentElement, this.tip)) {\n        // htmlにthis.tipが含まれていなかったらtipをcontainer(body要素)に追加する\n        // ここでhtmlに要素を追加して、tooltipを表示してる\n        $(tip).appendTo(container)\n      }\n\n      // inserted.sc.tooltipはツールチップテンプレートがDOMに追加されたときに show.sc.tooltip イベントの後に発動。\n      $(this.element).trigger(this.constructor.Event.INSERTED)\n\n      // this.popperをインスタンス化\n      // popperは位置調整\n      this._popper = new Popper(this.element, tip, this._getPopperConfig(attachment))\n\n      // tipにshowクラスを設定する\n      $(tip).addClass(ClassName.SHOW)\n\n      // iOSのために、空のマウスオーバリスナーを追加\n      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n      if ('ontouchstart' in document.documentElement) {\n        $(document.body).children().on('mouseover', null, $.noop)\n      }\n\n      const complete = () => {\n        // animationがtrueの場合\n        if (this.config.animation) {\n          // popperで定義した表示位置を調整してる\n          this._fixTransition()\n        }\n        // hoverStateを代入\n        const prevHoverState = this._hoverState\n        // hoverStateをnullにする\n        this._hoverState = null\n\n        // shownイベントを実行する\n        $(this.element).trigger(this.constructor.Event.SHOWN)\n\n        // prevHoverStateがoutなら\n        if (prevHoverState === HoverState.OUT) {\n          // hoveroutしたときにhideする関数\n          this._leave(null, this)\n        }\n      }\n\n      // tipがfadeクラスをもってたら\n      if ($(this.tip).hasClass(ClassName.FADE)) {\n        // tip要素から遷移時間を取得\n        const transitionDuration = Util.getTransitionDurationFromElement(this.tip)\n\n      // tipに一度だけ(one)実行されるcompleteをバインド\n        $(this.tip)\n          .one(Util.TRANSITION_END, complete)\n          .emulateTransitionEnd(transitionDuration)\n      } else {\n        // そのままcompleteを実行\n        complete()\n      }\n    }\n  }\n\n  hide(callback) {\n    // tipのelementを取得\n    const tip = this.getTipElement()\n    // hideイベントを定義\n    const hideEvent = $.Event(this.constructor.Event.HIDE)\n    const complete = () => {\n      // tipのHoverStateがshowじゃなく、tipにparentNodeが存在する場合\n      if (this._hoverState !== HoverState.SHOW && tip.parentNode) {\n        // parentNodeからtipを削除する\n        tip.parentNode.removeChild(tip)\n      }\n\n      // tipからsc-tooltipと名のつくクラスを削除する\n      this._cleanTipClass()\n      // this.elementはdata-toggle=\"tooltip\"がついている要素\n      this.element.removeAttribute('aria-describedby')\n      // hiddenイベントを発動\n      $(this.element).trigger(this.constructor.Event.HIDDEN)\n      // popperが存在していたら\n      if (this._popper !== null) {\n        // popperを破棄する\n        this._popper.destroy()\n      }\n\n      // 引数のcallbackがあったら\n      if (callback) {\n        // callbackを実行する\n        callback()\n      }\n    }\n\n    // hideイベントを実行する\n    $(this.element).trigger(hideEvent)\n\n    // hideイベントがブラウザの機能を停止していたら\n    // 処理終了\n    if (hideEvent.isDefaultPrevented()) {\n      return\n    }\n\n    // tipからshowクラスを削除する\n    $(tip).removeClass(ClassName.SHOW)\n\n      // iOSのために、空のマウスオーバリスナーを追加\n      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n    if ('ontouchstart' in document.documentElement) {\n      $(document.body).children().off('mouseover', null, $.noop)\n    }\n\n    // activeTriggerのclick、focus、hoverをfalseにする\n    this._activeTrigger[Trigger.CLICK] = false\n    this._activeTrigger[Trigger.FOCUS] = false\n    this._activeTrigger[Trigger.HOVER] = false\n\n    // tipがfadeクラスを持ってたら\n    if ($(this.tip).hasClass(ClassName.FADE)) {\n      // tip要素から遷移時間を取得\n      const transitionDuration = Util.getTransitionDurationFromElement(tip)\n\n      // tipに一度だけ(one)実行されるcompleteをバインド\n      $(tip)\n        .one(Util.TRANSITION_END, complete)\n        .emulateTransitionEnd(transitionDuration)\n    } else {\n      // fadeを持ってなかったらそのまま実行\n      complete()\n    }\n\n    // hoverStateに空文字を入れる\n    this._hoverState = ''\n  }\n\n  update() {\n    // popperのスケジュールをアップデートする\n    if (this._popper !== null) {\n      this._popper.scheduleUpdate()\n    }\n  }\n\n  // Protected\n\n  isWithContent() {\n    // titleが存在しているか判定\n    return Boolean(this.getTitle())\n  }\n\n  // AttachmentMapから取得したtooltipが出る場所\n  addAttachmentClass(attachment) {\n    // tipのelementにsc-tooltip-topなどのクラスを付与する\n    $(this.getTipElement()).addClass(`${CLASS_PREFIX}-${attachment}`)\n  }\n\n  getTipElement() {\n    // this.tipはHTML elementのtooltip\n    // this.config.templateは、Defaultのtooltipテンプレート\n    this.tip = this.tip || $(this.config.template)[0]\n    return this.tip\n  }\n\n  setContent() {\n    // tipのelementを取得する\n    const tip = this.getTipElement()\n    // tipにテキストを設定する\n    this.setElementContent($(tip.querySelectorAll(Selector.TOOLTIP_INNER)), this.getTitle())\n    // tipからfadeとshowクラスを削除する\n    $(tip).removeClass(`${ClassName.FADE} ${ClassName.SHOW}`)\n  }\n\n  // elementは.tooltip-inner\n  // contentはtitle\n  setElementContent($element, content) {\n    // コンテンツがオブジェクトで、content.nodeTypeまたはcontent.jqueryが存在するか\n    if (typeof content === 'object' && (content.nodeType || content.jquery)) {\n      // contentがDOMノードまたはjQuery\n      // config.htmlがfalse以外の場合\n      if (this.config.html) {\n        // contentの親要素が.tooltip-innerの場合\n        if (!$(content).parent().is($element)) {\n          // .tooltip-innerの子要素を全て削除してcontentを追加する\n          $element.empty().append(content)\n        }\n      } else {\n        // elementのテキストをcontentのテキストにする\n        $element.text($(content).text())\n      }\n\n      return\n    }\n\n    // config.htmlが存在する場合\n    if (this.config.html) {\n      // contentをサニタイズ\n      if (this.config.sanitize) {\n        content = sanitizeHtml(content, this.config.whiteList, this.config.sanitizeFn)\n      }\n\n      // elementのhtmlをcontentに変更\n      $element.html(content)\n    } else {\n      // elementのtextをcontentにする\n      $element.text(content)\n    }\n  }\n\n  getTitle() {\n    // elementのタイトルを取得\n    let title = this.element.getAttribute('data-original-title')\n\n    // タイトルが存在しなかったら\n    if (!title) {\n      // this.config,titleがfunctionなら実行してその結果を返す\n      // 単純にtitleがなかったらDefaultのtitleを使う\n      title = typeof this.config.title === 'function'\n        ? this.config.title.call(this.element)\n        : this.config.title\n    }\n\n    return title\n  }\n\n  // Private\n\n  // 引数は表示位置(topとか)\n  _getPopperConfig(attachment) {\n    // defaultのconfig\n    const defaultScConfig = {\n      placement: attachment,\n      modifiers: {\n        offset: this._getOffset(),\n        flip: {\n          behavior: this.config.fallbackPlacement\n        },\n        arrow: {\n          element: Selector.ARROW\n        },\n        preventOverflow: {\n          boundariesElement: this.config.boundary\n        }\n      },\n      onCreate: (data) => {\n        if (data.originalPlacement !== data.placement) {\n          // popperの表示位置を設定する\n          this._handlePopperPlacementChange(data)\n        }\n      },\n      onUpdate: (data) => this._handlePopperPlacementChange(data)\n    }\n\n    return {\n      ...defaultScConfig,\n      ...this.config.popperConfig\n    }\n  }\n\n  _getOffset() {\n    const offset = {}\n    // offsetがfunctionなら\n    if (typeof this.config.offset === 'function') {\n      // dataはpopperみたい\n      offset.fn = (data) => {\n        // popperのoffsetに、展開して入れる\n        data.offsets = {\n          ...data.offsets,\n          ...this.config.offset(data.offsets, this.element) || {}\n        }\n\n        return data\n      }\n    } else {\n      // configのoffsetを代入\n      offset.offset = this.config.offset\n    }\n\n    return offset\n  }\n\n  _getContainer() {\n    if (this.config.container === false) {\n      // body要素を返す\n      return document.body\n    }\n\n    if (Util.isElement(this.config.container)) {\n      return $(this.config.container)\n    }\n\n    return $(document).find(this.config.container)\n  }\n\n  _getAttachment(placement) {\n    // AttachmentMapから該当するplacementを取得する\n    return AttachmentMap[placement.toUpperCase()]\n  }\n\n  _setListeners() {\n    // this.config.triggerを' '(半角スペース)で分割する\n    // Defaultならhoverとfocusになる\n    const triggers = this.config.trigger.split(' ')\n    // triggerの分だけ繰り返す\n    triggers.forEach((trigger) => {\n      // triggerがclickだったら\n      if (trigger === 'click') {\n        $(this.element).on(\n          // click.sc.tooltip\n          this.constructor.Event.CLICK,\n          // Defaultはfalse\n          this.config.selector,\n          (event) => this.toggle(event) // toggleさせる\n        )\n      } else if (trigger !== Trigger.MANUAL) {\n        // Triggerがmanualじゃなかったら。(hoverかfocus)\n        // triggerがhoverか判定\n        const eventIn = trigger === Trigger.HOVER\n          ? this.constructor.Event.MOUSEENTER // trueはmouseenter.sc.tooltipを入れる\n          : this.constructor.Event.FOCUSIN // falseはfocusin.sc.tooltipを入れる\n\n        // triggerがhoverか判定\n        const eventOut = trigger === Trigger.HOVER\n          ? this.constructor.Event.MOUSELEAVE  // trueはmouseleave.sc.tooltipを入れる\n          : this.constructor.Event.FOCUSOUT // trueはfoucusout.sc.tooltipを入れる\n\n        $(this.element)\n          .on(\n            eventIn, // mouseenter.sc.tooltip\n            this.config.selector, // Defaultはfalse\n            (event) => this._enter(event) // showさせる\n          )\n          .on(\n            eventOut, // mouseleave.sc.tooltip\n            this.config.selector, // Defaultはfalse\n            (event) => this._leave(event) // hideさせる\n          )\n      }\n    })\n\n    // _hideModalHandlerを定義\n    this._hideModalHandler = () => {\n      // this.elementがあったら\n      if (this.element) {\n        // elementをhideする\n        this.hide()\n      }\n    }\n\n    // tooltip付近のmodalに対して、hide.sc.modalを設定\n    $(this.element).closest('.modal').on(\n      'hide.sc.modal',\n      this._hideModalHandler\n    )\n\n    // this.config.selectorがtrueだったら\n    if (this.config.selector) {\n      this.config = {\n        ...this.config, // this.configを展開して格納\n        trigger: 'manual', // triggerをmanualに設定\n        selector: '' // selectorは空文字にする\n      }\n    } else {\n      // falseならfixTitleを実行\n      this._fixTitle()\n    }\n  }\n\n  _fixTitle() {\n    // data-original-titleを取得して、そのTypeを判定\n    const titleType = typeof this.element.getAttribute('data-original-title')\n\n    // this.elementにtitleが存在していて、titleTypeがstringじゃない場合\n    if (this.element.getAttribute('title') || titleType !== 'string') {\n      this.element.setAttribute(\n        'data-original-title',\n        this.element.getAttribute('title') || '' // title属性があるならtitle属性の値で、無いなら空文字\n      )\n\n      // this.elementのtitle属性を空文字にする\n      this.element.setAttribute('title', '')\n    }\n  }\n\n  // eventはmouseoverとかのイベント\n  _enter(event, context) {\n    // dataKeyにsc.tooltipを入れる\n    const dataKey = this.constructor.DATA_KEY\n    // event.currentTargetはtooltipが付与されているelement\n    // 引数のcontextか、jQueryInterfaceでelementに入れたやつを入れる\n    context = context || $(event.currentTarget).data(dataKey)\n\n    // contextが存在しているか確認\n    if (!context) {\n      // contextがない場合は、tooltipのコンストラクタを読んどくみたい\n      context = new this.constructor(\n        // tooltipが付与されたelement\n        event.currentTarget,\n        // defaultにないtooltip.configを追加する\n        this._getDelegateConfig()\n      )\n      // tooltipが付与された要素に対して、sc.tooltipのデータキーで\n      // context(tooltipのインスタンス)を入れる\n      $(event.currentTarget).data(dataKey, context)\n    }\n\n    // eventが存在してたら\n    if (event) {\n      // event.typeがfocusinだったら、focusをtrueにする\n      // focusinじゃなかったらhoverをtrueにする\n      context._activeTrigger[\n        event.type === 'focusin' ? Trigger.FOCUS : Trigger.HOVER\n      ] = true\n    }\n\n    // div.tooltipがshowクラスを持っているもしくは、contextの_hoverStateがshowだった場合\n    if ($(context.getTipElement()).hasClass(ClassName.SHOW) || context._hoverState === HoverState.SHOW) {\n      // context._hoverStateにshowを入れる\n      context._hoverState = HoverState.SHOW\n      return\n    }\n\n    // setTimeout()を使用して設定された遅延処理を取り消す\n    clearTimeout(context._timeout)\n    // context._hoverStateにshowを入れる\n    context._hoverState = HoverState.SHOW\n\n    // context.config.delayが存在していなくて、delay.showが0の場合\n    if (!context.config.delay || !context.config.delay.show) {\n      // showを発動\n      context.show()\n      // 処理終了\n      return\n    }\n\n    // context._timeoutにdelay.showの分だけ遅らせたshowを発動する\n    context._timeout = setTimeout(() => {\n      // hoverStateがshowの場合\n      if (context._hoverState === HoverState.SHOW) {\n        context.show()\n      }\n    }, context.config.delay.show)\n  }\n\n  _leave(event, context) {\n    // datakeyを取得\n    const dataKey = this.constructor.DATA_KEY\n    // 引数にもよるけど、contextはtootip。それかイベントのcurrentTarget(datakey)の値\n    context = context || $(event.currentTarget).data(dataKey)\n\n    // contextが存在してなかったら\n    if (!context) {\n      context = new this.constructor(\n        // tooltipが付与されたelement\n        event.currentTarget,\n        // ユーザ側でconfigが設定されてたら上書きする\n        this._getDelegateConfig()\n      )\n      // eventのcurrentTargetにcontextを設定する\n      $(event.currentTarget).data(dataKey, context)\n    }\n\n    // eventが存在していたら\n    if (event) {\n      // event.typeがfocusoutだったらfucusに対してfalseを設定\n      // 違っかたらhoverに対してfalseを設定\n      context._activeTrigger[\n        event.type === 'focusout' ? Trigger.FOCUS : Trigger.HOVER\n      ] = false\n    }\n\n    // _activeTriggerがtrueなら処理終了\n    if (context._isWithActiveTrigger()) {\n      return\n    }\n\n    // タイムアウトを削除\n    clearTimeout(context._timeout)\n\n    // hoverStateにoutを設定\n    context._hoverState = HoverState.OUT\n\n    // delayが0か、delay.hideが存在してなかったら\n    if (!context.config.delay || !context.config.delay.hide) {\n      // tolltipのhideを実行して処理終了\n      context.hide()\n      return\n    }\n\n    // delay.hideの分だけhideを遅らせて発動\n    context._timeout = setTimeout(() => {\n      if (context._hoverState === HoverState.OUT) {\n        context.hide()\n      }\n    }, context.config.delay.hide)\n  }\n\n  _isWithActiveTrigger() {\n    // this._activeTrigger分回す\n    for (const trigger in this._activeTrigger) {\n      // trueだったら\n      if (this._activeTrigger[trigger]) {\n        // trueを返す\n        return true\n      }\n    }\n    // .activeTriggerがfalseしかなかったり、forで回すための\n    // 値がなかったらfalseを返す\n    return false\n  }\n\n  // configはobject(config)かfalse\n  _getConfig(config) {\n    // sc.tooltipとか\n    // placementとかtoggleの指定があればそれも\n    const dataAttributes = $(this.element).data()\n\n    // dataAttributesのキーを取得してその分ループしまくる\n    Object.keys(dataAttributes)\n      .forEach((dataAttr) => {\n        // 禁止されているdataAttrがないか存在しているか確認。\n        // ['sanitize', 'whiteList', 'sanitizeFn']\n        if (DISALLOWED_ATTRIBUTES.indexOf(dataAttr) !== -1) {\n          // 存在している場合はそのdataAttrを削除する\n          delete dataAttributes[dataAttr]\n        }\n      })\n\n    config = {\n      // Defaultを展開して入れる\n      ...this.constructor.Default,\n      // dataAttributesを展開して入れる\n      ...dataAttributes,\n      // configがobjectでかつ存在していたらconfigを代入\n      ...typeof config === 'object' && config ? config : {}\n    }\n\n    // config.delayがnumberだった場合\n    if (typeof config.delay === 'number') {\n      config.delay = {\n        // config.delayのshowとhideに\n        // config.delayの値を代入\n        show: config.delay,\n        hide: config.delay\n      }\n    }\n\n    // config.titleがnumberだった場合\n    // Stringに変換する\n    if (typeof config.title === 'number') {\n      config.title = config.title.toString()\n    }\n\n    // config.cotentがnumberだった場合\n    // Stringに変換する\n    if (typeof config.content === 'number') {\n      config.content = config.content.toString()\n    }\n\n    // configの各値のtypeがDefaultTypeの通りになっているか確認\n    // 例えば、configのanimationの型はbooleanかどうかとか\n    Util.typeCheckConfig(\n      NAME,\n      config,\n      this.constructor.DefaultType\n    )\n\n    // config.sanitizeがtrueなら\n    // Defaultはtrue\n    if (config.sanitize) {\n      // config.sanitizeFnはDefaultはfalse\n      // config.whiteListはsanitaizer.jsのwhitelist\n      config.template = sanitizeHtml(config.template, config.whiteList, config.sanitizeFn)\n    }\n\n    // configを返す\n    return config\n  }\n\n  _getDelegateConfig() {\n    const config = {}\n\n    if (this.config) {\n      // tooltipのconfigのkey分だけfor\n      for (const key in this.config) {\n        // Defaultのkeyの値と、this.configのkeyの値が不一致だったら\n        if (this.constructor.Default[key] !== this.config[key]) {\n          // configのkeyに、this.configのkeyの値を入れる\n          config[key] = this.config[key]\n        }\n      }\n    }\n\n    return config\n  }\n\n  _cleanTipClass() {\n    // tipの要素を取得\n    const $tip = $(this.getTipElement())\n    // tipのclassにマッチしているものがあるか確認\n    const tabClass = $tip.attr('class').match(SCCLS_PREFIX_REGEX)\n    // tabClassに値があったら\n    if (tabClass !== null && tabClass.length) {\n      // TabClassに該当するクラスを全て削除する\n      $tip.removeClass(tabClass.join(''))\n    }\n  }\n\n  // popperの表示位置を変更するとかの処理だと思う\n  _handlePopperPlacementChange(popperData) {\n    // popperのインスタンスを格納\n    const popperInstance = popperData.instance\n    this.tip = popperInstance.popper\n    // tipからクラスを削除する\n    this._cleanTipClass()\n    // popperData.placementから取得した表示位置クラスを設定する\n    this.addAttachmentClass(this._getAttachment(popperData.placement))\n  }\n\n  _fixTransition() {\n    // tipのelementを取得\n    const tip = this.getTipElement()\n    // configのanimetionを取得\n    const initConfigAnimation = this.config.animation\n\n    // tipにx-placementがなかったら処理終了\n    if (tip.getAttribute('x-placement') !== null) {\n      return\n    }\n\n    // tipのfadeクラスを削除する\n    $(tip).removeClass(ClassName.FADE)\n    // configのanimetionをfalseにする\n    this.config.animation = false\n    // tolltipのhideを実行\n    this.hide()\n    // tolltipのshowを実行\n    this.show()\n    // config.animationにanimationを再設定\n    this.config.animation = initConfigAnimation\n  }\n\n  // Static\n\n  // 引数はtooltip({container: $('#customContainer')[0]})とかのオブジェクト\n  // あと、tooltip('show')のshowとか\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      // $('#target').tooltipみたいな形な記述があればtooltipが入る\n      // その時、configに指定された値が入る。placement : 'top'とか\n      let data = $(this).data(DATA_KEY)\n\n      // configがobjectならobjectを_configに入れる\n      // それ以外(undefinedとかshowとか)ならfalseを入れる\n      const _config = typeof config === 'object' && config\n\n      // dataがundefinedで、configがdisposeまたは、hideにマッチする場合\n      // 処理を終了する\n      if (!data && /dispose|hide/.test(config)) {\n        return\n      }\n\n      // dataがundefinedの場合\n      if (!data) {\n        // dataにインスタンス化したTooltipを入れる\n        // thisはdata-toggle=\"tooltip\"が指定されてるelements\n        // _configはfalseかobject\n        data = new Tooltip(this, _config)\n        // elementsに対して、sc.tooltipって名前でdata(tooltipのインスタンス)\n        // を設定する\n        $(this).data(DATA_KEY, data)\n      }\n\n      // configがstringの場合(showとか)\n      if (typeof config === 'string') {\n        // tooltipsにconfigと同じ名前のメソッドがあるか判定\n        // 存在しない場合は、ないよっていう\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n        // throwされなかった場合は、configと同じ名前のメソッドを実行する\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Tooltip._jQueryInterface\n$.fn[NAME].Constructor = Tooltip\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Tooltip._jQueryInterface\n}\n\nexport default Tooltip\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): popover.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Tooltip from './tooltip'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'popover'\nconst VERSION = '4.4.1'\nconst DATA_KEY = 'sc.popover'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\nconst CLASS_PREFIX = 'sc-popover'\nconst SCCLS_PREFIX_REGEX = new RegExp(`(^|\\\\s)${CLASS_PREFIX}\\\\S+`, 'g')\n\nconst Default = {\n  ...Tooltip.Default,\n  placement : 'right',\n  trigger : 'click',\n  content : '',\n  template : '<div class=\"popover\" role=\"tooltip\">' +\n              '<div class=\"arrow\"></div>' +\n              '<h3 class=\"popover-header\"></h3>' +\n              '<div class=\"popover-body\"></div></div>'\n}\n\nconst DefaultType = {\n  ...Tooltip.DefaultType,\n  content : '(string|element|function)'\n}\n\nconst ClassName = {\n  FADE : 'fade',\n  SHOW : 'show'\n}\n\nconst Selector = {\n  TITLE : '.popover-header',\n  CONTENT : '.popover-body'\n}\n\nconst Event = {\n  HIDE : `hide${EVENT_KEY}`,\n  HIDDEN : `hidden${EVENT_KEY}`,\n  SHOW : `show${EVENT_KEY}`,\n  SHOWN : `shown${EVENT_KEY}`,\n  INSERTED  : `inserted${EVENT_KEY}`,\n  CLICK : `click${EVENT_KEY}`,\n  FOCUSIN : `focusin${EVENT_KEY}`,\n  FOCUSOUT : `focusout${EVENT_KEY}`,\n  MOUSEENTER : `mouseenter${EVENT_KEY}`,\n  MOUSELEAVE : `mouseleave${EVENT_KEY}`\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\n// Tooltipを継承するみたい\nclass Popover extends Tooltip {\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  static get DATA_KEY() {\n    return DATA_KEY\n  }\n\n  static get Event() {\n    return Event\n  }\n\n  static get EVENT_KEY() {\n    return EVENT_KEY\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  // Overrides\n  // tooltipのメソッドを書き換える\n\n  // 存在した場合はtooltipのshowを継続する\n  isWithContent() {\n    // 存在する方のみ返す\n    return this.getTitle() || this._getContent()\n  }\n\n\n  addAttachmentClass(attachment) {\n    // popoverのCLASS_PREFIXが使われるようにする\n    $(this.getTipElement()).addClass(`${CLASS_PREFIX}-${attachment}`)\n  }\n\n  getTipElement() {\n    // ここで、オーバライドしているのはpopoverの$(this.config.template)[0]を使うため\n    this.tip = this.tip || $(this.config.template)[0]\n    return this.tip\n  }\n\n  setContent() {\n    // tipのelementを取得する\n    const $tip = $(this.getTipElement())\n\n    // jsイベントを維持するために、htmlにappendを使用する\n    // .popover-headerと['data-original-title']属性のタイトルが引数\n    // .popover-headerにthis.getTitle()で取得したテキストを設定する\n    this.setElementContent($tip.find(Selector.TITLE), this.getTitle())\n    // ['data-content']属性の値を取得\n    let content = this._getContent()\n    // コンテンツがfunctionの場合\n    if (typeof content === 'function') {\n      // this.elementに対してcontent関数を実行し、その結果をコンテンツに格納する\n      content = content.call(this.element)\n    }\n    // .popover-bodyに対して、contentのテキストを設定する\n    this.setElementContent($tip.find(Selector.CONTENT), content)\n\n    // tipのfadeクラスとshowクラスを削除する\n    $tip.removeClass(`${ClassName.FADE} ${ClassName.SHOW}`)\n  }\n\n  // Private\n\n  _getContent() {\n    // ['data-content']属性が存在していた場合は、その値を返す\n    // 存在しなかった場合はconfig.contentを返す\n    return this.element.getAttribute('data-content') ||\n      this.config.content\n  }\n\n  _cleanTipClass() {\n    // tipの要素を取得\n    const $tip = $(this.getTipElement())\n    // tipに.sc-popoverに関連クラスがあるか確認する\n    const tabClass = $tip.attr('class').match(SCCLS_PREFIX_REGEX)\n    // tabClassが存在していて、tabClassの長さが0以上の場合\n    if (tabClass !== null && tabClass.length > 0) {\n      // TabClassに該当するクラスを全て削除する\n      $tip.removeClass(tabClass.join(''))\n    }\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      // thisはdata-toggle=\"popover\"を持った要素\n      // その要素から、DATA_KEYの値を取得する\n      let data = $(this).data(DATA_KEY)\n      // configがibjectなら、_configに代入する\n      // オブジェクトじゃないならnullを代入する\n      const _config = typeof config === 'object' ? config : null\n\n      // dataが存在していなくて、disposeとhideがconfigに含まれている場合\n      if (!data && /dispose|hide/.test(config)) {\n        return\n      }\n\n      // dataが存在しない場合\n      if (!data) {\n        // dataをインスタンス化する\n        // thisはdata-toggle=\"popover\"を持った要素\n        // _configはobjectかnull\n        data = new Popover(this, _config)\n        // popover要素にDATA_KEY名でPopoverのインスタンスを設定する\n        $(this).data(DATA_KEY, data)\n      }\n\n      // dataがあった場合\n      // configがstringの場合\n      if (typeof config === 'string') {\n        // Popoverにconfigと同じ名前のメソッドがあるか判定する\n        if (typeof data[config] === 'undefined') {\n          // 存在しない場合は、エラー\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n        // 存在した場合は実行する\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Popover._jQueryInterface\n$.fn[NAME].Constructor = Popover\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Popover._jQueryInterface\n}\n\nexport default Popover\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): toast.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME               = 'toast'\nconst VERSION            = '4.4.1'\nconst DATA_KEY           = 'sc.toast'\nconst EVENT_KEY          = `.${DATA_KEY}`\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\n\nconst Event = {\n  CLICK_DISMISS : `click.dismiss${EVENT_KEY}`,\n  HIDE          : `hide${EVENT_KEY}`,\n  HIDDEN        : `hidden${EVENT_KEY}`,\n  SHOW          : `show${EVENT_KEY}`,\n  SHOWN         : `shown${EVENT_KEY}`\n}\n\nconst ClassName = {\n  FADE    : 'fade',\n  HIDE    : 'hide',\n  SHOW    : 'show',\n  SHOWING : 'showing'\n}\n\nconst DefaultType = {\n  animation : 'boolean',\n  autohide  : 'boolean',\n  delay     : 'number'\n}\n\nconst Default = {\n  animation : true,\n  autohide  : true,\n  delay     : 500\n}\n\nconst Selector = {\n  DATA_DISMISS : '[data-dismiss=\"toast\"]'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Toast {\n  constructor(element, config) {\n    this._element = element\n    this._config  = this._getConfig(config)\n    this._timeout = null\n    this._setListeners()\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  // Public\n\n  show() {\n    const showEvent = $.Event(Event.SHOW)\n\n    $(this._element).trigger(showEvent)\n    if (showEvent.isDefaultPrevented()) {\n      return\n    }\n\n    if (this._config.animation) {\n      this._element.classList.add(ClassName.FADE)\n    }\n\n    const complete = () => {\n      this._element.classList.remove(ClassName.SHOWING)\n      this._element.classList.add(ClassName.SHOW)\n\n      $(this._element).trigger(Event.SHOWN)\n\n      if (this._config.autohide) {\n        this._timeout = setTimeout(() => {\n          this.hide()\n        }, this._config.delay)\n      }\n    }\n\n    this._element.classList.remove(ClassName.HIDE)\n    Util.reflow(this._element)\n    this._element.classList.add(ClassName.SHOWING)\n    if (this._config.animation) {\n      const transitionDuration = Util.getTransitionDurationFromElement(this._element)\n\n      $(this._element)\n        .one(Util.TRANSITION_END, complete)\n        .emulateTransitionEnd(transitionDuration)\n    } else {\n      complete()\n    }\n  }\n\n  hide() {\n    if (!this._element.classList.contains(ClassName.SHOW)) {\n      return\n    }\n\n    const hideEvent = $.Event(Event.HIDE)\n\n    $(this._element).trigger(hideEvent)\n    if (hideEvent.isDefaultPrevented()) {\n      return\n    }\n\n    this._close()\n  }\n\n  dispose() {\n    clearTimeout(this._timeout)\n    this._timeout = null\n\n    if (this._element.classList.contains(ClassName.SHOW)) {\n      this._element.classList.remove(ClassName.SHOW)\n    }\n\n    $(this._element).off(Event.CLICK_DISMISS)\n\n    $.removeData(this._element, DATA_KEY)\n    this._element = null\n    this._config  = null\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...$(this._element).data(),\n      ...typeof config === 'object' && config ? config : {}\n    }\n\n    Util.typeCheckConfig(\n      NAME,\n      config,\n      this.constructor.DefaultType\n    )\n\n    return config\n  }\n\n  _setListeners() {\n    $(this._element).on(\n      Event.CLICK_DISMISS,\n      Selector.DATA_DISMISS,\n      () => this.hide()\n    )\n  }\n\n  _close() {\n    const complete = () => {\n      this._element.classList.add(ClassName.HIDE)\n      $(this._element).trigger(Event.HIDDEN)\n    }\n\n    this._element.classList.remove(ClassName.SHOW)\n    if (this._config.animation) {\n      const transitionDuration = Util.getTransitionDurationFromElement(this._element)\n\n      $(this._element)\n        .one(Util.TRANSITION_END, complete)\n        .emulateTransitionEnd(transitionDuration)\n    } else {\n      complete()\n    }\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      const $element = $(this)\n      let data       = $element.data(DATA_KEY)\n      const _config  = typeof config === 'object' && config\n\n      if (!data) {\n        data = new Toast(this, _config)\n        $element.data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n\n        data[config](this)\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME]             = Toast._jQueryInterface\n$.fn[NAME].Constructor = Toast\n$.fn[NAME].noConflict  = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Toast._jQueryInterface\n}\n\nexport default Toast\n"]}