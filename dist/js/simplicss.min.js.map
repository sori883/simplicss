{"version":3,"sources":["../../js/src/util.js","../../js/src/alert.js","../../js/src/button.js","../../js/src/dropdown.js"],"names":["TRANSITION_END","transitionEndEmulator","duration","_this","this","called","$","one","Util","setTimeout","triggerTransitionEnd","getUID","prefix","Math","random","document","getElementById","getSelectorFromElement","element","selector","getAttribute","hrefAttr","trim","querySelector","err","getTransitionDurationFromElement","transitionDuration","css","transitionDelay","floatTransitionDuration","parseFloat","floatTransitionDelay","split","reflow","offsetHeight","trigger","supportsTransitionEnd","Boolean","isElement","obj","nodeType","typeCheckConfig","componentName","config","configTypes","property","Object","prototype","hasOwnProperty","call","expectedTypes","value","valueType","toString","match","toLowerCase","RegExp","test","Error","toUpperCase","findShadowRoot","documentElement","attachShadow","getRootNode","ShadowRoot","parentNode","root","jQueryDetection","TypeError","version","fn","jquery","emulateTransitionEnd","event","special","bindType","delegateType","handle","target","is","handleObj","handler","apply","arguments","NAME","DATA_KEY","EVENT_KEY","JQUERY_NO_CONFLICT","Event","CLOSE","CLOSED","CLICK_DATA_API","ClassName","Alert","_element","close","rootElement","_getRootElement","_triggerCloseEvent","isDefaultPrevented","_removeElement","dispose","removeData","parent","closest","closeEvent","removeClass","hasClass","_destroyElement","detach","remove","_jQueryInterface","each","$element","data","_handleDismiss","alertInstance","preventDefault","on","Constructor","noConflict","DATA_API_KEY","Selector","FOCUS_BLUR_DATA_API","LOAD_DATA_API","Button","toggle","triggerChangeEvent","addAriaPressed","input","type","checked","classList","contains","activeElement","tagName","focus","hasAttribute","setAttribute","toggleClass","button","inputBtn","window","buttons","slice","querySelectorAll","i","len","length","add","REGEXP_KEYDOWN","ARROW_UP_KEYCODE","HIDE","HIDDEN","SHOW","SHOWN","CLICK","KEYDOWN_DATA_API","KEYUP_DATA_API","AttachmentMap","Default","offset","flip","boundary","reference","display","popperConfig","DefaultType","Dropdown","_popper","_config","_getConfig","_menu","_getMenuElement","_inNavbar","_detectNavbar","_addEventListeners","disabled","isActive","_clearMenus","show","usePopper","relatedTarget","showEvent","_getParentFromElement","Popper","referenceElement","addClass","console","log","body","children","noop","hide","hideEvent","destroy","off","update","scheduleUpdate","stopPropagation","_objectSpread2","constructor","_getPlacement","$parentDropdown","placement","_getOffset","_this2","offsets","_getPopperConfig","modifiers","enabled","preventOverflow","boundariesElement","applyStyle","which","toggles","context","clickEvent","dropdownMenu","_dataApiKeydownHandler","items","filter","item","index","indexOf","e"],"mappings":"kuCAgBA,IAAMA,EAAiB,gBAyBvB,SAASC,EAAsBC,GAAU,IAAAC,EAAAC,KACnCC,GAAS,EAeb,OAZAC,EAAEF,MAAMG,IAAIC,EAAKR,eAAgB,WAE/BK,GAAS,IAGXI,WAAW,WAEJJ,GACHG,EAAKE,qBAAqBP,IAE3BD,GAEIE,KAeT,IAAMI,EAAO,CAEXR,eAAgB,kBAEhBW,OAJW,SAIJC,GACL,KAEEA,MA9DU,IA8DGC,KAAKC,UACXC,SAASC,eAAeJ,KACjC,OAAOA,GAGTK,uBAZW,SAYYC,GAErB,IAAIC,EAAWD,EAAQE,aAAa,eAGpC,IAAKD,GAAyB,MAAbA,EAAkB,CAEjC,IAAME,EAAWH,EAAQE,aAAa,QAGtCD,EAAWE,GAAyB,MAAbA,EAAmBA,EAASC,OAAS,GAG9D,IAIE,OAAOP,SAASQ,cAAcJ,GAAYA,EAAW,KACrD,MAAOK,GAEP,OAAO,OAKXC,iCArCW,SAqCsBP,GAE/B,IAAKA,EACH,OAAO,EAIT,IAAIQ,EAAqBpB,EAAEY,GAASS,IAAI,uBACpCC,EAAkBtB,EAAEY,GAASS,IAAI,oBAG/BE,EAA0BC,WAAWJ,GACrCK,EAAuBD,WAAWF,GAGxC,OAAKC,GAA4BE,GAKjCL,EAAqBA,EAAmBM,MAAM,KAAK,GACnDJ,EAAkBA,EAAgBI,MAAM,KAAK,GAhHjB,KAmHpBF,WAAWJ,GAAsBI,WAAWF,KAR3C,GAWXK,OAhEW,SAgEJf,GACL,OAAOA,EAAQgB,cAIjBxB,qBArEW,SAqEUQ,GACnBZ,EAAEY,GAASiB,QAAQnC,IAIrBoC,sBA1EW,WA2ET,OAAOC,QAAQrC,IAKjBsC,UAhFW,SAgFDC,GACR,OAAQA,EAAI,IAAMA,GAAKC,UAIzBC,gBArFW,SAqFKC,EAAeC,EAAQC,GAGrC,IAAK,IAAMC,KAAYD,EAGrB,GAAIE,OAAOC,UAAUC,eAAeC,KAAKL,EAAaC,GAAW,CAE/D,IAAMK,EAAgBN,EAAYC,GAE5BM,EAAQR,EAAOE,GAGfO,EAAYD,GAAS3C,EAAK8B,UAAUa,GACtC,WArJIZ,EAqJeY,EApJtB,GAAGE,SAASJ,KAAKV,GAAKe,MAAM,eAAe,GAAGC,eAuJ/C,IAAK,IAAIC,OAAON,GAAeO,KAAKL,GAElC,MAAM,IAAIM,MACLhB,EAAciB,cAAjB,aACWd,EADX,oBACuCO,EADvC,wBAEsBF,EAFtB,MA3JZ,IAAgBX,GAmKdqB,eAjHW,SAiHI1C,GACb,IAAKH,SAAS8C,gBAAgBC,aAC5B,OAAO,KAIT,GAAmC,mBAAxB5C,EAAQ6C,YAKnB,OAAI7C,aAAmB8C,WACd9C,EAIJA,EAAQ+C,WAINzD,EAAKoD,eAAe1C,EAAQ+C,YAH1B,KAVP,IAAMC,EAAOhD,EAAQ6C,cACrB,OAAOG,aAAgBF,WAAaE,EAAO,MAe/CC,gBAxIW,WAyIT,GAAiB,oBAAN7D,EACT,MAAM,IAAI8D,UAAU,kGAGtB,IAAMC,EAAU/D,EAAEgE,GAAGC,OAAOvC,MAAM,KAAK,GAAGA,MAAM,KAOhD,GAAIqC,EAAQ,GALI,GAKYA,EAAQ,GAJnB,GAFA,IAMoCA,EAAQ,IAJ5C,IAI+DA,EAAQ,IAAmBA,EAAQ,GAHlG,GACA,GAEmHA,EAAQ,GAC1I,MAAM,IAAIX,MAAM,iFAKtBlD,EAAK2D,kBApKH7D,EAAEgE,GAAGE,qBAAuBvE,EAC5BK,EAAEmE,MAAMC,QAAQlE,EAAKR,gBAnCd,CACL2E,SAAU3E,EACV4E,aAAc5E,EACd6E,OAHK,SAGEJ,GACL,GAAInE,EAAEmE,EAAMK,QAAQC,GAAG3E,MACrB,OAAOqE,EAAMO,UAAUC,QAAQC,MAAM9E,KAAM+E,aCvBnD,IAAMC,EAAO,QAGPC,EAAW,WAGXC,EAAS,IAAOD,EAKhBE,EAAqBjF,EAAEgE,GAAGc,GAS1BI,EAAQ,CACZC,MAAK,QAAWH,EAChBI,OAAM,SAAYJ,EAClBK,eAAc,QAAWL,EAdN,aAkBfM,EACI,QADJA,EAEI,OAFJA,EAGI,OAGJC,aACJ,SAAAA,EAAY3E,GACVd,KAAK0F,SAAW5E,6BAUlB6E,MAAA,SAAM7E,GAIJ,IAAI8E,EAAc5F,KAAK0F,SAGnB5E,IAEF8E,EAAc5F,KAAK6F,gBAAgB/E,IAIjBd,KAAK8F,mBAAmBF,GAI5BG,sBAMhB/F,KAAKgG,eAAeJ,MAItBK,QAAA,WACE/F,EAAEgG,WAAWlG,KAAK0F,SAAUT,GAC5BjF,KAAK0F,SAAW,QAMlBG,gBAAA,SAAgB/E,GAEd,IAAMC,EAAWX,EAAKS,uBAAuBC,GACzCqF,GAAa,EAejB,OAZIpF,IAGFoF,EAASxF,SAASQ,cAAcJ,IAMhCoF,EAFGA,GAEMjG,EAAEY,GAASsF,QAAX,IAAuBZ,GAAmB,MAOvDM,mBAAA,SAAmBhF,GAEjB,IAAMuF,EAAanG,EAAEkF,MAAMA,EAAMC,OAIjC,OAFAnF,EAAEY,GAASiB,QAAQsE,GAEZA,KAITL,eAAA,SAAelF,GAAS,IAAAf,EAAAC,KAKtB,GAHAE,EAAEY,GAASwF,YAAYd,GAGlBtF,EAAEY,GAASyF,SAASf,GAAzB,CAOA,IAAMlE,EAAqBlB,EAAKiB,iCAAiCP,GAEjEZ,EAAEY,GAGCX,IAAIC,EAAKR,eAAgB,SAACyE,GAAD,OAAWtE,EAAKyG,gBAAgB1F,EAASuD,KAElED,qBAAqB9C,QAZtBtB,KAAKwG,gBAAgB1F,MAgBzB0F,gBAAA,SAAgB1F,GACdZ,EAAEY,GACC2F,SACA1E,QAAQqD,EAAME,QACdoB,YAMEC,iBAAP,SAAwBpE,GACtB,OAAOvC,KAAK4G,KAAK,WAEf,IAAMC,EAAW3G,EAAEF,MAEf8G,EAAOD,EAASC,KAAK7B,GAGpB6B,IAGHA,EAAO,IAAIrB,EAAMzF,MAGjB6G,EAASC,KAAK7B,EAAU6B,IAIX,UAAXvE,GAEFuE,EAAKvE,GAAQvC,WAKZ+G,eAAP,SAAsBC,GACpB,OAAO,SAAU3C,GAEXA,GAEFA,EAAM4C,iBAKRD,EAAcrB,MAAM3F,gDA5ItB,MAvCY,iBA+LhBE,EAAES,UAAUuG,GACV9B,EAAMG,eAlLI,yBAoLVE,EAAMsB,eAAe,IAAItB,IAU3BvF,EAAEgE,GAAGc,GAAQS,EAAMkB,iBAEnBzG,EAAEgE,GAAGc,GAAMmC,YAAc1B,EAIzBvF,EAAEgE,GAAGc,GAAMoC,WAAc,WAEvB,OADAlH,EAAEgE,GAAGc,GAAQG,EACNM,EAAMkB,kBC7Mf,IAAM3B,EAAQ,SAERC,EAAW,YACXC,EAAS,IAAOD,EAChBoC,EAAe,YACflC,EAAqBjF,EAAEgE,GAAGc,GAE1BQ,EACK,SADLA,EAEK,MAFLA,EAGK,QAGL8B,EACiB,0BADjBA,EAEW,0BAFXA,EAGU,yBAHVA,EAImB,+BAJnBA,EAKI,6BALJA,EAMK,UANLA,EAOK,OAGLlC,EAAQ,CACZG,eAAc,QAAWL,EAAYmC,EACrCE,oBAAsB,QAAQrC,EAAYmC,EAApB,QACyBnC,EAAYmC,EAC3DG,cAAa,OAAUtC,EAAYmC,GAS/BI,aACJ,SAAAA,EAAY3G,GACVd,KAAK0F,SAAW5E,6BAUlB4G,OAAA,WACE,IAAIC,GAAqB,EACrBC,GAAiB,EAEfhC,EAAc1F,EAAEF,KAAK0F,UAAUU,QACnCkB,GACA,GAGF,GAAI1B,EAAa,CAEf,IAAMiC,EAAQ7H,KAAK0F,SAASvE,cAAcmG,GAG1C,GAAIO,EAAO,CAET,GAAmB,UAAfA,EAAMC,KAGR,GAAID,EAAME,SACR/H,KAAK0F,SAASsC,UAAUC,SAASzC,GAEjCmC,GAAqB,MAChB,CAEL,IAAMO,EAAgBtC,EAAYzE,cAAcmG,GAG5CY,GAEFhI,EAAEgI,GAAe5B,YAAYd,OAIT,aAAfqC,EAAMC,KAEe,UAA1B9H,KAAK0F,SAASyC,SAAuBN,EAAME,UAAY/H,KAAK0F,SAASsC,UAAUC,SAASzC,KAC1FmC,GAAqB,GAIvBA,GAAqB,EAInBA,IAEFE,EAAME,SAAW/H,KAAK0F,SAASsC,UAAUC,SAASzC,GAElDtF,EAAE2H,GAAO9F,QAAQ,WAInB8F,EAAMO,QACNR,GAAiB,GAKf5H,KAAK0F,SAAS2C,aAAa,aAAerI,KAAK0F,SAASsC,UAAUC,SAAS,cAE3EL,GAEF5H,KAAK0F,SAAS4C,aAAa,gBACxBtI,KAAK0F,SAASsC,UAAUC,SAASzC,IAIlCmC,GACFzH,EAAEF,KAAK0F,UAAU6C,YAAY/C,OAMnCS,QAAA,WACE/F,EAAEgG,WAAWlG,KAAK0F,SAAUT,GAC5BjF,KAAK0F,SAAW,QAKXiB,iBAAP,SAAwBpE,GACtB,OAAOvC,KAAK4G,KAAK,WAEf,IAAIE,EAAO5G,EAAEF,MAAM8G,KAAK7B,GAInB6B,IAGHA,EAAO,IAAIW,EAAOzH,MAGlBE,EAAEF,MAAM8G,KAAK7B,EAAU6B,IAIV,WAAXvE,GAEFuE,EAAKvE,gDAzGT,MA3CY,iBAgKhBrC,EAAES,UACCuG,GAAG9B,EAAMG,eAAgB+B,EAA6B,SAACjD,GAEtD,IAAImE,EAASnE,EAAMK,OAQnB,GANKxE,EAAEsI,GAAQjC,SAASf,KAEtBgD,EAAStI,EAAEsI,GAAQpC,QAAQkB,GAAiB,KAIzCkB,GAAUA,EAAOH,aAAa,aAAeG,EAAOR,UAAUC,SAAS,YAE1E5D,EAAM4C,qBACD,CAEL,IAAMwB,EAAWD,EAAOrH,cAAcmG,GAEtC,GAAImB,IAAaA,EAASJ,aAAa,aAAeI,EAAST,UAAUC,SAAS,aAGhF,YADA5D,EAAM4C,iBAKRQ,EAAOd,iBAAiB9D,KAAK3C,EAAEsI,GAAS,aAG3CtB,GAAG9B,EAAMmC,oBAAqBD,EAA6B,SAACjD,GAE3D,IAAMmE,EAAStI,EAAEmE,EAAMK,QAAQ0B,QAAQkB,GAAiB,GAIxDpH,EAAEsI,GAAQD,YAAY/C,EAAiB,eAAenC,KAAKgB,EAAMyD,SAIrE5H,EAAEwI,QAAQxB,GAAG9B,EAAMoC,cAAe,WAQhC,IAFA,IAAImB,EAAU,GAAGC,MAAM/F,KAAKlC,SAASkI,iBAAiBvB,IAE7CwB,EAAI,EAAGC,EAAMJ,EAAQK,OAAQF,EAAIC,EAAKD,IAAK,CAElD,IAAMN,EAASG,EAAQG,GAEjBjB,EAAQW,EAAOrH,cAAcmG,GAE/BO,EAAME,SAAWF,EAAMQ,aAAa,WAEtCG,EAAOR,UAAUiB,IAAIzD,GAGrBgD,EAAOR,UAAUtB,OAAOlB,GAM5B,IAAK,IAAIsD,EAAI,EAAGC,GADhBJ,EAAU,GAAGC,MAAM/F,KAAKlC,SAASkI,iBAAiBvB,KACpB0B,OAAQF,EAAIC,EAAKD,IAAK,CAClD,IAAMN,EAASG,EAAQG,GAEqB,SAAxCN,EAAOxH,aAAa,gBACtBwH,EAAOR,UAAUiB,IAAIzD,GAErBgD,EAAOR,UAAUtB,OAAOlB,MAW9BtF,EAAEgE,GAAGc,GAAQyC,EAAOd,iBACpBzG,EAAEgE,GAAGc,GAAMmC,YAAcM,EACzBvH,EAAEgE,GAAGc,GAAMoC,WAAa,WAEtB,OADAlH,EAAEgE,GAAGc,GAAQG,EACNsC,EAAOd,kBCtPhB,IAAM3B,EAAO,WAEPC,EAAW,cACXC,EAAS,IAAOD,EAChBoC,EAAe,YACflC,EAAqBjF,EAAEgE,GAAGc,GAQ1BkE,EAAiB,IAAI9F,OAAU+F,YAE/B/D,EAAQ,CACZgE,KAAI,OAAUlE,EACdmE,OAAM,SAAYnE,EAClBoE,KAAI,OAAUpE,EACdqE,MAAK,QAAUrE,EACfsE,MAAK,QAAWtE,EAChBK,eAAc,QAAWL,EAAYmC,EACrCoC,iBAAgB,UAAavE,EAAYmC,EACzCqC,eAAc,QAAWxE,EAAYmC,GAGjC7B,EACO,WADPA,EAEG,OAFHA,EAGK,SAHLA,EAIQ,YAJRA,EAKO,WALPA,EAMQ,sBANRA,EAQc,kBAGd8B,EACU,2BADVA,EAES,iBAFTA,EAGG,iBAHHA,EAIS,cAJTA,GAKY,8DAGZqC,GACE,YADFA,GAEK,UAFLA,GAGK,eAHLA,GAIQ,aAJRA,GAKI,cALJA,GAOG,aAIHC,GAAU,CACdC,OAAS,EACTC,MAAO,EACPC,SAAW,eACXC,UAAY,SACZC,QAAU,UACVC,aAAe,MAGXC,GAAc,CAClBN,OAAS,2BACTC,KAAO,UACPC,SAAW,mBACXC,UAAY,mBACZC,QAAU,SACVC,aAAe,iBASXE,cAEJ,SAAAA,EAAYtJ,EAASyB,GACnBvC,KAAK0F,SAAW5E,EAChBd,KAAKqK,QAAU,KAEfrK,KAAKsK,QAAUtK,KAAKuK,WAAWhI,GAE/BvC,KAAKwK,MAAQxK,KAAKyK,kBAElBzK,KAAK0K,UAAY1K,KAAK2K,gBAEtB3K,KAAK4K,gDAiBLlD,OAAA,WAEE,IAAI1H,KAAK0F,SAASmF,WAAY3K,EAAEF,KAAK0F,UAAUa,SAASf,GAAxD,CAKA,IAAMsF,EAAW5K,EAAEF,KAAKwK,OAAOjE,SAASf,GAGxC4E,EAASW,cAGLD,GAKJ9K,KAAKgL,MAAK,OAGZA,KAAA,SAAKC,GAEH,QAFsB,IAAnBA,IAAAA,GAAY,KAEXjL,KAAK0F,SAASmF,UAAY3K,EAAEF,KAAK0F,UAAUa,SAASf,IAAuBtF,EAAEF,KAAKwK,OAAOjE,SAASf,IAAtG,CAKA,IAAM0F,EAAgB,CACpBA,cAAelL,KAAK0F,UAIhByF,EAAYjL,EAAEkF,MAAMA,EAAMkE,KAAM4B,GAIhC/E,EAASiE,EAASgB,sBAAsBpL,KAAK0F,UAMnD,GAHAxF,EAAEiG,GAAQpE,QAAQoJ,IAGdA,EAAUpF,qBAAd,CAKF,IAAK/F,KAAK0K,WAAaO,EAAW,CAMhC,GAAsB,oBAAXI,EACT,MAAM,IAAIrH,UAAU,oEAItB,IAAIsH,EAAmBtL,KAAK0F,SAIG,WAA3B1F,KAAKsK,QAAQN,UAEfsB,EAAmBnF,EACV/F,EAAK8B,UAAUlC,KAAKsK,QAAQN,aAGrCsB,EAAmBtL,KAAKsK,QAAQN,UAGa,oBAAlChK,KAAKsK,QAAQN,UAAU7F,SAChCmH,EAAmBtL,KAAKsK,QAAQN,UAAU,KAIhB,iBAA1BhK,KAAKsK,QAAQP,UAEf7J,EAAEiG,GAAQoF,SAAS/F,GAIrBgG,QAAQC,IAAIH,GAIV,iBAAkB3K,SAAS8C,iBACuB,IAAlDvD,EAAEiG,GAAQC,QAAQkB,GAAqB0B,QACzC9I,EAAES,SAAS+K,MAAMC,WAAWzE,GAAG,YAAa,KAAMhH,EAAE0L,MAItD5L,KAAK0F,SAAS0C,QAEdpI,KAAK0F,SAAS4C,aAAa,iBAAiB,GAG5CpI,EAAEF,KAAKwK,OAAOjC,YAAY/C,GAE1BtF,EAAEiG,GACCoC,YAAY/C,GACZzD,QAAQ7B,EAAEkF,MAAMA,EAAMmE,MAAO2B,SAGlCW,KAAA,WAEE,IAAI7L,KAAK0F,SAASmF,WAAY3K,EAAEF,KAAK0F,UAAUa,SAASf,IAAwBtF,EAAEF,KAAKwK,OAAOjE,SAASf,GAAvG,CAIA,IAAM0F,EAAgB,CACpBA,cAAelL,KAAK0F,UAGhBoG,EAAY5L,EAAEkF,MAAMA,EAAMgE,KAAM8B,GAEhC/E,EAASiE,EAASgB,sBAAsBpL,KAAK0F,UAGnDxF,EAAEiG,GAAQpE,QAAQ+J,GAGdA,EAAU/F,uBAKV/F,KAAKqK,SACPrK,KAAKqK,QAAQ0B,UAIf7L,EAAEF,KAAKwK,OAAOjC,YAAY/C,GAE1BtF,EAAEiG,GACCoC,YAAY/C,GACZzD,QAAQ7B,EAAEkF,MAAMA,EAAMiE,OAAQ6B,SAGnCjF,QAAA,WAEE/F,EAAEgG,WAAWlG,KAAK0F,SAAUT,GAE5B/E,EAAEF,KAAK0F,UAAUsG,IAAI9G,GACrBlF,KAAK0F,SAAW,MAChB1F,KAAKwK,MAAQ,QAETxK,KAAKqK,UACPrK,KAAKqK,QAAQ0B,UACb/L,KAAKqK,QAAU,SAInB4B,OAAA,WAEEjM,KAAK0K,UAAY1K,KAAK2K,gBAED,OAAjB3K,KAAKqK,SAEPrK,KAAKqK,QAAQ6B,oBAMhBtB,mBAAA,WAAqB,IAAA7K,EAAAC,KAEpBE,EAAEF,KAAK0F,UAAUwB,GAAG9B,EAAMoE,MAAO,SAACnF,GAEhCA,EAAM4C,iBAEN5C,EAAM8H,kBAENpM,EAAK2H,cAMT6C,WAAA,SAAWhI,GAqBT,OAnBAA,EAAM6J,EAAA,GAEDpM,KAAKqM,YAAYzC,QAFhB,GAKD1J,EAAEF,KAAK0F,UAAUoB,OALhB,GAODvE,GAGLnC,EAAKiC,gBAEH2C,EAEAzC,EAEAvC,KAAKqM,YAAYlC,aAGZ5H,KAGTkI,gBAAA,WAEE,IAAKzK,KAAKwK,MAAO,CAEf,IAAMrE,EAASiE,EAASgB,sBAAsBpL,KAAK0F,UAG/CS,IAEFnG,KAAKwK,MAAQrE,EAAOhF,cAAcmG,IAMtC,OAAOtH,KAAKwK,SAGd8B,cAAA,WAEE,IAAMC,EAAkBrM,EAAEF,KAAK0F,SAAS7B,YAEpC2I,EAAY7C,GAwBhB,OArBI4C,EAAgBhG,SAASf,IAE3BgH,EAAY7C,GAERzJ,EAAEF,KAAKwK,OAAOjE,SAASf,KAEzBgH,EAAY7C,KAGL4C,EAAgBhG,SAASf,GAElCgH,EAAY7C,GAEH4C,EAAgBhG,SAASf,GAElCgH,EAAY7C,GAEHzJ,EAAEF,KAAKwK,OAAOjE,SAASf,KAEhCgH,EAAY7C,IAEP6C,KAGT7B,cAAA,WAEE,OAAoD,EAA7CzK,EAAEF,KAAK0F,UAAUU,QAAQ,WAAW4C,UAG7CyD,WAAA,WAAa,IAAAC,EAAA1M,KACL6J,EAAS,GAkBf,MAhBmC,mBAAxB7J,KAAKsK,QAAQT,OAEtBA,EAAO3F,GAAK,SAAC4C,GAOX,OALAA,EAAK6F,QAALP,EAAA,GACKtF,EAAK6F,QADV,GAEKD,EAAKpC,QAAQT,OAAO/C,EAAK6F,QAASD,EAAKhH,WAAa,IAGlDoB,GAIT+C,EAAOA,OAAS7J,KAAKsK,QAAQT,OAGxBA,KAGT+C,iBAAA,WAEE,IAAM1C,EAAe,CAEnBsC,UAAWxM,KAAKsM,gBAEhBO,UAAW,CAEThD,OAAQ7J,KAAKyM,aAEb3C,KAAM,CACJgD,QAAS9M,KAAKsK,QAAQR,MAGxBiD,gBAAiB,CACfC,kBAAmBhN,KAAKsK,QAAQP,YAYtC,MAN6B,WAAzB/J,KAAKsK,QAAQL,UACfC,EAAa2C,UAAUI,WAAa,CAClCH,SAAS,IAIbV,EAAA,GAEKlC,EAFL,GAGKlK,KAAKsK,QAAQJ,iBAObvD,iBAAP,SAAwBpE,GACtB,OAAOvC,KAAK4G,KAAK,WAGf,IAAIE,EAAO5G,EAAEF,MAAM8G,KAAK7B,GAYxB,GATK6B,IAGHA,EAAO,IAAIsD,EAASpK,KAJY,iBAAXuC,EAAsBA,EAAS,MAMpDrC,EAAEF,MAAM8G,KAAK7B,EAAU6B,IAIH,iBAAXvE,EAAqB,CAE9B,GAA4B,oBAAjBuE,EAAKvE,GAEd,MAAM,IAAIyB,UAAJ,oBAAkCzB,EAAlC,KAGRuE,EAAKvE,WAKJwI,YAAP,SAAmB1G,GAEjB,IAAIA,GA7byB,IA6bfA,EAAM6I,QACH,UAAf7I,EAAMyD,MAjcQ,IAicYzD,EAAM6I,OASlC,IAHA,IAAMC,EAAU,GAAGvE,MAAM/F,KAAKlC,SAASkI,iBAAiBvB,IAG/CwB,EAAI,EAAGC,EAAMoE,EAAQnE,OAAQF,EAAIC,EAAKD,IAAK,CAElD,IAAM3C,EAASiE,EAASgB,sBAAsB+B,EAAQrE,IAGhDsE,EAAUlN,EAAEiN,EAAQrE,IAAIhC,KAAK7B,GAE7BiG,EAAgB,CACpBA,cAAeiC,EAAQrE,IAWzB,GANIzE,GAAwB,UAAfA,EAAMyD,OAEjBoD,EAAcmC,WAAahJ,GAIxB+I,EAAL,CAOA,IAAME,EAAeF,EAAQ5C,MAG7B,GAAKtK,EAAEiG,GAAQI,SAASf,MAQpBnB,IAAyB,UAAfA,EAAMyD,MAChB,kBAAkBzE,KAAKgB,EAAMK,OAAOyD,UAA2B,UAAf9D,EAAMyD,MAhf5C,IAgfgEzD,EAAM6I,QAChFhN,EAAE+H,SAAS9B,EAAQ9B,EAAMK,SAF7B,CAWA,IAAMoH,EAAY5L,EAAEkF,MAAMA,EAAMgE,KAAM8B,GAGtChL,EAAEiG,GAAQpE,QAAQ+J,GAEdA,EAAU/F,uBAOV,iBAAkBpF,SAAS8C,iBAC7BvD,EAAES,SAAS+K,MAAMC,WAAWK,IAAI,YAAa,KAAM9L,EAAE0L,MAIvDuB,EAAQrE,GAAGR,aAAa,gBAAiB,SAErC8E,EAAQ/C,SAEV+C,EAAQ/C,QAAQ0B,UAIlB7L,EAAEoN,GAAchH,YAAYd,GAG5BtF,EAAEiG,GACCG,YAAYd,GACZzD,QAAQ7B,EAAEkF,MAAMA,EAAMiE,OAAQ6B,WAI9BE,sBAAP,SAA6BtK,GAE3B,IAAIqF,EAEEpF,EAAWX,EAAKS,uBAAuBC,GAW7C,OARIC,IAEFoF,EAASxF,SAASQ,cAAcJ,IAM3BoF,GAAUrF,EAAQ+C,cAIpB0J,uBAAP,SAA8BlJ,GAE5B,IAAI,kBAAkBhB,KAAKgB,EAAMK,OAAOyD,WAljBtB,KAmjBd9D,EAAM6I,OApjBS,KAojBkB7I,EAAM6I,QAhjBpB,KAijBpB7I,EAAM6I,OAljBY,KAkjBoB7I,EAAM6I,OAC3ChN,EAAEmE,EAAMK,QAAQ0B,QAAQkB,GAAe0B,SAAWE,EAAe7F,KAAKgB,EAAM6I,UAKhF7I,EAAM4C,iBACN5C,EAAM8H,mBAGFnM,KAAK6K,WAAY3K,EAAEF,MAAMuG,SAASf,IAAtC,CAKA,IAAMW,EAAWiE,EAASgB,sBAAsBpL,MAE1C8K,EAAW5K,EAAEiG,GAAQI,SAASf,GAGpC,GAAKsF,GAzkBc,KAykBFzG,EAAM6I,MAKvB,GAAKpC,KAAYA,GA9kBE,KA8kBWzG,EAAM6I,OA7kBlB,KA6kB8C7I,EAAM6I,OAAtE,CAeA,IAAMM,EAAQ,GAAG5E,MAAM/F,KAAKsD,EAAO0C,iBAAiBvB,KACjDmG,OAAO,SAACC,GAAD,OAAUxN,EAAEwN,GAAM/I,GAAG,cAG/B,GAAqB,IAAjB6I,EAAMxE,OAAV,CAKA,IAAI2E,EAAQH,EAAMI,QAAQvJ,EAAMK,QAnmBX,KAsmBjBL,EAAM6I,OAAsC,EAARS,GAEtCA,IAvmBqB,KA2mBnBtJ,EAAM6I,OAAgCS,EAAQH,EAAMxE,OAAS,GAE/D2E,IAIEA,EAAQ,IAEVA,EAAQ,GAIVH,EAAMG,GAAOvF,aA7Cb,CAEE,GAhlBiB,KAglBb/D,EAAM6I,MAA0B,CAElC,IAAMxF,EAASvB,EAAOhF,cAAcmG,GAEpCpH,EAAEwH,GAAQ3F,QAAQ,SAIpB7B,EAAEF,MAAM+B,QAAQ,oDA5fhB,MAjGU,wCAqGV,OAAO6H,uCAIP,OAAOO,YAiiBbjK,EAAES,UAECuG,GAAG9B,EAAMqE,iBAAkBnC,EAAsB8C,GAASmD,wBAE1DrG,GAAG9B,EAAMqE,iBAAkBnC,EAAe8C,GAASmD,wBAEnDrG,GAAM9B,EAAMG,eANf,IAMiCH,EAAMsE,eAAkBU,GAASW,aAE/D7D,GAAG9B,EAAMG,eAAgB+B,EAAsB,SAAUjD,GACxDA,EAAM4C,iBACN5C,EAAM8H,kBACN/B,GAASzD,iBAAiB9D,KAAK3C,EAAEF,MAAO,YAGzCkH,GAAG9B,EAAMG,eAAgB+B,EAAqB,SAACuG,GAC9CA,EAAE1B,oBASNjM,EAAEgE,GAAGc,GAAQoF,GAASzD,iBACtBzG,EAAEgE,GAAGc,GAAMmC,YAAciD,GACzBlK,EAAEgE,GAAGc,GAAMoC,WAAa,WAEtB,OADAlH,EAAEgE,GAAGc,GAAQG,EACNiF,GAASzD","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * simplicss (v4.3.1): util.js\n * Licensed under MIT (https://github.com/twbs/simplicss/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\n\n/**\n * ------------------------------------------------------------------------\n * Private TransitionEnd Helpers\n * ------------------------------------------------------------------------\n */\n\n // transitionendイベント用で変数になってるのはprefixをつけるから？\nconst TRANSITION_END = 'transitionend'\nconst MAX_UID = 1000000\nconst MILLISECONDS_MULTIPLIER = 1000\n\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\n// オブジェクトの型を判定する\nfunction toType(obj) {\n  return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\n//\nfunction getSpecialTransitionEndEvent() {\n  return {\n    bindType: TRANSITION_END,\n    delegateType: TRANSITION_END,\n    handle(event) {\n      if ($(event.target).is(this)) {\n        return event.handleObj.handler.apply(this, arguments) // eslint-disable-line prefer-rest-params\n      }\n      return undefined // eslint-disable-line no-undefined\n    }\n  }\n}\n\n// transitionの遷移時間を引数でもらう\nfunction transitionEndEmulator(duration) {\n  let called = false\n\n  // 呼び出しもとのエレメントでTRANSITION_ENDを実行\n  $(this).one(Util.TRANSITION_END, () => {\n    // コールバックをtrueにする\n    called = true\n  })\n\n  setTimeout(() => {\n    // falseだったらtriggerTransitionEndを実行する\n    if (!called) {\n      Util.triggerTransitionEnd(this)\n    }\n  }, duration) // settimeoutの時間は引数の遷移時間\n  // エレメントを返す\n  return this\n}\n\nfunction setTransitionEndSupport() {\n  // Jqueryのカスタムプラグインを作成\n  $.fn.emulateTransitionEnd = transitionEndEmulator\n  $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent()\n}\n\n/**\n * --------------------------------------------------------------------------\n * Public Util Api\n * --------------------------------------------------------------------------\n */\n\nconst Util = {\n\n  TRANSITION_END: 'scTransitionEnd',\n\n  getUID(prefix) {\n    do {\n      // eslint-disable-next-line no-bitwise\n      prefix += ~~(Math.random() * MAX_UID) // \"~~\" acts like a faster Math.floor() here\n    } while (document.getElementById(prefix))\n    return prefix\n  },\n\n  getSelectorFromElement(element) {\n    // 引数elementのdata-target属性の値を取得\n    let selector = element.getAttribute('data-target')\n\n    // data-targetが存在しないか#の場合\n    if (!selector || selector === '#') {\n      // 引数elementのhref属性の値を取得\n      const hrefAttr = element.getAttribute('href')\n      // hrefAttrがあったら#かどうかを判定して、trueならhrefAttrをtrimして返す。falseなら、空文字を入れる\n      // trim: https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/String/trim\n      selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : ''\n    }\n\n    try {\n      // html内のdata-targetもしくはhregで指定されているselectorを返す\n      // data-targetの対象を返す\n      // なかったらnullを返す\n      return document.querySelector(selector) ? selector : null\n    } catch (err) {\n      // エラーになったらnullを返す\n      return null\n    }\n  },\n\n  // 要素から遷移時間を取得\n  getTransitionDurationFromElement(element) {\n    // エレメントがなかったら0を返す\n    if (!element) {\n      return 0\n    }\n\n    // transition-durationとtransition-delayの値を取得\n    let transitionDuration = $(element).css('transition-duration')\n    let transitionDelay = $(element).css('transition-delay')\n\n    // 浮動小数点を取得\n    const floatTransitionDuration = parseFloat(transitionDuration)\n    const floatTransitionDelay = parseFloat(transitionDelay)\n\n    // cssプロパティ、値がなければ0を返す\n    if (!floatTransitionDuration && !floatTransitionDelay) {\n      return 0\n    }\n\n    // 複数値が指定されてたら最初の1つだけ取得する\n    transitionDuration = transitionDuration.split(',')[0]\n    transitionDelay = transitionDelay.split(',')[0]\n\n    // 変化にかかる時間(transitionDuration)と変化が始める時間(transitionDelay)を足して1000をかけて(秒にする)返す\n    return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER // ×1000する\n  },\n\n  reflow(element) {\n    return element.offsetHeight\n  },\n\n  // 引数エレメントでtrainsition_endイベントを実行する\n  triggerTransitionEnd(element) {\n    $(element).trigger(TRANSITION_END)\n  },\n\n  // TODO: Remove in v5\n  supportsTransitionEnd() {\n    return Boolean(TRANSITION_END)\n  },\n\n  // 引数がdom要素か判定する\n  // 違う場合はundefinedを返す\n  isElement(obj) {\n    return (obj[0] || obj).nodeType\n  },\n\n  // Nameとconfigとdefauly typeでexpectedTypesとvalueTypeが一致しなかったら、エラーを投げる\n  typeCheckConfig(componentName, config, configTypes) {\n    // default typeの分だけループ\n    // dropdownだとoffset、flipなどなど\n    for (const property in configTypes) {\n      // Object.prototype.hasOwnPropertyはオブジェクトにpropertyがあるか判定する\n      // offsetプロパティが、configTypesにあるか\n      if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n        // configTypesからプロパティの値を取得\n        const expectedTypes = configTypes[property]\n        // configの中からpropertyの値を取得\n        const value = config[property]\n        // valueが存在してdom要素だった場合はelementを格納\n        // falseの場合は型を判定して格納\n        const valueType = value && Util.isElement(value)\n          ? 'element' : toType(value)\n\n        //  expectedTypesとvalueTypeが一致してない場合\n        if (!new RegExp(expectedTypes).test(valueType)) {\n          // エラーを投げる。エラーが投げられたら処理は終了\n          throw new Error(\n            `${componentName.toUpperCase()}: ` +\n            `Option \"${property}\" provided type \"${valueType}\" ` +\n            `but expected type \"${expectedTypes}\".`)\n        }\n      }\n    }\n  },\n\n  findShadowRoot(element) {\n    if (!document.documentElement.attachShadow) {\n      return null\n    }\n\n    // Can find the shadow root otherwise it'll return the document\n    if (typeof element.getRootNode === 'function') {\n      const root = element.getRootNode()\n      return root instanceof ShadowRoot ? root : null\n    }\n\n    if (element instanceof ShadowRoot) {\n      return element\n    }\n\n    // when we don't find a shadow root\n    if (!element.parentNode) {\n      return null\n    }\n\n    return Util.findShadowRoot(element.parentNode)\n  },\n\n  jQueryDetection() {\n    if (typeof $ === 'undefined') {\n      throw new TypeError('simplicss\\'s JavaScript requires jQuery. jQuery must be included before simplicss\\'s JavaScript.')\n    }\n\n    const version = $.fn.jquery.split(' ')[0].split('.')\n    const minMajor = 1\n    const ltMajor = 2\n    const minMinor = 9\n    const minPatch = 1\n    const maxMajor = 4\n\n    if (version[0] < ltMajor && version[1] < minMinor || version[0] === minMajor && version[1] === minMinor && version[2] < minPatch || version[0] >= maxMajor) {\n      throw new Error('simplicss\\'s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0')\n    }\n  }\n}\n\nUtil.jQueryDetection()\nsetTransitionEndSupport()\n\nexport default Util\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.3.1): alert.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\nconst NAME = 'alert'\nconst VERSION = '0.5.2'\n\nconst DATA_KEY = 'sc.alert'\n// アラート閉じた時のイベントとかに使うみたい\n// http://bootstrap3.cyberlab.info/javascript/alerts-events.html\nconst EVENT_KEY = `.${DATA_KEY}`\n// イベントを無効にする用\n// https://getbootstrap.jp/docs/4.1/getting-started/javascript/\nconst DATA_API_KEY = '.data-api'\n// 他のフレームワークと名前衝突を回避する用\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\n\n// アラート消す用\nconst Selector = {\n  DISMISS : '[data-dismiss=\"alert\"]'\n}\n\n// イベント用の名前\n// e.g. close.sc.alert\nconst Event = {\n  CLOSE : `close${EVENT_KEY}`,\n  CLOSED : `closed${EVENT_KEY}`,\n  CLICK_DATA_API : `click${EVENT_KEY}${DATA_API_KEY}`\n}\n\n// htmlのクラス名\nconst ClassName = {\n  ALERT : 'alert',\n  FADE  : 'fade',\n  SHOW  : 'show'\n}\n\nclass Alert {\n  constructor(element) {\n    this._element = element\n  }\n\n  // バージョンのゲッター\n  static get VERSION() {\n    return VERSION\n  }\n\n  // public method\n\n  close(element) {\n    // このクラス内のthisはalertクラス\n\n    // コンストラクタで取得したelement\n    let rootElement = this._element\n\n    // closeにelementが引数で渡されていたら\n    if (element) {\n      // div.alertを取得\n      rootElement = this._getRootElement(element)\n    }\n\n    // カスタムイベントを作成\n    const customEvent = this._triggerCloseEvent(rootElement)\n\n    // イベントがブラウザの処理を禁止していた場合は闇に葬り去る\n    // http://www.jquerystudy.info/reference/events/isDefaultPrevented.html\n    if (customEvent.isDefaultPrevented()) {\n      return\n    }\n\n    // showクラスを削除する\n    // fadeクラスがなかった場合、要素を削除する\n    this._removeElement(rootElement)\n  }\n\n  // this._elementを削除するみたい\n  dispose() {\n    $.removeData(this._element, DATA_KEY)\n    this._element = null\n  }\n\n  // private method\n\n  // closeで使ってるやつ\n  _getRootElement(element) {\n    // elementのdata-targetもしくはhrefで指定されているselectorを取得\n    const selector = Util.getSelectorFromElement(element)\n    let parent     = false\n\n    // selectorがあった場合\n    if (selector) {\n      // data-targetもしくはhrefで指定されている要素を取得\n      // 開始タグから終了タグまで持ってくるみたい\n      parent = document.querySelector(selector)\n    }\n\n    // 上のifを通らなかったか通ってもnullが帰ってきた場合\n    if (!parent) {\n      // data-targetもしくはhrefが指定されてないので、一番近い.alertを取得する\n      parent = $(element).closest(`.${ClassName.ALERT}`)[0]\n    }\n\n    return parent\n  }\n\n  // closeで使ってるやつ\n  _triggerCloseEvent(element) {\n    // close.sc.alertイベントを定義\n    const closeEvent = $.Event(Event.CLOSE)\n\n    $(element).trigger(closeEvent) // closeイベントを発生\n    // closeEvent返すんか\n    return closeEvent\n  }\n\n  // closeで使ってるやつ\n  _removeElement(element) {\n    // showクラスを削除\n    $(element).removeClass(ClassName.SHOW)\n\n    // fadeクラスを持ってなかった場合\n    if (!$(element).hasClass(ClassName.FADE)) {\n      // アラートを削除\n      this._destroyElement(element)\n      return // eslint-disable-line no-useless-return\n    }\n\n    // 要素の変化にかかる時間を取得\n    const transitionDuration = Util.getTransitionDurationFromElement(element)\n\n    $(element)\n      // .oneは一回だけ実行するイベント。TRANSITION_ENDはイベント名。\n      // エレメントを削除してclosedイベントを実行する\n      .one(Util.TRANSITION_END, (event) => this._destroyElement(element, event))\n      // util.jsのtransitionEndEmulatorを実行\n      .emulateTransitionEnd(transitionDuration)\n  }\n\n  // _removeElementで使ってるやつ\n  _destroyElement(element) {\n    $(element) // elementを。。。\n      .detach() // elementを隔離\n      .trigger(Event.CLOSED) // closedイベントを発生させる\n      .remove() // element削除\n      // https://qiita.com/BRSF/items/1aa9d154bde497b0baa0#remove%E3%81%AE%E5%A0%B4%E5%90%88\n  }\n\n  // static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      // elementを格納\n      const $element = $(this)\n      // elementのdata-sc.alert属性を取得\n      let data = $element.data(DATA_KEY)\n\n      // dataがなかったら\n      if (!data) {\n        // アラートをインスタンス化\n        // thisはelement\n        data = new Alert(this)\n        // elementにdata-sc.alertを設定\n        // 中身はdata\n        $element.data(DATA_KEY, data)\n      }\n\n      // configがcloseだったら・・・・\n      if (config === 'close') {\n        // alert.close(element)になる\n        data[config](this)\n      }\n    })\n  }\n\n  static _handleDismiss(alertInstance) {\n    return function (event) {\n      // イベントがあったら\n      if (event) {\n        // イベントの動作を停止させる\n        event.preventDefault()\n      }\n\n      // 引数で受け取ったalertインスタンスのcloseを実行\n      // 引数はhtmlのbutton\n      alertInstance.close(this)\n    }\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Apiの定義\n * ------------------------------------------------------------------------\n */\n\n// ここがブラウザで使う部分みたい\n$(document).on(\n  Event.CLICK_DATA_API, // click.sc.alert.data-api\n  Selector.DISMISS, // [data-dismiss=\"alert\"]\n  Alert._handleDismiss(new Alert()) // staticのやつ実行するんだね\n)\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n// .alertは_jQueryInterface\n$.fn[NAME] = Alert._jQueryInterface\n// .alert.ConstructorはAlert\n$.fn[NAME].Constructor = Alert\n\n// .alert.noConflict\n// 衝突回避用\n$.fn[NAME].noConflict  = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Alert._jQueryInterface\n}\n\n\nexport default Alert\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.3.1): button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n// aria-pressedは要素が押されている状態\n// .activeはactive状態\n\nimport $ from 'jquery'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME  = 'button'\nconst VERSION = '0.5.2'\nconst DATA_KEY = 'sc.button'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\n\nconst ClassName = {\n  ACTIVE : 'active',\n  BUTTON : 'btn',\n  FOCUS  : 'focus'\n}\n\nconst Selector = {\n  DATA_TOGGLE_CARROT : '[data-toggle^=\"button\"]',\n  DATA_TOGGLES : '[data-toggle=\"buttons\"]',\n  DATA_TOGGLE : '[data-toggle=\"button\"]',\n  DATA_TOGGLES_BUTTONS : '[data-toggle=\"buttons\"] .btn',\n  INPUT : 'input:not([type=\"hidden\"])',\n  ACTIVE : '.active',\n  BUTTON : '.btn'\n}\n\nconst Event = {\n  CLICK_DATA_API : `click${EVENT_KEY}${DATA_API_KEY}`,\n  FOCUS_BLUR_DATA_API : `focus${EVENT_KEY}${DATA_API_KEY} ` +\n                                          `blur${EVENT_KEY}${DATA_API_KEY}`,\n  LOAD_DATA_API : `load${EVENT_KEY}${DATA_API_KEY}`\n}\n\n/**\n * ------------------------------------------------------------------------\n * クラス\n * ------------------------------------------------------------------------\n */\n\nclass Button {\n  constructor(element) {\n    this._element = element\n  }\n\n   // バージョンのゲッター\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  // toggleメソッド\n  toggle() {\n    let triggerChangeEvent = true\n    let addAriaPressed = true\n    // '[data-toggle=\"buttons\"]'をもつ要素の親要素を取得する\n    const rootElement = $(this._element).closest(\n      Selector.DATA_TOGGLES\n    )[0]\n\n    // rootElementがあったら\n    if (rootElement) {\n      // hiddenじゃないinputを取得する\n      const input = this._element.querySelector(Selector.INPUT)\n\n      // inputがあった場合\n      if (input) {\n        // inputがradioだった場合\n        if (input.type === 'radio') {\n          // .classList.contains(クラス名)が存在するか確認する\n          // radioがチェックされててかつ、.activeクラスが存在する場合。\n          if (input.checked &&\n            this._element.classList.contains(ClassName.ACTIVE)) {\n            // .activeなボタンを押したらfalseにする\n            triggerChangeEvent = false\n          } else {\n            // .activeを持つ要素を取得する。\n            const activeElement = rootElement.querySelector(Selector.ACTIVE)\n\n            // activeElementが存在してたら\n            if (activeElement) {\n              // .activeクラスを削除する\n              $(activeElement).removeClass(ClassName.ACTIVE)\n            }\n          }\n        // inputがcheckboxだったら\n        } else if (input.type === 'checkbox') {\n          // this._elementのタグ名が<label>でかつ、.activeクラスを持っていたら\n          if (this._element.tagName === 'LABEL' && input.checked === this._element.classList.contains(ClassName.ACTIVE)) {\n            triggerChangeEvent = false\n          }\n        } else {\n          // radioもしくはcheckboxじゃない場合、pointless/invalid checkedをinputに追加しちゃあかん\n          triggerChangeEvent = false\n        }\n\n        // .activeクラスを持っていない場合の処理\n        if (triggerChangeEvent) {\n          // アクティブを持っていないか確認\n          input.checked = !this._element.classList.contains(ClassName.ACTIVE)\n          // input要素に対してchangeを発動\n          $(input).trigger('change')\n        }\n\n        // inputにfocusを当てる\n        input.focus()\n        addAriaPressed = false\n      }\n    }\n\n    // buttonがdisabled属性を持ってるまたは、disabledクラスを持っていた場合\n    if (!(this._element.hasAttribute('disabled') || this._element.classList.contains('disabled'))) {\n      // ボタンがinputじゃなかったら\n      if (addAriaPressed) {\n        // .activeがあったらaria-pressed属性にfalseなかったらtrue\n        this._element.setAttribute('aria-pressed',\n          !this._element.classList.contains(ClassName.ACTIVE))\n      }\n\n      // .activeクラスを持ってたら.activeを消す\n      if (triggerChangeEvent) {\n        $(this._element).toggleClass(ClassName.ACTIVE)\n      }\n    }\n  }\n\n    // this._elementを削除するみたい\n  dispose() {\n    $.removeData(this._element, DATA_KEY)\n    this._element = null\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      // elementのdata-sc.buttonを取得\n      let data = $(this).data(DATA_KEY)\n\n\n      // dataがなかったら\n      if (!data) {\n        // buttonをインスタンス化\n        // thisはエレメント\n        data = new Button(this)\n        // thisにdata-sc.alertを設定\n        // 中身はボタンクラス\n        $(this).data(DATA_KEY, data)\n      }\n\n      // configがtoggleだったら\n      if (config === 'toggle') {\n        // button.toggleになる\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document) // click.sc.alert.data-api'と[data-toggle^=\"button\"]'\n  .on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE_CARROT, (event) => {\n    // イベント対象のelement\n    let button = event.target\n    // イベント対象のelementが.btnを持ってたら\n    if (!$(button).hasClass(ClassName.BUTTON)) {\n      // .btnを持つ要素を取得する\n      button = $(button).closest(Selector.BUTTON)[0]\n    }\n\n    // ボタンがない、ボタンがdisable属性またはクラスを持つ場合\n    if (!button || button.hasAttribute('disabled') || button.classList.contains('disabled')) {\n      // イベントを禁止にする\n      event.preventDefault() // firefoxのバグで指定しないとだめみたい\n    } else {\n      // hidden以外のinputボタンを取得\n      const inputBtn = button.querySelector(Selector.INPUT)\n      // inputボタンが存在してdisabled属性またはクラスを持ってたら\n      if (inputBtn && (inputBtn.hasAttribute('disabled') || inputBtn.classList.contains('disabled'))) {\n        // イベントを禁止にする\n        event.preventDefault() // firefoxのバグで指定しないとだめみたい\n        return\n      }\n      // ここわかりやすい\n      // https://qiita.com/Chrowa3/items/b3e2961c4930abc1369b\n      Button._jQueryInterface.call($(button), 'toggle')\n    }\n  }) // focus.sc.alert.data-api +  blur.sc.alert.data-api'と[data-toggle^=\"button\"]'\n  .on(Event.FOCUS_BLUR_DATA_API, Selector.DATA_TOGGLE_CARROT, (event) => {\n    // button要素を取得する\n    const button = $(event.target).closest(Selector.BUTTON)[0]\n    // button要素に対して、fucusクラスをつける\n    // event,typeがfocusinならtrue、違うならfalse\n    // trueなら絶対クラスを付与、falseなら削除\n    $(button).toggleClass(ClassName.FOCUS, /^focus(in)?$/.test(event.type))\n  })\n\n  // load.sc.alert.data-api'\n$(window).on(Event.LOAD_DATA_API, () => {\n  // windowsロード時にボタンの状態を見て.activeを追加する\n  // checkとかになってないのに.activeがついてたら削除する\n\n  // data-toggle内のcheckboxとradioを見つける\n  //  '[data-toggle=\"buttons\"]をもつ .btn要素を全て取得する\n  let buttons = [].slice.call(document.querySelectorAll(Selector.DATA_TOGGLES_BUTTONS))\n  // buttonsの数だけループ回すよ\n  for (let i = 0, len = buttons.length; i < len; i++) {\n    // ボタンのi番目\n    const button = buttons[i]\n    // hidden以外のinputを取得\n    const input = button.querySelector(Selector.INPUT)\n    // inputがcheckされているか、checked属性を持っている場合\n    if (input.checked || input.hasAttribute('checked')) {\n      // .activeを追加する\n      button.classList.add(ClassName.ACTIVE)\n    } else {\n      // check状態じゃなかったら削除\n      button.classList.remove(ClassName.ACTIVE)\n    }\n  }\n\n  //  全ての[data-toggle=\"button\"]を取得する\n  buttons = [].slice.call(document.querySelectorAll(Selector.DATA_TOGGLE))\n  for (let i = 0, len = buttons.length; i < len; i++) {\n    const button = buttons[i]\n    // aria-pressedにtrueが指定されていたら\n    if (button.getAttribute('aria-pressed') === 'true') {\n      button.classList.add(ClassName.ACTIVE)\n    } else {\n      button.classList.remove(ClassName.ACTIVE)\n    }\n  }\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Button._jQueryInterface\n$.fn[NAME].Constructor = Button\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Button._jQueryInterface\n}\n\nexport default Button\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): dropdown.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Popper from 'popper.js'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'dropdown'\nconst VERSION = '0.5.2'\nconst DATA_KEY = 'sc.dropdown'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\nconst ESCAPE_KEYCODE = 27 // Escキー\nconst SPACE_KEYCODE = 32 // スペースキー\nconst TAB_KEYCODE = 9 // タブキー\nconst ARROW_UP_KEYCODE = 38 // ↑キー\nconst ARROW_DOWN_KEYCODE = 40 // ↓キー\nconst RIGHT_MOUSE_BUTTON_WHICH = 3 // マウスの右クリック\n// 正規表現オブジェクト作成\nconst REGEXP_KEYDOWN = new RegExp(`${ARROW_UP_KEYCODE}|${ARROW_DOWN_KEYCODE}|${ESCAPE_KEYCODE}`)\n\nconst Event = {\n  HIDE : `hide${EVENT_KEY}`,\n  HIDDEN : `hidden${EVENT_KEY}`,\n  SHOW : `show${EVENT_KEY}`,\n  SHOWN: `shown${EVENT_KEY}`,\n  CLICK : `click${EVENT_KEY}`,\n  CLICK_DATA_API : `click${EVENT_KEY}${DATA_API_KEY}`,\n  KEYDOWN_DATA_API : `keydown${EVENT_KEY}${DATA_API_KEY}`,\n  KEYUP_DATA_API : `keyup${EVENT_KEY}${DATA_API_KEY}`\n}\n\nconst ClassName = {\n  DISABLED : 'disabled',\n  SHOW : 'show',\n  DROPUP : 'dropup',\n  DROPRIGHT : 'dropright',\n  DROPLEFT : 'dropleft',\n  MENURIGHT : 'dropdown-menu-right',\n  MENULEFT : 'dropdown-menu-left',\n  POSITION_STATIC : 'position-static'\n}\n\nconst Selector = {\n  DATA_TOGGLE : '[data-toggle=\"dropdown\"]',\n  FORM_CHILD : '.dropdown form',\n  MENU : '.dropdown-menu',\n  NAVBAR_NAV : '.navbar-nav',\n  VISIBLE_ITEMS : '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)'\n}\n\nconst AttachmentMap = {\n  TOP : 'top-start',\n  TOPEND : 'top-end',\n  BOTTOM : 'bottom-start',\n  BOTTOMEND : 'bottom-end',\n  RIGHT : 'right-start',\n  RIGHTEND : 'right-end',\n  LEFT : 'left-start',\n  LEFTEND : 'left-end'\n}\n\nconst Default = {\n  offset : 0,\n  flip : true,\n  boundary : 'scrollParent',\n  reference : 'toggle',\n  display : 'dynamic',\n  popperConfig : null\n}\n\nconst DefaultType = {\n  offset : '(number|string|function)',\n  flip : 'boolean',\n  boundary : '(string|element)',\n  reference : '(string|element)',\n  display : 'string',\n  popperConfig : '(null|object)'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class\n * ------------------------------------------------------------------------\n */\n\nclass Dropdown {\n  // button.dropdown-toggleと、configがobjectならobject、違うならnull\n  constructor(element, config) {\n    this._element = element\n    this._popper = null\n    // configを取得\n    this._config = this._getConfig(config)\n    // .dropdown-menuを取得\n    this._menu = this._getMenuElement()\n    // dropdownがnavbarに内包されているか確認\n    this._inNavbar = this._detectNavbar()\n    // クリックイベントの設定（ここでtoggleも登録）\n    this._addEventListeners()\n  }\n\n    // Getters\n\n    static get VERSION() {\n      return VERSION\n    }\n\n    static get Default() {\n      return Default\n    }\n\n    static get DefaultType() {\n      return DefaultType\n    }\n\n    toggle() {\n      // エレメントがdisable属性もしくはclassを持ってたら処理終了\n      if (this._element.disabled || $(this._element).hasClass(ClassName.DISABLED)) {\n        return\n      }\n\n      // メニューが.showを持ってるか判定\n      const isActive = $(this._menu).hasClass(ClassName.SHOW)\n\n      // メニューを閉じる\n      Dropdown._clearMenus()\n\n      // .showを持ってたらshowする必要ないので処理終了\n      if (isActive) {\n        return\n      }\n\n      // 下のshowを発動。popperは使う\n      this.show(true)\n    }\n\n    show(usePopper = false) {\n      // dropdownもしくはメニューがdisableになってたら処理終了\n      if (this._element.disabled || $(this._element).hasClass(ClassName.DISABLED) || $(this._menu).hasClass(ClassName.SHOW)) {\n        return\n      }\n\n      // .dropdown-toggleをrelatedTargetに入れる\n      const relatedTarget = {\n        relatedTarget: this._element\n      }\n\n      // show.sc.dropdownイベントを定義して、relatedTargetを渡す\n      const showEvent = $.Event(Event.SHOW, relatedTarget)\n\n      // エレメントの親要素を取得\n      // .dropdown\n      const parent = Dropdown._getParentFromElement(this._element)\n\n      // parentに対してshoweventを発動する\n      $(parent).trigger(showEvent)\n\n      // ブラウザの処理を禁止してたら処理終了\n      if (showEvent.isDefaultPrevented()) {\n        return\n      }\n\n    // navに入ってない状態でusepopperが使われる時\n    if (!this._inNavbar && usePopper) {\n      /**\n       * Check for Popper dependency\n       * Popper - https://popper.js.org\n       */\n      // popperが読み込まれているか確認\n      if (typeof Popper === 'undefined') {\n        throw new TypeError('Simplicss\\'s dropdowns require Popper.js (https://popper.js.org/)')\n      }\n\n      // .data-toggle要素を格納\n      let referenceElement = this._element\n\n      // this._configはDefault\n      // parentだったら\n      if (this._config.reference === 'parent') {\n        // this._elementの親要素を格納する\n        referenceElement = parent\n      } else if (Util.isElement(this._config.reference)) {\n        // this._config.referenceがdom要素だったら\n        // this._config.referenceを突っ込む\n        referenceElement = this._config.reference\n\n        // jquery要素か確認する\n        if (typeof this._config.reference.jquery !== 'undefined') {\n          referenceElement = this._config.reference[0]\n        }\n      }\n      // boundaryがscrollParentじゃない場合は、位置をstaticに設定してメニューが親をエスケープ出来るようにする\n      if (this._config.boundary !== 'scrollParent') {\n        // parentに.position-staticを追加\n        $(parent).addClass(ClassName.POSITION_STATIC)\n      }\n      // popperをインスタンス化\n      // referenceElementはdata-toggle、this._menuはメニュー、this._getPopperConfig()はpopperのコンフィグ\n      console.log(referenceElement)\n    }\n\n    // タッチデバイスの場合、空のマウスオーバリスナーを追加\n    if ('ontouchstart' in document.documentElement &&\n        $(parent).closest(Selector.NAVBAR_NAV).length === 0) {\n      $(document.body).children().on('mouseover', null, $.noop)\n    }\n\n    // フォーカスさせる。キーイベントのため？\n    this._element.focus()\n    // showのときはaria-expanded属性を付与してtrueを設定する\n    this._element.setAttribute('aria-expanded', true)\n\n    // menuの.showを切り替える\n    $(this._menu).toggleClass(ClassName.SHOW)\n    // parentの.showを切り替えて、表示後のイベントをrelatedTargerに対して発動する\n    $(parent)\n      .toggleClass(ClassName.SHOW)\n      .trigger($.Event(Event.SHOWN, relatedTarget))\n  }\n\n  hide() {\n    // disableクラス、属性も持っていた場合と、メニューがshowを持っていた場合は処理を終了させる\n    if (this._element.disabled || $(this._element).hasClass(ClassName.DISABLED) || !$(this._menu).hasClass(ClassName.SHOW)) {\n      return\n    }\n    // this._elementをターゲットにする\n    const relatedTarget = {\n      relatedTarget: this._element\n    }\n    // ターゲットに対してhideイベントを定義する\n    const hideEvent = $.Event(Event.HIDE, relatedTarget)\n    // .dropdownを取得する\n    const parent = Dropdown._getParentFromElement(this._element)\n\n    // 親要素に対してhideイベントを実行する\n    $(parent).trigger(hideEvent)\n\n    // hideイベントがブラウザの動作を止めていたら処理を終了する\n    if (hideEvent.isDefaultPrevented()) {\n      return\n    }\n\n    // popperがあった場合は、削除する\n    if (this._popper) {\n      this._popper.destroy()\n    }\n\n    // this._menuのshowクラスを切り替える\n    $(this._menu).toggleClass(ClassName.SHOW)\n    // 親要素に対して、showクラスを切り替えて、hiddenイベントを発動する\n    $(parent)\n      .toggleClass(ClassName.SHOW)\n      .trigger($.Event(Event.HIDDEN, relatedTarget))\n  }\n\n  dispose() {\n    // this_elementのdata-apiを削除する\n    $.removeData(this._element, DATA_KEY)\n    // this_elementのイベントを削除\n    $(this._element).off(EVENT_KEY)\n    this._element = null\n    this._menu = null\n    // popperがnullじゃなかったら、削除してnullにする\n    if (this._popper !== null) {\n      this._popper.destroy()\n      this._popper = null\n    }\n  }\n\n  update() {\n    // dropdownがnavbarにあるか確認\n    this._inNavbar = this._detectNavbar()\n    // popperがnullじゃなかったら\n    if (this._popper !== null) {\n      // popper要素の位置を変更\n      this._popper.scheduleUpdate()\n    }\n  }\n\n   // Private\n\n   _addEventListeners() {\n     // this_elementをクリックした時のイベントを定義する\n    $(this._element).on(Event.CLICK, (event) => {\n      // this._elementイベント禁止\n      event.preventDefault()\n      // 親要素のイベントが実行されないようにeventの伝播を禁止する\n      event.stopPropagation()\n      // toggleを発動する\n      this.toggle()\n    })\n  }\n\n  // configを取得\n  // 引数はtoggleだとnullでそうじゃなかったらobject\n  _getConfig(config) {\n    // configにdefaultの設定を$(this._element).data()、configの順に上書きしていく感じ\n    config = {\n      // default\n      ...this.constructor.Default,\n      //  data-toggle=\"dropdown\" data-display=\"static\" を取得してるみたい\n      // dataって単純にdata属性全部取得する\n      ...$(this._element).data(),\n      // 引数のconfig（object用？）\n      ...config\n    }\n\n    Util.typeCheckConfig(\n      // dropdown\n      NAME,\n      // 上で作ったconfigが入ってる\n      config,\n      // default typeがそのまま入ってる\n      this.constructor.DefaultType\n    )\n\n    return config\n  }\n\n  _getMenuElement() {\n    // this._menuが存在しなかった場合\n    if (!this._menu) {\n      // this._elementの親要素を返す。div.dropdownとかbtn-groupとか\n      const parent = Dropdown._getParentFromElement(this._element)\n\n      // parentが存在していた場合\n      if (parent) {\n        // parentの中から.dropdown-menuを取得してthis._menuに格納する\n        this._menu = parent.querySelector(Selector.MENU)\n      }\n    }\n\n    // this._menuが存在してたらそのまま返す。\n    // 存在してなかったら、取得して返す\n    return this._menu\n  }\n\n  _getPlacement() {\n    // this.elementの親要素を取得（.dropdown）\n    const $parentDropdown = $(this._element.parentNode)\n    // bottom-startを格納。初期値\n    let placement = AttachmentMap.BOTTOM\n\n    // dropupを持ってたら\n    if ($parentDropdown.hasClass(ClassName.DROPUP)) {\n      // top-startを格納\n      placement = AttachmentMap.TOP\n      // メニューがdropdown-menu-rightを持っていた場合\n      if ($(this._menu).hasClass(ClassName.MENURIGHT)) {\n        // top-endを格納\n        placement = AttachmentMap.TOPEND\n      }\n    // droprightを持っていた場合\n    } else if ($parentDropdown.hasClass(ClassName.DROPRIGHT)) {\n      // right-startを格納\n      placement = AttachmentMap.RIGHT\n    // dropleftを持っていた場合\n    } else if ($parentDropdown.hasClass(ClassName.DROPLEFT)) {\n      // left-startを格納\n      placement = AttachmentMap.LEFT\n    // dropdown-menu-rightを持っていた場合\n    } else if ($(this._menu).hasClass(ClassName.MENURIGHT)) {\n      // bottom-endを格納\n      placement = AttachmentMap.BOTTOMEND\n    }\n    return placement\n  }\n\n  _detectNavbar() {\n    // .navbar要素にdropdownが存在していないか確認\n    return $(this._element).closest('.navbar').length > 0\n  }\n\n  _getOffset() {\n    const offset = {}\n    // this._config.offsetが関数だったら\n    if (typeof this._config.offset === 'function') {\n      // dataはpopperみたい\n      offset.fn = (data) => {\n        // data.offsetに展開して格納\n        data.offsets = {\n          ...data.offsets,\n          ...this._config.offset(data.offsets, this._element) || {}\n        }\n\n        return data\n      }\n    } else {\n      // offsetにthis._config.offsetを入れる\n      offset.offset = this._config.offset\n    }\n\n    return offset\n  }\n\n  _getPopperConfig() {\n    // popperの設定を定義\n    const popperConfig = {\n      // 表示位置\n      placement: this._getPlacement(),\n      // offsetを更新するためのリスト\n      modifiers: {\n        // offset\n        offset: this._getOffset(),\n        // popperの表示を反転する\n        flip: {\n          enabled: this._config.flip\n        },\n        // flipを動作させるためにpreventOverflowが必要\n        preventOverflow: {\n          boundariesElement: this._config.boundary\n        }\n      }\n    }\n\n    // this._config.displayがstaticの場合は、popperを無効化する\n    if (this._config.display === 'static') {\n      popperConfig.modifiers.applyStyle = {\n        enabled: false\n      }\n    }\n\n    return {\n      // popperの設定を展開して返す\n      ...popperConfig,\n      ...this._config.popperConfig\n    }\n  }\n\n  // Static\n\n  // callの通り、configはtoggle\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      // こんな感じで使わないとdataには入らない\n      // $('.dropdown-toggle').data('sc.dropdown', '')\n      let data = $(this).data(DATA_KEY)\n      // configはtoggleの場合はnullになる。\n      const _config = typeof config === 'object' ? config : null\n      if (!data) {\n        // thisはdropdown-toggle(button)\n        // つまりelement\n        data = new Dropdown(this, _config)\n        // elementにsc.dropdownでdataをセットする\n        $(this).data(DATA_KEY, data)\n      }\n\n      // toggleの場合はstring\n      if (typeof config === 'string') {\n        // dataのtoggleを指してるみたい\n        if (typeof data[config] === 'undefined') {\n          // toggleメソッドがなかったらスロー\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n        // toggle関数を発動する\n        data[config]()\n      }\n    })\n  }\n\n  static _clearMenus(event) {\n    // イベントが存在していてかつ、イベントがマウスの右クリックまたはキーを離した、またはタブキーじゃないものを押下した場合\n    if (event && (event.which === RIGHT_MOUSE_BUTTON_WHICH ||\n      event.type === 'keyup' && event.which !== TAB_KEYCODE)) {\n      // 処理を終了する\n      return\n    }\n\n    //  '[data-toggle=\"dropdown\"]'をもつ .要素を全て取得する\n    const toggles = [].slice.call(document.querySelectorAll(Selector.DATA_TOGGLE))\n\n    // 取得したtogglesの数だけループ回す\n    for (let i = 0, len = toggles.length; i < len; i++) {\n      // togglesの親ノードを取得する\n      const parent = Dropdown._getParentFromElement(toggles[i])\n      // toggle要素のsc.dropdownを取得する\n      // jqueryInterfaceをで設定してdataを取得する（dataはdropdownのコンストラクタで定義した変数）\n      const context = $(toggles[i]).data(DATA_KEY)\n      // 連想配列にtoggleを追加\n      const relatedTarget = {\n        relatedTarget: toggles[i]\n      }\n\n      // イベントが存在してイベントがclickだったら\n      // bottonクリックのロキにイベントが発動してる\n      if (event && event.type === 'click') {\n        // relatedTargetのclickイベントにイベントを追加\n        relatedTarget.clickEvent = event\n      }\n\n      // sc.dropdownが存在していたら\n      if (!context) {\n        // 更新式に行く\n        // つまり、クリックされてないものはcontextがないので、更新式に飛ばされて次のボタンの判定に入る\n        continue\n      }\n\n      // contextのmenuをdropdownmenuに代入\n      const dropdownMenu = context._menu\n\n      // parentがshowクラスを持っていなかったら\n      if (!$(parent).hasClass(ClassName.SHOW)) {\n        // メニューが開いていないので、更新式に行く\n        continue\n      }\n\n      // イベントが存在してるのが前提\n      // イベントがclickで、イベントのターゲットタグがinputもしくはtextareaまたは、イベントがキーを離してイベントキーがタブ以外でparentの中にイベントのターゲット要素が含まれている場合\n      // /input|textarea/i.test(event.target.tagName) はmenu-itemがinputかtextareaの場合はtrue\n      if (event && (event.type === 'click' &&\n          /input|textarea/i.test(event.target.tagName) || event.type === 'keyup' && event.which === TAB_KEYCODE) &&\n          $.contains(parent, event.target)) { // parentにevent.targetが含まれているか。つまりparentのdropdownにクリックしたメニューが含まれているか\n        // つまりmenuを閉じなくてもいいイベントの場合はメニューを閉じる処理しませんよってことみたい\n        // 更新式に行く\n        continue\n      }\n\n      // hideイベントオブジェクトを定義する。\n      // relatedTargetはイベント発生時に実行する関数に渡す値(data-toggle=\"dropdown\"を持つ要素)\n      // http://www.jquerystudy.info/reference/events/event.html\n      const hideEvent = $.Event(Event.HIDE, relatedTarget)\n      // parent要素に対して、hideEventを発生去せる\n      // parentは.dropdown\n      $(parent).trigger(hideEvent)\n      // hideがブラウザの動作を停止していたら\n      if (hideEvent.isDefaultPrevented()) {\n        // 利用ユーザが特定の要素に対してe.preventDefault()みたいなのを書いたら処理をしない\n        // 更新式に行く\n        continue\n      }\n\n      // タッチデバイスだった場合、iOS用のマウスオーバリスナーを削除\n      if ('ontouchstart' in document.documentElement) {\n        $(document.body).children().off('mouseover', null, $.noop)\n      }\n\n      // toggleに'aria-expanded=falseを設定\n      toggles[i].setAttribute('aria-expanded', 'false')\n      // contextにpopperがあったら\n      if (context._popper) {\n        // popperインスタンスを削除\n        context._popper.destroy()\n      }\n\n      // .dropdown-menuの.showを削除\n      $(dropdownMenu).removeClass(ClassName.SHOW)\n      // parentの.showを削除してhiddenイベントを定義しつつ発動\n      // parentは.dropdown\n      $(parent)\n        .removeClass(ClassName.SHOW)\n        .trigger($.Event(Event.HIDDEN, relatedTarget))\n    }\n  }\n\n  static _getParentFromElement(element) {\n    // elementがボタンの要素全部になってる\n    let parent\n    // data-targetがないのでnullです。\n    const selector = Util.getSelectorFromElement(element)\n\n    // selectorが存在した場合\n    if (selector) {\n      // documentからselectorの要素を取得する\n      parent = document.querySelector(selector)\n    }\n\n    // parentが存在していたらparentを返す\n    // そうでなければ、elementのparentNodeで返す\n    // parentNodeは親ノード\n    return parent || element.parentNode\n  }\n\n  // eslint-disable-next-line complexity\n  static _dataApiKeydownHandler(event) {\n    // inputとtextareaの場合は、dropdownのコマンドを無効化する\n    if (/input|textarea/i.test(event.target.tagName)\n      ? event.which === SPACE_KEYCODE || event.which !== ESCAPE_KEYCODE &&\n      (event.which !== ARROW_DOWN_KEYCODE && event.which !== ARROW_UP_KEYCODE ||\n        $(event.target).closest(Selector.MENU).length) : !REGEXP_KEYDOWN.test(event.which)) {\n      return\n    }\n\n    // イベントを無効化して、伝藩しないようにする\n    event.preventDefault()\n    event.stopPropagation()\n\n    // disable属性または、disableクラスを持っていた場合、処理を終了する\n    if (this.disabled || $(this).hasClass(ClassName.DISABLED)) {\n      return\n    }\n\n    // dropdownの親要素を取得する\n    const parent   = Dropdown._getParentFromElement(this)\n    // parentが.showクラスを持っているか判定\n    const isActive = $(parent).hasClass(ClassName.SHOW)\n\n    // isActiveがfalseか、event.whichがエスケープキーだった場合、処理を終了させる\n    if (!isActive && event.which === ESCAPE_KEYCODE) {\n      return\n    }\n\n    // isActiveがfalseまたは、isActiveがtrueかつエスケープキーが押下された場合もしくは、スペースキーが押下された場合\n    if (!isActive || isActive && (event.which === ESCAPE_KEYCODE || event.which === SPACE_KEYCODE)) {\n      // エスキープキーだった場合\n      if (event.which === ESCAPE_KEYCODE) {\n        // parentのdata_toggleを持つ要素を取得\n        const toggle = parent.querySelector(Selector.DATA_TOGGLE)\n        // toggleをフォーカスする\n        $(toggle).trigger('focus')\n      }\n\n      // クリップイベントを発動する\n      $(this).trigger('click')\n      return\n    }\n\n    // disableしてないdropdown-menuとdropdown-itemを取得して、visibleのみを残す\n    const items = [].slice.call(parent.querySelectorAll(Selector.VISIBLE_ITEMS))\n      .filter((item) => $(item).is(':visible'))\n\n    // itemsで取得したものがなかったら処理終了\n    if (items.length === 0) {\n      return\n    }\n\n    // event.targetが何番目か取得する\n    let index = items.indexOf(event.target)\n\n    // 上キーが押されていて、indexが0よりおおきかったら\n    if (event.which === ARROW_UP_KEYCODE && index > 0) {\n      // indexを-1する\n      index--\n    }\n\n    // 下キーが押されていて、indexがindexの長さ-1より小さかったら\n    if (event.which === ARROW_DOWN_KEYCODE && index < items.length - 1) {\n      // indexを＋1する\n      index++\n    }\n\n      // indexが0より小さかったら\n    if (index < 0) {\n      // indexを0にする\n      index = 0\n    }\n\n    // drop-down-itemのindex番目をfucusする\n    items[index].focus()\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document)\n  // data-toggle=\"dropdown\"のキーイベントを登録\n  .on(Event.KEYDOWN_DATA_API, Selector.DATA_TOGGLE, Dropdown._dataApiKeydownHandler)\n  // .dropdown-menuのキーイベントを登録\n  .on(Event.KEYDOWN_DATA_API, Selector.MENU, Dropdown._dataApiKeydownHandler)\n  // メニュークリーンを登録\n  .on(`${Event.CLICK_DATA_API} ${Event.KEYUP_DATA_API}`, Dropdown._clearMenus)\n  // [data-toggle=\"dropdown\"]のイベント伝藩を止めて、jQueryInterfaceをcallする\n  .on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n    event.preventDefault()\n    event.stopPropagation()\n    Dropdown._jQueryInterface.call($(this), 'toggle')\n  })\n  // イベントが伝藩しないようにする\n  .on(Event.CLICK_DATA_API, Selector.FORM_CHILD, (e) => {\n    e.stopPropagation()\n  })\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Dropdown._jQueryInterface\n$.fn[NAME].Constructor = Dropdown\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Dropdown._jQueryInterface\n}\n\n\nexport default Dropdown\n"]}